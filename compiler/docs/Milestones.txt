0.1
	* Parses ASTs, executes basic metaprograms, and produces valid .class files.
	* Probably uses subprocess calls to invoke compiler for sake of simplicity; thus, may be system-dependent.
	* No support for dependency analysis.
	* No support for code literal sugar or splicing.
	* No support for metaprogram local methods or global metaprogram imports.
	* No support for annotational metaprogram sugar.
	* No preamble processing.
	
0.2
	* Preamble processing added.
	* Local metaprogram method declarations.

0.3
	* Dependency analysis.
	* No support for resolving concurrent metaprogram execution; all metaprograms must have unique target names.

0.4
	* Support for shared target names with AST manipulation merges.  Detect conflicts as necessary.
	* Static metaprogram dependency sugar.

0.5
	* Bulk import sugar.
	* Code literal and splice sugar.
	* Annotational metaprogram sugar.

0.6
	* Java Compiler API integration
	
General Future Targets
	* Performance tuning and general niftiness.
	* Generated Java source should look as much as possible like original static source in BSJ file.
