#!/bin/bash

tdir()
{
    if [ ! -d "$1" ]; then
        echo "Missing expected directory in current path: $1 does not exist."
    fi
}

infile()
{
    grep "$2" "$1" >&/dev/null
}

padleft()
{
    s="$1"
    while [ "${#s}" -lt "$2" ]; do
        s="$3$s"
    done
    echo "$s"
}

padright()
{
    s="$1"
    while [ "${#s}" -lt "$2" ]; do
        s="$s$3"
    done
    echo "$s"
}

statsforlist()
{
    files="$1"
    if [ -z "$files" ]; then
        count=0
    else
        count="$(cat $files | egrep -v '^$' | wc -l)"
    fi
    echo "        with comments:    $(padleft "$count" 8 ' ')" 
    if [ -z "$files" ]; then
        count=0
    else
        count="$(sloccount $files | grep 'Total Physical Source Lines of Code (SLOC)' | egrep -o '[0-9,]+$' | tr -d ',')"
    fi
    echo "        without comments: $(padleft "$count" 8 ' ')" 
}

perFileLineCount()
{
    echo "########## $2"
    total=0
    echo "$1" | while read line; do
        count="$(cat "$line" | egrep -v '^$' | wc -l)"
        total="$(($total+$count))"
        echo "$line: $count ($total)"
    done
    echo "LARGE FILES:"
    echo "$1" | while read line; do
        count="$(cat "$line" | egrep -v '^$' | wc -l)"
        [ "$count" -gt 999 ] && echo "***** $line: $count";
    done
}

getstats()
{
    files="$(find $* -type f | egrep '\.(g|java)$' | grep -v 'resources/source-code' | grep -v '.svn')"
    genfiles="$(echo "$files" | while read line; do (infile "$line" "@Generated" || infile "$line" "@javax.annotation.Generated") && echo "$line"; done)"
    ngenfiles="$(echo "$files" | while read line; do (infile "$line" "@Generated" || infile "$line" "@javax.annotation.Generated") || echo "$line"; done)"
    if [ "$debug" = 'y' ]; then
        perFileLineCount "$genfiles" "Generated files"
        perFileLineCount "$ngenfiles" "Non-generated files"
    fi
    echo "    Overall:"
    statsforlist "$files"
    echo "    Generated:"
    statsforlist "$genfiles"
    echo "    Non-generated:"
    statsforlist "$ngenfiles"
}

debug='n'
targets=""

while [ "$#" -gt 0 -a "${1:0:1}" = "-" ]; do
    case "$1" in
        '-d')
            debug='y'
            shift
            ;;
        *)
            echo "Invalid argument: $1"
            exit 1
            ;;
    esac
done

targets="$*"

if [ -n "$targets" ]; then
    error='n'
    for d in $targets; do
        if [ -d "$d" ]; then
            echo "$d:"
            getstats "$d"
        else
            echo "$d does not exist"
            error='y'
        fi
    done
    [ $error = 'y' ] && exit 1 || exit 0
fi

tdir api
tdir generator
tdir parser
tdir stdlib
tdir utils
tdir tests

echo "Compiler project:"
getstats api parser generator utils
echo "Standard libraries:"
getstats stdlib
echo "Unit tests:"
getstats tests
echo "Overall:"
getstats api parser generator utils stdlib tests
