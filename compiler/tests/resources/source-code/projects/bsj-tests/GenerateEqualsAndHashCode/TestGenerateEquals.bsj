public class TestGenerateEquals {
	static void runOneTest(boolean b) {
		runOneTest(b, "");
	}
	static void runOneTest(boolean b, String addon) {
		if (b) {
			System.out.println("SUCCESS: " + addon);
		} else {
			System.out.println("FAILURE: " + addon);
		}
	}
	static void testInheritsFromObjectWithEquals() {
		InheritsFromObjectWithEquals o1 = new InheritsFromObjectWithEquals(5);
		InheritsFromObjectWithEquals o1Cloned = new InheritsFromObjectWithEquals(5);
		InheritsFromObjectWithEquals o2 = new InheritsFromObjectWithEquals(4);
		runOneTest(o1.equals(o1Cloned));
		runOneTest(!o1.equals(o2));
	}
	private static void testInheritsFromObjectWithoutEquals() {
		InheritsFromObjectWithoutEquals o1 = new InheritsFromObjectWithoutEquals(5);
		InheritsFromObjectWithoutEquals o1Cloned = new InheritsFromObjectWithoutEquals(5);
		runOneTest(!o1.equals(o1Cloned));
	}
	private static void testInheritsFromClassWithoutEquals() {
		InheritsFromClassWithoutEquals o1 = new InheritsFromClassWithoutEquals(5, 4);
		InheritsFromClassWithoutEquals o1Cloned = new InheritsFromClassWithoutEquals(5, 4);
		InheritsFromClassWithoutEquals o2 = new InheritsFromClassWithoutEquals(5, 3);
		InheritsFromClassWithoutEquals o3 = new InheritsFromClassWithoutEquals(4, 4);
		runOneTest(o1.equals(o1Cloned));
		runOneTest(!o1.equals(o2));
		runOneTest(o1.equals(o3));
		runOneTest(!o2.equals(o3));
	}
	private static void testInheritsFromClass() {
		InheritsFromClass o1 = new InheritsFromClass(5, 4);
		InheritsFromClass o1Cloned = new InheritsFromClass(5, 4);
		InheritsFromClass o2 = new InheritsFromClass(5, 3);
		InheritsFromClass o3 = new InheritsFromClass(4, 4);
		runOneTest(o1.equals(o1Cloned));
		runOneTest(!o1.equals(o2));
		runOneTest(!o1.equals(o3), "first parameter differs");
		runOneTest(!o2.equals(o3));
	}
	public static void main(String[] args) {
		testInheritsFromObjectWithoutEquals();
		testInheritsFromObjectWithoutEquals();
		testInheritsFromClassWithoutEquals();
		testInheritsFromClass();
	}
}