// $ANTLR 3.1.3 Mar 18, 2009 10:09:25 /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g 2011-01-30 19:32:42

    package edu.jhu.cs.bsj.compiler.impl.tool.parser.antlr;
    
    import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Stack;

import javax.tools.DiagnosticListener;

import org.antlr.runtime.BaseRecognizer;
import org.antlr.runtime.BitSet;
import org.antlr.runtime.DFA;
import org.antlr.runtime.EarlyExitException;
import org.antlr.runtime.FailedPredicateException;
import org.antlr.runtime.IntStream;
import org.antlr.runtime.MismatchedSetException;
import org.antlr.runtime.NoViableAltException;
import org.antlr.runtime.Parser;
import org.antlr.runtime.ParserRuleReturnScope;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.RecognizerSharedState;
import org.antlr.runtime.Token;
import org.antlr.runtime.TokenStream;
import org.apache.log4j.Logger;

import edu.jhu.cs.bsj.compiler.ast.AccessModifier;
import edu.jhu.cs.bsj.compiler.ast.AssignmentOperator;
import edu.jhu.cs.bsj.compiler.ast.BinaryOperator;
import edu.jhu.cs.bsj.compiler.ast.BsjNodeFactory;
import edu.jhu.cs.bsj.compiler.ast.BsjSourceLocation;
import edu.jhu.cs.bsj.compiler.ast.MetaprogramLocalMode;
import edu.jhu.cs.bsj.compiler.ast.MetaprogramPackageMode;
import edu.jhu.cs.bsj.compiler.ast.NodeUnion;
import edu.jhu.cs.bsj.compiler.ast.PrimitiveType;
import edu.jhu.cs.bsj.compiler.ast.UnaryOperator;
import edu.jhu.cs.bsj.compiler.ast.UnaryStatementOperator;
import edu.jhu.cs.bsj.compiler.ast.node.*;
import edu.jhu.cs.bsj.compiler.ast.node.list.AnnotationElementListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.AnnotationListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.AnnotationMemberListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.AnnotationValueListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.AnonymousClassMemberListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.BlockStatementListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.CaseListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.CatchListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.ClassMemberListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.DeclaredTypeListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.EnumConstantDeclarationListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.ExpressionListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.IdentifierListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.ImportListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.InterfaceMemberListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.ReferenceTypeListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.StatementExpressionListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.TypeArgumentListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.TypeDeclarationListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.TypeParameterListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.UnparameterizedTypeListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.VariableDeclaratorListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.VariableInitializerListNode;
import edu.jhu.cs.bsj.compiler.ast.node.list.VariableListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.AnnotationMemberMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.AnonymousClassMemberMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.BlockStatementMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.ClassMemberMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.InterfaceMemberMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationArrayValueNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationElementListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationElementNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationValueListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaAnnotationValueNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramDependencyDeclarationListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramDependencyDeclarationNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramDependencyListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramDependencyNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramImportListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramImportNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramPreambleNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramTargetListNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.MetaprogramTargetNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.RawCodeLiteralNode;
import edu.jhu.cs.bsj.compiler.ast.node.meta.TypeDeclarationMetaprogramAnchorNode;
import edu.jhu.cs.bsj.compiler.ast.util.BsjNodeFactoryDecorator;
import edu.jhu.cs.bsj.compiler.diagnostic.BsjDiagnostic;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.ConflictingAccessModifierDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.ConflictingModeDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.DuplicateModeDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.DuplicateModifierDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.InvalidModeDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.InvalidModifierDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.impl.diagnostic.parser.RuleParseFailureDiagnosticImpl;
import edu.jhu.cs.bsj.compiler.tool.parser.antlr.BsjRawCodeLiteralPayloadAntlrImpl;
import edu.jhu.cs.bsj.compiler.tool.parser.antlr.BsjTokenImpl;
import edu.jhu.cs.bsj.compiler.tool.parser.antlr.util.BsjAntlrParserUtils;
import edu.jhu.cs.bsj.compiler.tool.parser.antlr.util.BsjParserConfiguration;
import edu.jhu.cs.bsj.compiler.tool.typechecker.BsjTypechecker;
@javax.annotation.Generated("org.antlr.Tool") @SuppressWarnings({"unchecked","unused","rawtypes"}) public class BsjAntlrParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "CODELITERAL_START", "CODELITERAL_STOP", "THROWS", "EXTENDS", "SUPER", "THIS", "NEW", "INTLITERAL", "LONGLITERAL", "FLOATLITERAL", "DOUBLELITERAL", "CHARLITERAL", "STRINGLITERAL", "TRUE", "FALSE", "NULL", "IDENTIFIER", "METAIMPORT", "METATARGET", "METADEPENDS", "METAWEAK", "METAPROGRAM_START", "METAPROGRAM_STOP", "IntegerNumber", "LongSuffix", "HexPrefix", "HexDigit", "Exponent", "NonIntegerNumber", "FloatSuffix", "DoubleSuffix", "EscapeSequence", "WS", "COMMENT", "LINE_COMMENT", "ABSTRACT", "ASSERT", "BOOLEAN", "BREAK", "BYTE", "CASE", "CATCH", "CHAR", "CLASS", "CONST", "CONTINUE", "DEFAULT", "DO", "DOUBLE", "ELSE", "ENUM", "FINAL", "FINALLY", "FLOAT", "FOR", "GOTO", "IF", "IMPLEMENTS", "IMPORT", "INSTANCEOF", "INT", "INTERFACE", "LONG", "NATIVE", "PACKAGE", "PRIVATE", "PROTECTED", "PUBLIC", "RETURN", "SHORT", "STATIC", "STRICTFP", "SWITCH", "SYNCHRONIZED", "THROW", "TRANSIENT", "TRY", "VOID", "VOLATILE", "WHILE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "SEMI", "COMMA", "DOT", "ELLIPSIS", "EQ", "BANG", "TILDE", "QUES", "COLON", "EQEQ", "AMPAMP", "BARBAR", "PLUSPLUS", "SUBSUB", "PLUS", "SUB", "STAR", "SLASH", "AMP", "BAR", "CARET", "PERCENT", "PLUSEQ", "SUBEQ", "STAREQ", "SLASHEQ", "AMPEQ", "BAREQ", "CARETEQ", "PERCENTEQ", "MONKEYS_AT", "BANGEQ", "GT", "LT", "IdentifierStart", "IdentifierPart", "SurrogateIdentifer", "'#mode'", "'~:'", "':~'"
    };
    public static final int PACKAGE=68;
    public static final int LT=123;
    public static final int STAR=106;
    public static final int WHILE=83;
    public static final int CONST=48;
    public static final int CASE=44;
    public static final int NEW=10;
    public static final int CHAR=46;
    public static final int DO=51;
    public static final int METAIMPORT=21;
    public static final int EOF=-1;
    public static final int BREAK=42;
    public static final int LBRACKET=88;
    public static final int FINAL=55;
    public static final int RPAREN=85;
    public static final int IMPORT=62;
    public static final int SUBSUB=103;
    public static final int STAREQ=114;
    public static final int FloatSuffix=33;
    public static final int NonIntegerNumber=32;
    public static final int CARET=110;
    public static final int METAWEAK=24;
    public static final int THIS=9;
    public static final int RETURN=72;
    public static final int DOUBLE=52;
    public static final int MONKEYS_AT=120;
    public static final int BARBAR=101;
    public static final int VOID=81;
    public static final int SUPER=8;
    public static final int EQ=94;
    public static final int GOTO=59;
    public static final int AMPAMP=100;
    public static final int COMMENT=37;
    public static final int METAPROGRAM_START=25;
    public static final int CODELITERAL_START=4;
    public static final int QUES=97;
    public static final int EQEQ=99;
    public static final int HexPrefix=29;
    public static final int METADEPENDS=23;
    public static final int RBRACE=87;
    public static final int LINE_COMMENT=38;
    public static final int PRIVATE=69;
    public static final int STATIC=74;
    public static final int SWITCH=76;
    public static final int NULL=19;
    public static final int ELSE=53;
    public static final int STRICTFP=75;
    public static final int DOUBLELITERAL=14;
    public static final int IdentifierStart=124;
    public static final int ELLIPSIS=93;
    public static final int NATIVE=67;
    public static final int THROWS=6;
    public static final int INT=64;
    public static final int SLASHEQ=115;
    public static final int INTLITERAL=11;
    public static final int ASSERT=40;
    public static final int TRY=80;
    public static final int LongSuffix=28;
    public static final int LONGLITERAL=12;
    public static final int T__128=128;
    public static final int T__127=127;
    public static final int WS=36;
    public static final int T__129=129;
    public static final int SurrogateIdentifer=126;
    public static final int CHARLITERAL=15;
    public static final int GT=122;
    public static final int CATCH=45;
    public static final int FALSE=18;
    public static final int CODELITERAL_STOP=5;
    public static final int EscapeSequence=35;
    public static final int THROW=78;
    public static final int PROTECTED=70;
    public static final int CLASS=47;
    public static final int BAREQ=117;
    public static final int IntegerNumber=27;
    public static final int AMP=108;
    public static final int PLUSPLUS=102;
    public static final int LBRACE=86;
    public static final int SUBEQ=113;
    public static final int Exponent=31;
    public static final int FOR=58;
    public static final int SUB=105;
    public static final int FLOAT=57;
    public static final int ABSTRACT=39;
    public static final int METATARGET=22;
    public static final int HexDigit=30;
    public static final int PLUSEQ=112;
    public static final int LPAREN=84;
    public static final int IF=60;
    public static final int SLASH=107;
    public static final int BOOLEAN=41;
    public static final int SYNCHRONIZED=77;
    public static final int IMPLEMENTS=61;
    public static final int CONTINUE=49;
    public static final int COMMA=91;
    public static final int AMPEQ=116;
    public static final int IDENTIFIER=20;
    public static final int TRANSIENT=79;
    public static final int TILDE=96;
    public static final int BANGEQ=121;
    public static final int PLUS=104;
    public static final int RBRACKET=89;
    public static final int DOT=92;
    public static final int IdentifierPart=125;
    public static final int BYTE=43;
    public static final int PERCENT=111;
    public static final int VOLATILE=82;
    public static final int METAPROGRAM_STOP=26;
    public static final int DEFAULT=50;
    public static final int SHORT=73;
    public static final int BANG=95;
    public static final int INSTANCEOF=63;
    public static final int SEMI=90;
    public static final int TRUE=17;
    public static final int COLON=98;
    public static final int ENUM=54;
    public static final int PERCENTEQ=119;
    public static final int DoubleSuffix=34;
    public static final int FINALLY=56;
    public static final int STRINGLITERAL=16;
    public static final int CARETEQ=118;
    public static final int INTERFACE=65;
    public static final int LONG=66;
    public static final int EXTENDS=7;
    public static final int FLOATLITERAL=13;
    public static final int PUBLIC=71;
    public static final int BAR=109;

    // delegates
    // delegators

    protected static class Rule_scope {
        String name;
        Token firstToken;
    }
    protected Stack Rule_stack = new Stack();


        public BsjAntlrParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public BsjAntlrParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return BsjAntlrParser.tokenNames; }
    public String getGrammarFileName() { return "/home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g"; }


        // *** LOG4J **************************************************************
        private Logger logger = Logger.getLogger(this.getClass());
        
        // *** BSJ PARSING CONTROL ************************************************
        /** The configuration of this parser. */
        private BsjParserConfiguration configuration = BsjParserConfiguration.BSJ_1_0;
        /**
         * Changes the configuration of this parser.
         */
        public void setConfiguration(BsjParserConfiguration configuration)
        {
            this.configuration = configuration;
        }
        
        // *** SOURCE LOCATION TRACKING *******************************************
        /** The resource which is being parsed. */
        private String resourceName;
        /**
         * Produces a resource name for the resource in this parser.
         */
        public String getResourceName()
        {
            return (this.resourceName == null) ? "<unknown>" : resourceName;
        }
        /**
         * Produces a resource name for the resource in this parser.
         */
        public void setResourceName(String resourceName)
        {
            this.resourceName = resourceName;
        }
        /**
         * Retrieves the line number for the specified relative token index (as per input.LT).
         */
        protected int getLineNumber(int rel)
        {
            return getLineNumber(input.LT(rel));
        }
        /**
         * Retrieves the line number for the specified relative token index (as per input.LT).
         */
        protected int getColumnNumber(int rel)
        {
            return getColumnNumber(input.LT(rel));
        }
        /**
         * Retrieves the line number for the specified token.
         */
        protected int getLineNumber(Token token)
        {
            if (token == null)
            {
                return BsjSourceLocation.NOPOS;
            } else
            {
                return token.getLine();
            }
        }
        /**
         * Retrieves the line number for the specified token.
         */
        protected int getColumnNumber(Token token)
        {
            if (token == null)
            {
                return BsjSourceLocation.NOPOS;
            } else
            {
                return token.getCharPositionInLine() + 1;
            }
        }
        /**
         * Retrieves a source location object describing the start of the specified relative token index (as per input.LT).
         */
        protected BsjSourceLocation getSourceLocation(int rel)
        {
            return new BsjSourceLocation(getResourceName(), getLineNumber(rel), getColumnNumber(rel));
        }
        /**
         * Retrieves a source location object describing the start of the specified relative token index (as per input.LT).
         */
        protected BsjSourceLocation getSourceLocation(Token token)
        {
            return new BsjSourceLocation(getResourceName(), getLineNumber(token), getColumnNumber(token));
        }

        // *** FACTORY NODE PROPERTY **********************************************
        /**
         * Factory used to generate nodes for the parser.
         */
        private BsjNodeFactory factory;
        
        public BsjNodeFactory getFactory()
        {
            return this.factory;
        }
        
        /** Used to override the factory's concept of source locations for the current node.  If set, the factory will not
         *  assign source locations (meaning that the caller of the make method must provide them). */
        private boolean factorySourceLocationOverride = false;
        
        public void setFactory(BsjNodeFactory factory)
        {
            this.factory = new BsjNodeFactoryDecorator(factory)
            {
                protected void before()
                {
                    if (!factorySourceLocationOverride)
                    {
                        BsjSourceLocation start = 
                                new BsjSourceLocation(getResourceName(), ((Rule_scope)Rule_stack.peek()).firstToken.getLine(),
                                        ((Rule_scope)Rule_stack.peek()).firstToken.getCharPositionInLine() + 1);
                        setStartSourceLocation(start);
                        
                        BsjSourceLocation stop;
                        Token token = input.LT(-1);
                        if (token == null)
                        {
                            stop = new BsjSourceLocation(getResourceName(), BsjSourceLocation.NOPOS, BsjSourceLocation.NOPOS);
                        } else
                        {
                            stop = new BsjSourceLocation(getResourceName(), token.getLine(),
                                    token.getCharPositionInLine() + token.getText().length() + 1);
                        }
                        
                        // If the start location is greater than the stop location, then the last token consumed appears
                        // before the next token when the rule started.  In other words, the rule consumed no tokens.
                        // Therefore, we give the stop location as matching the start location.
                        if (start.compareTo(stop) > 0)
                        {
                            stop = start;
                        }
                        setStopSourceLocation(stop);
                        
                        if (logger.isTraceEnabled())
                        {
                            logger.trace("Created node while parsing rule " + ((Rule_scope)Rule_stack.peek()).name);
                            logger.trace("First token = " +
                                    ((((Rule_scope)Rule_stack.peek()).firstToken==null)?
                                    "null" : (((Rule_scope)Rule_stack.peek()).firstToken.getText())) +
                                    " at " + start);
                            logger.trace("Last token = " +
                                    ((token==null)?
                                    "null" : (token.getText())) +
                                " at " + stop);
                        }
                    }
                }
                
                protected void after(Node node)
                {
                    if (logger.isTraceEnabled())
                    {
                        logger.trace("Instantiated node of type " + node.getClass().getSimpleName() + " as " +
                                node.toString());
                        logger.trace("input.LT(1) = " + input.LT(1));
                        logger.trace("input.LT(-1) = " + input.LT(-1));
                    }
                }
            };
        }
        
        // *** SUPPORT FOR MODIFIER PARSING ***************************************
        enum Modifier // does not cover access modifiers
        {
            ABSTRACT, 
            FINAL,
            NATIVE,
            PRIVATE,
            PROTECTED,
            PUBLIC,
            STATIC,
            STRICTFP,
            SYNCHRONIZED,
            TRANSIENT,
            VOLATILE
        }
        enum ModifierState
        {
            DISALLOWED,
            NOT_SEEN,
            SEEN
        }
        class ModifierSet
        {
            ModifierState[] state = new ModifierState[Modifier.values().length];
            public ModifierSet(Modifier... allowed)
            {
                for (int i=0;i<state.length;i++)
                {
                    state[i] = ModifierState.DISALLOWED;
                }
                for (int i=0;i<allowed.length;i++)
                {
                    state[allowed[i].ordinal()] = ModifierState.NOT_SEEN;
                }
            }
            public boolean has(Modifier mod)
            {
                return (state[mod.ordinal()] == ModifierState.SEEN);
            }
            public void notifySeen(Modifier mod)
            {
                switch (state[mod.ordinal()])
                {
                    case DISALLOWED:
                        reportDiagnostic(new InvalidModifierDiagnosticImpl(
                                getSourceLocation(-1),
                                ((Rule_scope)Rule_stack.peek()).name,
                                mod.toString().toLowerCase()));
                        break;
                    case NOT_SEEN:
                        state[mod.ordinal()] = ModifierState.SEEN;
                        break;
                    case SEEN:
                        reportDiagnostic(new DuplicateModifierDiagnosticImpl(
                                getSourceLocation(-1),
                                ((Rule_scope)Rule_stack.peek()).name,
                                mod.toString().toLowerCase()));
                        break;
                }
            }
        }
        
        // *** SUPPORT FOR MODE PARSING *******************************************
        class ModeValues
        {
            private MetaprogramLocalMode localMode = null;
            private MetaprogramPackageMode packageMode = null;
            
            private boolean checkDuplicateOrConflicting(Object oldObj, Object newObj, BsjSourceLocation location)
            {
                if (oldObj == null)
                    return false;
                
                if (oldObj == newObj)
                {
                    reportDiagnostic(new DuplicateModeDiagnosticImpl(
                            location,
                            ((Rule_scope)Rule_stack.peek()).name,
                            newObj.toString()));
                } else
                {
                    reportDiagnostic(new ConflictingModeDiagnosticImpl(
                            location,
                            ((Rule_scope)Rule_stack.peek()).name,
                            oldObj.toString(),
                            newObj.toString()));
                }
                return true;
            }
            
            public void setLocalMode(MetaprogramLocalMode localMode, BsjSourceLocation location)
            {
                if (!checkDuplicateOrConflicting(this.localMode, localMode, location))
                {
                    this.localMode = localMode;
                }
            }
            
            public void setPackageMode(MetaprogramPackageMode packageMode, BsjSourceLocation location)
            {
                if (!checkDuplicateOrConflicting(this.packageMode, packageMode, location))
                {
                    this.packageMode = packageMode;
                }
            }
            
            public MetaprogramLocalMode getLocalMode()
            {
                if (this.localMode == null)
                    return MetaprogramLocalMode.INSERT;
                else
                    return this.localMode;
            }
            
            public MetaprogramPackageMode getPackageMode()
            {
                if (this.packageMode == null)
                    return MetaprogramPackageMode.READ_ONLY;
                else
                    return this.packageMode;
            }
            
            public void parse(IdentifierNode identifierNode)
            {
                String id = identifierNode.getIdentifier();
                BsjSourceLocation location = identifierNode.getStartLocation();
                if (id.equals("readOnly"))
                {
                    setLocalMode(MetaprogramLocalMode.READ_ONLY, location);
                } else if (id.equals("insert"))
                {
                    setLocalMode(MetaprogramLocalMode.INSERT, location);
                } else if (id.equals("mutate"))
                {
                    setLocalMode(MetaprogramLocalMode.MUTATE, location);
                } else if (id.equals("fullMutate"))
                {
                    setLocalMode(MetaprogramLocalMode.FULL_MUTATE, location);
                } else if (id.equals("packageRead"))
                {
                    setPackageMode(MetaprogramPackageMode.READ_ONLY, location);
                } else if (id.equals("packageInsert"))
                {
                    setPackageMode(MetaprogramPackageMode.INSERT, location);
                } else 
                {
                    reportDiagnostic(new InvalidModeDiagnosticImpl(
                            location,
                            ((Rule_scope)Rule_stack.peek()).name,
                            id));
                }
            }
        }
        
        // *** SUPPORT FOR TYPECHECKING SPLICES ***********************************
        /**
         * The current typechecker to use when typechecking splice expressions.  If <code>null</code>, splice expressions
         * are forbidden.
         */
        private BsjTypechecker spliceTypechecker;
        /**
         * The AST node that should be used for a typechecking context when typechecking splices.
         */
        private Node spliceContext;
        /**
         * Sets up the typechecking context for this parser.
         * @param spliceTypechecker The typechecker to use when checking splices or <code>null</code> if splices are not
         *                          allowed.
         * @param spliceContext The AST node that should be used for a typechecking context when typechecking splices.  If
         *                      <code>spliceTypechecker</code> is <code>null</code>, this value is ignored.
         */
        public void setTypecheckingContext(BsjTypechecker spliceTypechecker, Node spliceContext)
        {
            this.spliceTypechecker = spliceTypechecker;
            if (spliceTypechecker != null)
            {
                this.spliceContext = spliceContext;
            }
        }
        
        // *** ERROR REPORTING AND HANDLING ***************************************
        /** The diagnostic listener to which we report events. */
        private DiagnosticListener<BsjSourceLocation> diagnosticListener;
        
        /** Assigns a diagnostic listener to this parser. */
        public void setDiagnosticListener(DiagnosticListener<BsjSourceLocation> diagnosticListener)
        {
            this.diagnosticListener = diagnosticListener;
        }
        
        /** Reports a diagnostic. */
        private void reportDiagnostic(BsjDiagnostic diagnostic)
        {
            reportDiagnostic(diagnostic, false);
        }
        
        /** Reports a diagnostic. */
        private void reportDiagnostic(BsjDiagnostic diagnostic, boolean force)
        {
            if (logger.isTraceEnabled())
            {
                logger.trace("Received diagnostic (force="+force+",bt="+state.backtracking+"): "+diagnostic.getMessage(null));
            }
            if (state.backtracking == 0 || force)
            {
                this.diagnosticListener.report(diagnostic);
            }
        }
            
        /**
         * Overrides the mechanism for displaying recognition errors.  While it is possible to do something very similar by
         * overriding emitErrorMessage, this method is extracted instead in order to allow the exception itself to be
         * trapped for more informative error handling.
         */
        @Override
        public void displayRecognitionError(String[] tokenNames, RecognitionException e)
        {
            BsjDiagnostic diagnostic =
                    BsjAntlrParserUtils.convertFromParser(e, tokenNames, getSourceLocation(1), input.LT(1), ((Rule_scope)Rule_stack.peek()).name);
            reportDiagnostic(diagnostic, true);
        }
        
        // *** PARSING ACTION SUPPORT *********************************************
        // Extracts the content of a javadoc comment into a string.
        public static String parseJavadoc(String input)
        {
           // verify that this is a stored javadoc
           input = input.trim();
           if (!(input.startsWith("/**") && input.endsWith("*/")))
           {
             throw new IllegalStateException("Invalid javadoc comment");
           }
           
           // remove /** and */
           input = input.substring(3, input.length()-2);
           
           // parse out individual lines
           String tokens[] = input.split("\n");
           StringBuilder ret = new StringBuilder();
           for (String temp : tokens)
           {
             temp = temp.trim();
             if (!temp.isEmpty() && temp.charAt(0) == '*')
             {
               temp = temp.replaceFirst("\\*", "");
             }
             ret.append(temp.trim()).append("\n");
           }
           
           return ret.toString().trim();
        }
        
        /**
         * Creates a splice node given the specified expression.  This method is parameterized so as to select the type
         * of created splice node based on the type of the provided class.
         */ 
        private <T extends Node> NodeUnion<T> createSpliceNodeUnion(Class<T> expectedType, ExpressionNode expr)
        {
           return factory.<T>makeSpliceNodeUnion(factory.makeSpliceNode(expr));
        }
        
        /**
         * Creates a duplicate copy of the provided node's union.  Casts that copy to the provided type.
         * @param union The union to copy.
         * @param type The type of the node in the union.
         * @return The copied union.
         */
        private <T extends Node> NodeUnion<T> deepCopyUnion(NodeUnion<? extends T> union, Class<T> type)
        {
            switch (union.getType())
            {
                case NORMAL:
                    return factory.<Node>makeNormalNodeUnion(union.getNormalNode().deepCopy(factory)).castNodeType(factory, type);
                case SPLICE:
                    return factory.<T>makeSpliceNodeUnion(union.getSpliceNode());
                default:
                    throw new IllegalStateException("Unknown union type: " + union.getType());
            }
        }
        
        /**
         * Performs type wrapping for a counted array type.
         * @param type The node representing the type which is wrapped in array levels.
         * @param levels The number of levels to wrap.
         * @return The resulting type.
         */
        private NodeUnion<? extends ArrayTypeNode> wrapArrayLevels(NodeUnion<? extends TypeNode> type, int levels)
        {
            if (levels < 1)
                throw new IllegalArgumentException("Invalid number of array levels: " + levels);
            
            NodeUnion<? extends ArrayTypeNode> ret = factory.makeNormalNodeUnion(factory.makeArrayTypeNodeWithUnions(type));
            for (int i=1;i<levels;i++)
            {
                ret = factory.makeNormalNodeUnion(factory.makeArrayTypeNodeWithUnions(ret));
            }        
            return ret;
        }
        
        // *** RULE AOP METHODS ***************************************************
        private void ruleStart(String ruleName)
        {
            ((Rule_scope)Rule_stack.peek()).name = ruleName;
            ((Rule_scope)Rule_stack.peek()).firstToken = input.LT(1);
            if (logger.isTraceEnabled())
            {
                logger.trace("Rule started: " + ruleName);
                logger.trace("    currently at " + getSourceLocation(1) + " with token text '" + input.LT(1).getText() +
                        "' and backtracking = " + state.backtracking);
                StringBuilder sb = new StringBuilder("    Rule stack: ");
                boolean first = true;
                List<Rule_scope> rules = new java.util.LinkedList<Rule_scope>();
                for (Object ruleObj : Rule_stack)
                {
                    rules.add(0, (Rule_scope)ruleObj);
                }
                for (Rule_scope rule : rules)
                {
                    if (!first)
                        sb.append(" << ");
                    sb.append(rule.name);
                    first = false;
                }
                logger.trace(sb.toString());
            }
        }
        
        private void ruleStop()
        {
            if (logger.isTraceEnabled())
            {
                logger.trace("Rule stopped: " + ((Rule_scope)Rule_stack.peek()).name);
            }
        }



    // $ANTLR start "arrayTypeCounter"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:728:1: arrayTypeCounter returns [int ret] : '[' ']' ( '[' ']' )* ;
    public final int arrayTypeCounter() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        int ret = 0;


                    ruleStart("arrayTypeCounter");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:749:5: ( '[' ']' ( '[' ']' )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:750:9: '[' ']' ( '[' ']' )*
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayTypeCounter153); if (state.failed) return ret;
            match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayTypeCounter155); if (state.failed) return ret;
            if (  true  ) {

                          ret = 1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:754:9: ( '[' ']' )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==LBRACKET) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:755:13: '[' ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayTypeCounter189); if (state.failed) return ret;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayTypeCounter191); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret++;
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayTypeCounter"


    // $ANTLR start "bsjMetaprogram"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:768:1: bsjMetaprogram returns [NodeUnion<? extends MetaprogramNode> ret] : ( splice[MetaprogramNode.class, Arrays.<Class<? extends Node>>asList()] | '[:' preamble optionalBlockStatementList ':]' );
    public final NodeUnion<? extends MetaprogramNode> bsjMetaprogram() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramNode> ret = null;

        NodeUnion<? extends Node> splice1 = null;

        NodeUnion<? extends MetaprogramPreambleNode> preamble2 = null;

        NodeUnion<? extends BlockStatementListNode> optionalBlockStatementList3 = null;



                    ruleStart("bsjMetaprogram");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:776:5: ( splice[MetaprogramNode.class, Arrays.<Class<? extends Node>>asList()] | '[:' preamble optionalBlockStatementList ':]' )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt2=1;
            }
            else if ( (LA2_0==METAPROGRAM_START) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:777:9: splice[MetaprogramNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_bsjMetaprogram289);
                    splice1=splice(MetaprogramNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice1 != null) // TODO: fix this with error nodes
                                      ret = splice1.castNodeType(factory, MetaprogramNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:783:9: '[:' preamble optionalBlockStatementList ':]'
                    {
                    match(input,METAPROGRAM_START,FOLLOW_METAPROGRAM_START_in_bsjMetaprogram316); if (state.failed) return ret;
                    pushFollow(FOLLOW_preamble_in_bsjMetaprogram326);
                    preamble2=preamble();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalBlockStatementList_in_bsjMetaprogram336);
                    optionalBlockStatementList3=optionalBlockStatementList();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,METAPROGRAM_STOP,FOLLOW_METAPROGRAM_STOP_in_bsjMetaprogram346); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(
                                          factory.makeMetaprogramNodeWithUnions(preamble2, optionalBlockStatementList3));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "bsjMetaprogram"


    // $ANTLR start "preamble"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:794:1: preamble returns [NodeUnion<? extends MetaprogramPreambleNode> ret] : ( splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaImportDeclarations ( metaprogramMode )? optionalMetaprogramTargetList optionalMetaprogramDependencyDeclarationList );
    public final NodeUnion<? extends MetaprogramPreambleNode> preamble() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramPreambleNode> ret = null;

        NodeUnion<? extends Node> splice4 = null;

        BsjAntlrParser.metaprogramMode_return metaprogramMode5 = null;

        NodeUnion<? extends MetaprogramImportListNode> optionalMetaImportDeclarations6 = null;

        NodeUnion<? extends MetaprogramTargetListNode> optionalMetaprogramTargetList7 = null;

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> optionalMetaprogramDependencyDeclarationList8 = null;



                    ruleStart("preamble");
                    MetaprogramPackageMode packageMode = MetaprogramPackageMode.READ_ONLY;
                    MetaprogramLocalMode localMode = MetaprogramLocalMode.INSERT;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:804:5: ( splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaImportDeclarations ( metaprogramMode )? optionalMetaprogramTargetList optionalMetaprogramDependencyDeclarationList )
            int alt4=2;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:805:9: splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_preamble426);
                    splice4=splice(MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice4 != null) // TODO: fix this with error nodes
                                      ret = splice4.castNodeType(factory, MetaprogramPreambleNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:811:9: optionalMetaImportDeclarations ( metaprogramMode )? optionalMetaprogramTargetList optionalMetaprogramDependencyDeclarationList
                    {
                    pushFollow(FOLLOW_optionalMetaImportDeclarations_in_preamble453);
                    optionalMetaImportDeclarations6=optionalMetaImportDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:812:9: ( metaprogramMode )?
                    int alt3=2;
                    int LA3_0 = input.LA(1);

                    if ( (LA3_0==127) ) {
                        alt3=1;
                    }
                    switch (alt3) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:813:13: metaprogramMode
                            {
                            pushFollow(FOLLOW_metaprogramMode_in_preamble477);
                            metaprogramMode5=metaprogramMode();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              packageMode = (metaprogramMode5!=null?metaprogramMode5.packageMode:null);
                                              localMode = (metaprogramMode5!=null?metaprogramMode5.localMode:null);
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_optionalMetaprogramTargetList_in_preamble512);
                    optionalMetaprogramTargetList7=optionalMetaprogramTargetList();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalMetaprogramDependencyDeclarationList_in_preamble522);
                    optionalMetaprogramDependencyDeclarationList8=optionalMetaprogramDependencyDeclarationList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeMetaprogramPreambleNodeWithUnions(optionalMetaImportDeclarations6,
                                          localMode, packageMode, optionalMetaprogramTargetList7,
                                          optionalMetaprogramDependencyDeclarationList8));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "preamble"

    public static class metaprogramImport_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaprogramImportNode> ret;
    };

    // $ANTLR start "metaprogramImport"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:828:1: metaprogramImport returns [NodeUnion<? extends MetaprogramImportNode> ret] : ( splice[MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList()] | '#import' metaprogramImportBody ';' );
    public final BsjAntlrParser.metaprogramImport_return metaprogramImport() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaprogramImport_return retval = new BsjAntlrParser.metaprogramImport_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice9 = null;

        NodeUnion<? extends ImportNode> metaprogramImportBody10 = null;



                    ruleStart("metaprogramImport");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:836:5: ( splice[MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList()] | '#import' metaprogramImportBody ';' )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt5=1;
            }
            else if ( (LA5_0==METAIMPORT) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:837:9: splice[MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramImport603);
                    splice9=splice(MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice9 != null) // TODO: fix this with error nodes
                                      retval.ret = splice9.castNodeType(factory, MetaprogramImportNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:843:9: '#import' metaprogramImportBody ';'
                    {
                    match(input,METAIMPORT,FOLLOW_METAIMPORT_in_metaprogramImport630); if (state.failed) return retval;
                    pushFollow(FOLLOW_metaprogramImportBody_in_metaprogramImport640);
                    metaprogramImportBody10=metaprogramImportBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,SEMI,FOLLOW_SEMI_in_metaprogramImport650); if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeMetaprogramImportNodeWithUnions(
                                          metaprogramImportBody10));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaprogramImport"


    // $ANTLR start "metaprogramImportBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:852:1: metaprogramImportBody returns [NodeUnion<? extends ImportNode> ret] : ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] | importBody );
    public final NodeUnion<? extends ImportNode> metaprogramImportBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportNode> ret = null;

        NodeUnion<? extends Node> splice11 = null;

        NodeUnion<? extends ImportNode> importBody12 = null;



                    ruleStart("metaprogramImportBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:860:5: ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] | importBody )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA6_1 = input.LA(2);

                if ( ((synpred6_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt6=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt6=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 6, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA6_0==IDENTIFIER||LA6_0==STATIC) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:861:9: splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramImportBody728);
                    splice11=splice(ImportNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice11 != null) // TODO: fix this with error nodes
                                      ret = splice11.castNodeType(factory, ImportNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:867:9: importBody
                    {
                    pushFollow(FOLLOW_importBody_in_metaprogramImportBody755);
                    importBody12=importBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = importBody12;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaprogramImportBody"

    public static class metaprogramMode_return extends ParserRuleReturnScope {
        public MetaprogramPackageMode packageMode;
        public MetaprogramLocalMode localMode;
    };

    // $ANTLR start "metaprogramMode"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:873:1: metaprogramMode returns [MetaprogramPackageMode packageMode, MetaprogramLocalMode localMode] : '#mode' (a= unsplicableIdentifier ( ',' b= unsplicableIdentifier )* ( ',' )? )? ';' ;
    public final BsjAntlrParser.metaprogramMode_return metaprogramMode() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaprogramMode_return retval = new BsjAntlrParser.metaprogramMode_return();
        retval.start = input.LT(1);

        IdentifierNode a = null;

        IdentifierNode b = null;



                    ruleStart("metaprogramMode");
                    ModeValues modeValues = new ModeValues();
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:884:5: ( '#mode' (a= unsplicableIdentifier ( ',' b= unsplicableIdentifier )* ( ',' )? )? ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:885:9: '#mode' (a= unsplicableIdentifier ( ',' b= unsplicableIdentifier )* ( ',' )? )? ';'
            {
            match(input,127,FOLLOW_127_in_metaprogramMode837); if (state.failed) return retval;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:886:9: (a= unsplicableIdentifier ( ',' b= unsplicableIdentifier )* ( ',' )? )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==IDENTIFIER) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:887:13: a= unsplicableIdentifier ( ',' b= unsplicableIdentifier )* ( ',' )?
                    {
                    pushFollow(FOLLOW_unsplicableIdentifier_in_metaprogramMode863);
                    a=unsplicableIdentifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                      modeValues.parse(a);
                                  
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:891:13: ( ',' b= unsplicableIdentifier )*
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==COMMA) ) {
                            int LA7_1 = input.LA(2);

                            if ( (LA7_1==IDENTIFIER) ) {
                                alt7=1;
                            }


                        }


                        switch (alt7) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:892:17: ',' b= unsplicableIdentifier
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_metaprogramMode909); if (state.failed) return retval;
                    	    pushFollow(FOLLOW_unsplicableIdentifier_in_metaprogramMode929);
                    	    b=unsplicableIdentifier();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if (  true  ) {

                    	                          modeValues.parse(b);
                    	                      
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop7;
                        }
                    } while (true);

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:898:13: ( ',' )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==COMMA) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_metaprogramMode976); if (state.failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_metaprogramMode998); if (state.failed) return retval;

            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          retval.packageMode = modeValues.getPackageMode();
                          retval.localMode = modeValues.getLocalMode();
                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaprogramMode"


    // $ANTLR start "metaprogramDependencyDeclarationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:903:1: metaprogramDependencyDeclarationList returns [NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret] : ( splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* ) ) ;
    public final NodeUnion<? extends MetaprogramDependencyDeclarationListNode> metaprogramDependencyDeclarationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret = null;

        BsjAntlrParser.metaprogramDependencyDeclaration_return a = null;

        BsjAntlrParser.metaprogramDependencyDeclaration_return b = null;

        NodeUnion<? extends Node> splice13 = null;



                    ruleStart("metaprogramDependencyDeclarationList");
                    List<NodeUnion<? extends MetaprogramDependencyDeclarationNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:912:5: ( ( splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:913:9: ( splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:913:9: ( splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==128) ) {
                int LA11_1 = input.LA(2);

                if ( ((synpred10_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt11=1;
                }
                else if ( (true) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA11_0==METADEPENDS) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:914:13: splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramDependencyDeclarationList1080);
                    splice13=splice(MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice13 != null) // TODO: fix this with error nodes
                                          ret = splice13.castNodeType(factory, MetaprogramDependencyDeclarationListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:920:13: (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:920:13: (a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:921:17: a= metaprogramDependencyDeclaration (b= metaprogramDependencyDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaprogramDependencyDeclarationNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaprogramDependencyDeclaration_in_metaprogramDependencyDeclarationList1151);
                    a=metaprogramDependencyDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaprogramDependencyDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:936:11: (b= metaprogramDependencyDeclaration )*
                    loop10:
                    do {
                        int alt10=2;
                        alt10 = dfa10.predict(input);
                        switch (alt10) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:937:21: b= metaprogramDependencyDeclaration
                    	    {
                    	    pushFollow(FOLLOW_metaprogramDependencyDeclaration_in_metaprogramDependencyDeclarationList1199);
                    	    b=metaprogramDependencyDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaprogramDependencyDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaprogramDependencyDeclarationListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaprogramDependencyDeclarationList"


    // $ANTLR start "optionalMetaprogramDependencyDeclarationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:957:1: optionalMetaprogramDependencyDeclarationList returns [NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret] : ( ( metaprogramDependencyDeclarationList ) | () );
    public final NodeUnion<? extends MetaprogramDependencyDeclarationListNode> optionalMetaprogramDependencyDeclarationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret = null;

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> metaprogramDependencyDeclarationList14 = null;



                    ruleStart("optionalMetaprogramDependencyDeclarationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:965:5: ( ( metaprogramDependencyDeclarationList ) | () )
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:966:9: ( metaprogramDependencyDeclarationList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:966:9: ( metaprogramDependencyDeclarationList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:967:13: metaprogramDependencyDeclarationList
                    {
                    pushFollow(FOLLOW_metaprogramDependencyDeclarationList_in_optionalMetaprogramDependencyDeclarationList1346);
                    metaprogramDependencyDeclarationList14=metaprogramDependencyDeclarationList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaprogramDependencyDeclarationList14;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:973:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:973:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:974:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaprogramDependencyDeclarationListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaprogramDependencyDeclarationList"

    public static class metaprogramDependencyDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaprogramDependencyDeclarationNode> ret;
    };

    // $ANTLR start "metaprogramDependencyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:981:1: metaprogramDependencyDeclaration returns [NodeUnion<? extends MetaprogramDependencyDeclarationNode> ret] : ( splice[MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | '#depends' metaprogramDependencyList ';' );
    public final BsjAntlrParser.metaprogramDependencyDeclaration_return metaprogramDependencyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaprogramDependencyDeclaration_return retval = new BsjAntlrParser.metaprogramDependencyDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice15 = null;

        NodeUnion<? extends MetaprogramDependencyListNode> metaprogramDependencyList16 = null;



                    ruleStart("metaprogramDependencyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:989:5: ( splice[MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | '#depends' metaprogramDependencyList ';' )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt13=1;
            }
            else if ( (LA13_0==METADEPENDS) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:990:9: splice[MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramDependencyDeclaration1482);
                    splice15=splice(MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice15 != null) // TODO: fix this with error nodes
                                      retval.ret = splice15.castNodeType(factory, MetaprogramDependencyDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:996:9: '#depends' metaprogramDependencyList ';'
                    {
                    match(input,METADEPENDS,FOLLOW_METADEPENDS_in_metaprogramDependencyDeclaration1509); if (state.failed) return retval;
                    pushFollow(FOLLOW_metaprogramDependencyList_in_metaprogramDependencyDeclaration1519);
                    metaprogramDependencyList16=metaprogramDependencyList();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,SEMI,FOLLOW_SEMI_in_metaprogramDependencyDeclaration1529); if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(
                                          factory.makeMetaprogramDependencyDeclarationNodeWithUnions(metaprogramDependencyList16));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaprogramDependencyDeclaration"


    // $ANTLR start "metaprogramDependencyList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1005:1: metaprogramDependencyList returns [NodeUnion<? extends MetaprogramDependencyListNode> ret] : ( splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependency ( ',' b= metaprogramDependency )* ) ( ',' )? ) ;
    public final NodeUnion<? extends MetaprogramDependencyListNode> metaprogramDependencyList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyListNode> ret = null;

        BsjAntlrParser.metaprogramDependency_return a = null;

        BsjAntlrParser.metaprogramDependency_return b = null;

        NodeUnion<? extends Node> splice17 = null;



                    ruleStart("metaprogramDependencyList");
                    List<NodeUnion<? extends MetaprogramDependencyNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1014:5: ( ( splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependency ( ',' b= metaprogramDependency )* ) ( ',' )? ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1015:9: ( splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependency ( ',' b= metaprogramDependency )* ) ( ',' )? )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1015:9: ( splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramDependency ( ',' b= metaprogramDependency )* ) ( ',' )? )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==128) ) {
                int LA16_1 = input.LA(2);

                if ( ((synpred14_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt16=1;
                }
                else if ( (true) ) {
                    alt16=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 16, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA16_0==IDENTIFIER||LA16_0==METAWEAK) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1016:13: splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramDependencyList1621);
                    splice17=splice(MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice17 != null) // TODO: fix this with error nodes
                                          ret = splice17.castNodeType(factory, MetaprogramDependencyListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1022:13: (a= metaprogramDependency ( ',' b= metaprogramDependency )* ) ( ',' )?
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1022:13: (a= metaprogramDependency ( ',' b= metaprogramDependency )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1023:17: a= metaprogramDependency ( ',' b= metaprogramDependency )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaprogramDependencyNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaprogramDependency_in_metaprogramDependencyList1692);
                    a=metaprogramDependency();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaprogramDependency", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1038:11: ( ',' b= metaprogramDependency )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==COMMA) ) {
                            int LA14_1 = input.LA(2);

                            if ( (LA14_1==IDENTIFIER||LA14_1==METAWEAK||LA14_1==128) ) {
                                alt14=1;
                            }


                        }


                        switch (alt14) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1039:13: ',' b= metaprogramDependency
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_metaprogramDependencyList1730); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_metaprogramDependency_in_metaprogramDependencyList1754);
                    	    b=metaprogramDependency();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaprogramDependency", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaprogramDependencyListNodeWithUnions(list));
                      		        
                    }

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1057:9: ( ',' )?
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==COMMA) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_metaprogramDependencyList1819); if (state.failed) return ret;

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaprogramDependencyList"


    // $ANTLR start "optionalMetaprogramDependencyList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1061:1: optionalMetaprogramDependencyList returns [NodeUnion<? extends MetaprogramDependencyListNode> ret] : ( ( metaprogramDependencyList ) | () );
    public final NodeUnion<? extends MetaprogramDependencyListNode> optionalMetaprogramDependencyList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyListNode> ret = null;

        NodeUnion<? extends MetaprogramDependencyListNode> metaprogramDependencyList18 = null;



                    ruleStart("optionalMetaprogramDependencyList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1069:5: ( ( metaprogramDependencyList ) | () )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==IDENTIFIER||LA17_0==METAWEAK||LA17_0==128) ) {
                alt17=1;
            }
            else if ( (LA17_0==EOF) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1070:9: ( metaprogramDependencyList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1070:9: ( metaprogramDependencyList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1071:13: metaprogramDependencyList
                    {
                    pushFollow(FOLLOW_metaprogramDependencyList_in_optionalMetaprogramDependencyList1912);
                    metaprogramDependencyList18=metaprogramDependencyList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaprogramDependencyList18;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1077:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1077:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1078:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaprogramDependencyListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaprogramDependencyList"

    public static class metaprogramDependency_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaprogramDependencyNode> ret;
    };

    // $ANTLR start "metaprogramDependency"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1085:1: metaprogramDependency returns [NodeUnion<? extends MetaprogramDependencyNode> ret] : ( splice[MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList()] | ( '#weak' )? metaprogramTargetName );
    public final BsjAntlrParser.metaprogramDependency_return metaprogramDependency() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaprogramDependency_return retval = new BsjAntlrParser.metaprogramDependency_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice19 = null;

        NodeUnion<? extends NameNode> metaprogramTargetName20 = null;



                    ruleStart("metaprogramDependency");
                    boolean weak = false;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1094:5: ( splice[MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList()] | ( '#weak' )? metaprogramTargetName )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA19_1 = input.LA(2);

                if ( ((synpred18_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt19=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA19_0==IDENTIFIER||LA19_0==METAWEAK) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1095:9: splice[MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramDependency2045);
                    splice19=splice(MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice19 != null) // TODO: fix this with error nodes
                                      retval.ret = splice19.castNodeType(factory, MetaprogramDependencyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1101:9: ( '#weak' )? metaprogramTargetName
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1101:9: ( '#weak' )?
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==METAWEAK) ) {
                        alt18=1;
                    }
                    switch (alt18) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1102:13: '#weak'
                            {
                            match(input,METAWEAK,FOLLOW_METAWEAK_in_metaprogramDependency2086); if (state.failed) return retval;
                            if (  true  ) {

                                              weak = true;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_metaprogramTargetName_in_metaprogramDependency2121);
                    metaprogramTargetName20=metaprogramTargetName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeMetaprogramDependencyNodeWithUnions(metaprogramTargetName20, weak));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaprogramDependency"


    // $ANTLR start "metaprogramTargetList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1113:1: metaprogramTargetList returns [NodeUnion<? extends MetaprogramTargetListNode> ret] : ( splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramTarget (b= metaprogramTarget )* ) ) ;
    public final NodeUnion<? extends MetaprogramTargetListNode> metaprogramTargetList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramTargetListNode> ret = null;

        BsjAntlrParser.metaprogramTarget_return a = null;

        BsjAntlrParser.metaprogramTarget_return b = null;

        NodeUnion<? extends Node> splice21 = null;



                    ruleStart("metaprogramTargetList");
                    List<NodeUnion<? extends MetaprogramTargetNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1122:5: ( ( splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramTarget (b= metaprogramTarget )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1123:9: ( splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramTarget (b= metaprogramTarget )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1123:9: ( splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramTarget (b= metaprogramTarget )* ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==128) ) {
                int LA21_1 = input.LA(2);

                if ( ((synpred20_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt21=1;
                }
                else if ( (true) ) {
                    alt21=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 21, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA21_0==METATARGET) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1124:13: splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramTargetList2213);
                    splice21=splice(MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice21 != null) // TODO: fix this with error nodes
                                          ret = splice21.castNodeType(factory, MetaprogramTargetListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1130:13: (a= metaprogramTarget (b= metaprogramTarget )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1130:13: (a= metaprogramTarget (b= metaprogramTarget )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1131:17: a= metaprogramTarget (b= metaprogramTarget )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaprogramTargetNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaprogramTarget_in_metaprogramTargetList2284);
                    a=metaprogramTarget();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaprogramTarget", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1146:11: (b= metaprogramTarget )*
                    loop20:
                    do {
                        int alt20=2;
                        alt20 = dfa20.predict(input);
                        switch (alt20) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1147:21: b= metaprogramTarget
                    	    {
                    	    pushFollow(FOLLOW_metaprogramTarget_in_metaprogramTargetList2332);
                    	    b=metaprogramTarget();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaprogramTarget", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaprogramTargetListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaprogramTargetList"


    // $ANTLR start "optionalMetaprogramTargetList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1167:1: optionalMetaprogramTargetList returns [NodeUnion<? extends MetaprogramTargetListNode> ret] : ( ( metaprogramTargetList ) | () );
    public final NodeUnion<? extends MetaprogramTargetListNode> optionalMetaprogramTargetList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramTargetListNode> ret = null;

        NodeUnion<? extends MetaprogramTargetListNode> metaprogramTargetList22 = null;



                    ruleStart("optionalMetaprogramTargetList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1175:5: ( ( metaprogramTargetList ) | () )
            int alt22=2;
            alt22 = dfa22.predict(input);
            switch (alt22) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1176:9: ( metaprogramTargetList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1176:9: ( metaprogramTargetList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1177:13: metaprogramTargetList
                    {
                    pushFollow(FOLLOW_metaprogramTargetList_in_optionalMetaprogramTargetList2479);
                    metaprogramTargetList22=metaprogramTargetList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaprogramTargetList22;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1183:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1183:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1184:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaprogramTargetListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaprogramTargetList"

    public static class metaprogramTarget_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaprogramTargetNode> ret;
    };

    // $ANTLR start "metaprogramTarget"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1191:1: metaprogramTarget returns [NodeUnion<? extends MetaprogramTargetNode> ret] : ( splice[MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList()] | '#target' identifierList ';' );
    public final BsjAntlrParser.metaprogramTarget_return metaprogramTarget() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaprogramTarget_return retval = new BsjAntlrParser.metaprogramTarget_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice23 = null;

        NodeUnion<? extends IdentifierListNode> identifierList24 = null;



                    ruleStart("metaprogramTarget");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1199:5: ( splice[MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList()] | '#target' identifierList ';' )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt23=1;
            }
            else if ( (LA23_0==METATARGET) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1200:9: splice[MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaprogramTarget2612);
                    splice23=splice(MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice23 != null) // TODO: fix this with error nodes
                                      retval.ret = splice23.castNodeType(factory, MetaprogramTargetNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1206:9: '#target' identifierList ';'
                    {
                    match(input,METATARGET,FOLLOW_METATARGET_in_metaprogramTarget2642); if (state.failed) return retval;
                    pushFollow(FOLLOW_identifierList_in_metaprogramTarget2652);
                    identifierList24=identifierList();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,SEMI,FOLLOW_SEMI_in_metaprogramTarget2662); if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeMetaprogramTargetNodeWithUnions(identifierList24));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaprogramTarget"


    // $ANTLR start "metaprogramTargetName"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1214:1: metaprogramTargetName returns [NodeUnion<? extends NameNode> ret] : name ;
    public final NodeUnion<? extends NameNode> metaprogramTargetName() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NameNode> ret = null;

        NodeUnion<? extends NameNode> name25 = null;



                    ruleStart("metaprogramTargetName");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1222:5: ( name )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1223:9: name
            {
            pushFollow(FOLLOW_name_in_metaprogramTargetName2740);
            name25=name();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = name25;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaprogramTargetName"


    // $ANTLR start "identifierList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1229:1: identifierList returns [NodeUnion<? extends IdentifierListNode> ret] : ( splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= identifier ( ',' b= identifier )* ) ( ',' )? ) ;
    public final NodeUnion<? extends IdentifierListNode> identifierList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IdentifierListNode> ret = null;

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;

        NodeUnion<? extends Node> splice26 = null;



                    ruleStart("identifierList");
                    List<NodeUnion<? extends IdentifierNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1238:5: ( ( splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= identifier ( ',' b= identifier )* ) ( ',' )? ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1239:9: ( splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= identifier ( ',' b= identifier )* ) ( ',' )? )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1239:9: ( splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= identifier ( ',' b= identifier )* ) ( ',' )? )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==128) ) {
                int LA26_1 = input.LA(2);

                if ( ((synpred24_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt26=1;
                }
                else if ( (true) ) {
                    alt26=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 26, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA26_0==IDENTIFIER) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1240:13: splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_identifierList2832);
                    splice26=splice(IdentifierListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice26 != null) // TODO: fix this with error nodes
                                          ret = splice26.castNodeType(factory, IdentifierListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1246:13: (a= identifier ( ',' b= identifier )* ) ( ',' )?
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1246:13: (a= identifier ( ',' b= identifier )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1247:17: a= identifier ( ',' b= identifier )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends IdentifierNode>>();
                                      
                    }
                    pushFollow(FOLLOW_identifier_in_identifierList2903);
                    a=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "identifier", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1262:11: ( ',' b= identifier )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==COMMA) ) {
                            int LA24_1 = input.LA(2);

                            if ( (LA24_1==IDENTIFIER||LA24_1==128) ) {
                                alt24=1;
                            }


                        }


                        switch (alt24) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1263:13: ',' b= identifier
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_identifierList2941); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_identifier_in_identifierList2965);
                    	    b=identifier();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "identifier", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeIdentifierListNodeWithUnions(list));
                      		        
                    }

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1281:9: ( ',' )?
                    int alt25=2;
                    int LA25_0 = input.LA(1);

                    if ( (LA25_0==COMMA) ) {
                        alt25=1;
                    }
                    switch (alt25) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_identifierList3030); if (state.failed) return ret;

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "identifierList"


    // $ANTLR start "optionalIdentifierList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1285:1: optionalIdentifierList returns [NodeUnion<? extends IdentifierListNode> ret] : ( ( identifierList ) | () );
    public final NodeUnion<? extends IdentifierListNode> optionalIdentifierList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IdentifierListNode> ret = null;

        NodeUnion<? extends IdentifierListNode> identifierList27 = null;



                    ruleStart("optionalIdentifierList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1293:5: ( ( identifierList ) | () )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==IDENTIFIER||LA27_0==128) ) {
                alt27=1;
            }
            else if ( (LA27_0==EOF) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1294:9: ( identifierList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1294:9: ( identifierList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1295:13: identifierList
                    {
                    pushFollow(FOLLOW_identifierList_in_optionalIdentifierList3123);
                    identifierList27=identifierList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = identifierList27;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1301:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1301:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1302:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeIdentifierListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalIdentifierList"


    // $ANTLR start "typeDeclarationBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1309:1: typeDeclarationBsjMetaprogramAnchor returns [NodeUnion<? extends TypeDeclarationMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends TypeDeclarationMetaprogramAnchorNode> typeDeclarationBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram28 = null;



                    ruleStart("typeDeclarationBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1317:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1318:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_typeDeclarationBsjMetaprogramAnchor3256);
            bsjMetaprogram28=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeTypeDeclarationMetaprogramAnchorNodeWithUnions(bsjMetaprogram28));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeDeclarationBsjMetaprogramAnchor"


    // $ANTLR start "annotationMemberBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1324:1: annotationMemberBsjMetaprogramAnchor returns [NodeUnion<? extends AnnotationMemberMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends AnnotationMemberMetaprogramAnchorNode> annotationMemberBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMemberMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram29 = null;



                    ruleStart("annotationMemberBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1332:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1333:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_annotationMemberBsjMetaprogramAnchor3338);
            bsjMetaprogram29=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationMemberMetaprogramAnchorNodeWithUnions(bsjMetaprogram29));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationMemberBsjMetaprogramAnchor"


    // $ANTLR start "anonymousClassMemberBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1339:1: anonymousClassMemberBsjMetaprogramAnchor returns [NodeUnion<? extends AnonymousClassMemberMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends AnonymousClassMemberMetaprogramAnchorNode> anonymousClassMemberBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram30 = null;



                    ruleStart("anonymousClassMemberBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1347:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1348:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_anonymousClassMemberBsjMetaprogramAnchor3416);
            bsjMetaprogram30=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAnonymousClassMemberMetaprogramAnchorNodeWithUnions(bsjMetaprogram30));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "anonymousClassMemberBsjMetaprogramAnchor"


    // $ANTLR start "classMemberBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1354:1: classMemberBsjMetaprogramAnchor returns [NodeUnion<? extends ClassMemberMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends ClassMemberMetaprogramAnchorNode> classMemberBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram31 = null;



                    ruleStart("classMemberBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1362:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1363:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_classMemberBsjMetaprogramAnchor3494);
            bsjMetaprogram31=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeClassMemberMetaprogramAnchorNodeWithUnions(bsjMetaprogram31));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classMemberBsjMetaprogramAnchor"


    // $ANTLR start "interfaceMemberBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1369:1: interfaceMemberBsjMetaprogramAnchor returns [NodeUnion<? extends InterfaceMemberMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends InterfaceMemberMetaprogramAnchorNode> interfaceMemberBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceMemberMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram32 = null;



                    ruleStart("interfaceMemberBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1377:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1378:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_interfaceMemberBsjMetaprogramAnchor3572);
            bsjMetaprogram32=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeInterfaceMemberMetaprogramAnchorNodeWithUnions(bsjMetaprogram32));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceMemberBsjMetaprogramAnchor"


    // $ANTLR start "blockStatementBsjMetaprogramAnchor"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1384:1: blockStatementBsjMetaprogramAnchor returns [NodeUnion<? extends BlockStatementMetaprogramAnchorNode> ret] : bsjMetaprogram ;
    public final NodeUnion<? extends BlockStatementMetaprogramAnchorNode> blockStatementBsjMetaprogramAnchor() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementMetaprogramAnchorNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram33 = null;



                    ruleStart("blockStatementBsjMetaprogramAnchor");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1392:5: ( bsjMetaprogram )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1393:9: bsjMetaprogram
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_blockStatementBsjMetaprogramAnchor3650);
            bsjMetaprogram33=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeBlockStatementMetaprogramAnchorNodeWithUnions(bsjMetaprogram33));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "blockStatementBsjMetaprogramAnchor"


    // $ANTLR start "metaAnnotationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1402:1: metaAnnotationList returns [NodeUnion<? extends MetaAnnotationListNode> ret] : ( splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotation (b= metaAnnotation )* ) ) ;
    public final NodeUnion<? extends MetaAnnotationListNode> metaAnnotationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationListNode> ret = null;

        BsjAntlrParser.metaAnnotation_return a = null;

        BsjAntlrParser.metaAnnotation_return b = null;

        NodeUnion<? extends Node> splice34 = null;



                    ruleStart("metaAnnotationList");
                    List<NodeUnion<? extends MetaAnnotationNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1411:5: ( ( splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotation (b= metaAnnotation )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1412:9: ( splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotation (b= metaAnnotation )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1412:9: ( splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotation (b= metaAnnotation )* ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==128) ) {
                int LA29_1 = input.LA(2);

                if ( ((synpred28_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt29=1;
                }
                else if ( (true) ) {
                    alt29=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 29, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA29_0==MONKEYS_AT) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1413:13: splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationList3745);
                    splice34=splice(MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice34 != null) // TODO: fix this with error nodes
                                          ret = splice34.castNodeType(factory, MetaAnnotationListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1419:13: (a= metaAnnotation (b= metaAnnotation )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1419:13: (a= metaAnnotation (b= metaAnnotation )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1420:17: a= metaAnnotation (b= metaAnnotation )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaAnnotationNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaAnnotation_in_metaAnnotationList3816);
                    a=metaAnnotation();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaAnnotation", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1435:11: (b= metaAnnotation )*
                    loop28:
                    do {
                        int alt28=2;
                        alt28 = dfa28.predict(input);
                        switch (alt28) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1436:21: b= metaAnnotation
                    	    {
                    	    pushFollow(FOLLOW_metaAnnotation_in_metaAnnotationList3864);
                    	    b=metaAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaAnnotation", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop28;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaAnnotationList"


    // $ANTLR start "optionalMetaAnnotationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1456:1: optionalMetaAnnotationList returns [NodeUnion<? extends MetaAnnotationListNode> ret] : ( ( metaAnnotationList ) | () );
    public final NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationListNode> ret = null;

        NodeUnion<? extends MetaAnnotationListNode> metaAnnotationList35 = null;



                    ruleStart("optionalMetaAnnotationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1464:5: ( ( metaAnnotationList ) | () )
            int alt30=2;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1465:9: ( metaAnnotationList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1465:9: ( metaAnnotationList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1466:13: metaAnnotationList
                    {
                    pushFollow(FOLLOW_metaAnnotationList_in_optionalMetaAnnotationList4011);
                    metaAnnotationList35=metaAnnotationList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaAnnotationList35;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1472:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1472:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1473:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaAnnotationList"

    public static class metaAnnotation_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaAnnotationNode> ret;
    };

    // $ANTLR start "metaAnnotation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1486:1: metaAnnotation returns [NodeUnion<? extends MetaAnnotationNode> ret] : {...}? => ( splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' '@' unparameterizedType ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | ) ) ;
    public final BsjAntlrParser.metaAnnotation_return metaAnnotation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaAnnotation_return retval = new BsjAntlrParser.metaAnnotation_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice36 = null;

        NodeUnion<? extends MetaAnnotationElementListNode> optionalMetaAnnotationElementValuePairs37 = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType38 = null;

        BsjAntlrParser.metaAnnotationElementValue_return metaAnnotationElementValue39 = null;



                    ruleStart("metaAnnotation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1494:5: ({...}? => ( splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' '@' unparameterizedType ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1495:9: {...}? => ( splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' '@' unparameterizedType ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | ) )
            {
            if ( !((configuration.getMetaAnnotationsSupported())) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "metaAnnotation", "configuration.getMetaAnnotationsSupported()");
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1496:9: ( splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' '@' unparameterizedType ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt33=1;
            }
            else if ( (LA33_0==MONKEYS_AT) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1497:13: splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotation4178);
                    splice36=splice(MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                      if (splice36 != null) // TODO: fix this with error nodes
                                          retval.ret = splice36.castNodeType(factory, MetaAnnotationNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1503:13: '@' '@' unparameterizedType ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | )
                    {
                    match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_metaAnnotation4217); if (state.failed) return retval;
                    match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_metaAnnotation4219); if (state.failed) return retval;
                    pushFollow(FOLLOW_unparameterizedType_in_metaAnnotation4221);
                    unparameterizedType38=unparameterizedType();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1504:13: ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | )
                    int alt32=2;
                    alt32 = dfa32.predict(input);
                    switch (alt32) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1505:17: ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' )
                            {
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1505:17: ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' )
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1506:21: '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')'
                            {
                            match(input,LPAREN,FOLLOW_LPAREN_in_metaAnnotation4275); if (state.failed) return retval;
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1507:21: ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )?
                            int alt31=3;
                            alt31 = dfa31.predict(input);
                            switch (alt31) {
                                case 1 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1508:25: optionalMetaAnnotationElementValuePairs
                                    {
                                    pushFollow(FOLLOW_optionalMetaAnnotationElementValuePairs_in_metaAnnotation4326);
                                    optionalMetaAnnotationElementValuePairs37=optionalMetaAnnotationElementValuePairs();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if (  true  ) {

                                                                  retval.ret = factory.makeNormalNodeUnion(
                                                                             factory.makeNormalMetaAnnotationNodeWithUnions(
                                                                                     optionalMetaAnnotationElementValuePairs37,
                                                                                     (unparameterizedType38!=null?unparameterizedType38.ret:null)));
                                                              
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1516:25: metaAnnotationElementValue
                                    {
                                    pushFollow(FOLLOW_metaAnnotationElementValue_in_metaAnnotation4400);
                                    metaAnnotationElementValue39=metaAnnotationElementValue();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if (  true  ) {

                                                                  retval.ret = factory.makeNormalNodeUnion(
                                                                             factory.makeSingleElementMetaAnnotationNodeWithUnions(
                                                                                 (metaAnnotationElementValue39!=null?metaAnnotationElementValue39.ret:null),
                                                                                 (unparameterizedType38!=null?unparameterizedType38.ret:null)));
                                                              
                                    }

                                    }
                                    break;

                            }

                            match(input,RPAREN,FOLLOW_RPAREN_in_metaAnnotation4472); if (state.failed) return retval;

                            }


                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1527:17: 
                            {
                            if (  true  ) {

                                                  retval.ret = factory.makeNormalNodeUnion(
                                                             factory.makeNormalMetaAnnotationNodeWithUnions(
                                                                 factory.makeNormalNodeUnion(factory.makeMetaAnnotationElementListNode()),
                                                                 (unparameterizedType38!=null?unparameterizedType38.ret:null)));
                                              
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaAnnotation"


    // $ANTLR start "metaAnnotationElementValuePairs"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1542:1: metaAnnotationElementValuePairs returns [NodeUnion<? extends MetaAnnotationElementListNode> ret] : ( splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* ) ) ;
    public final NodeUnion<? extends MetaAnnotationElementListNode> metaAnnotationElementValuePairs() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationElementListNode> ret = null;

        BsjAntlrParser.metaAnnotationElementValuePair_return a = null;

        BsjAntlrParser.metaAnnotationElementValuePair_return b = null;

        NodeUnion<? extends Node> splice40 = null;



                    ruleStart("metaAnnotationElementValuePairs");
                    List<NodeUnion<? extends MetaAnnotationElementNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1551:5: ( ( splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1552:9: ( splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1552:9: ( splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* ) )
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==128) ) {
                int LA35_1 = input.LA(2);

                if ( ((synpred35_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt35=1;
                }
                else if ( (true) ) {
                    alt35=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 35, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA35_0==IDENTIFIER) ) {
                alt35=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }
            switch (alt35) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1553:13: splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationElementValuePairs4646);
                    splice40=splice(MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice40 != null) // TODO: fix this with error nodes
                                          ret = splice40.castNodeType(factory, MetaAnnotationElementListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1559:13: (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1559:13: (a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1560:17: a= metaAnnotationElementValuePair ( ',' b= metaAnnotationElementValuePair )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaAnnotationElementNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaAnnotationElementValuePair_in_metaAnnotationElementValuePairs4717);
                    a=metaAnnotationElementValuePair();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaAnnotationElementValuePair", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1575:11: ( ',' b= metaAnnotationElementValuePair )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==COMMA) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1576:13: ',' b= metaAnnotationElementValuePair
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_metaAnnotationElementValuePairs4755); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_metaAnnotationElementValuePair_in_metaAnnotationElementValuePairs4779);
                    	    b=metaAnnotationElementValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaAnnotationElementValuePair", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationElementListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaAnnotationElementValuePairs"


    // $ANTLR start "optionalMetaAnnotationElementValuePairs"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1597:1: optionalMetaAnnotationElementValuePairs returns [NodeUnion<? extends MetaAnnotationElementListNode> ret] : ( ( metaAnnotationElementValuePairs ) | () );
    public final NodeUnion<? extends MetaAnnotationElementListNode> optionalMetaAnnotationElementValuePairs() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationElementListNode> ret = null;

        NodeUnion<? extends MetaAnnotationElementListNode> metaAnnotationElementValuePairs41 = null;



                    ruleStart("optionalMetaAnnotationElementValuePairs");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1605:5: ( ( metaAnnotationElementValuePairs ) | () )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==IDENTIFIER||LA36_0==128) ) {
                alt36=1;
            }
            else if ( (LA36_0==EOF||LA36_0==RPAREN) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1606:9: ( metaAnnotationElementValuePairs )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1606:9: ( metaAnnotationElementValuePairs )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1607:13: metaAnnotationElementValuePairs
                    {
                    pushFollow(FOLLOW_metaAnnotationElementValuePairs_in_optionalMetaAnnotationElementValuePairs4926);
                    metaAnnotationElementValuePairs41=metaAnnotationElementValuePairs();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaAnnotationElementValuePairs41;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1613:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1613:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1614:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationElementListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaAnnotationElementValuePairs"

    public static class metaAnnotationElementValuePair_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaAnnotationElementNode> ret;
    };

    // $ANTLR start "metaAnnotationElementValuePair"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1628:1: metaAnnotationElementValuePair returns [NodeUnion<? extends MetaAnnotationElementNode> ret] : ( splice[MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier '=' metaAnnotationElementValue );
    public final BsjAntlrParser.metaAnnotationElementValuePair_return metaAnnotationElementValuePair() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaAnnotationElementValuePair_return retval = new BsjAntlrParser.metaAnnotationElementValuePair_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice42 = null;

        BsjAntlrParser.metaAnnotationElementValue_return metaAnnotationElementValue43 = null;



                    ruleStart("metaAnnotationElementValuePair");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1636:5: ( splice[MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier '=' metaAnnotationElementValue )
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA37_1 = input.LA(2);

                if ( ((synpred38_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt37=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt37=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 37, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA37_0==IDENTIFIER) ) {
                alt37=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }
            switch (alt37) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1637:9: splice[MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationElementValuePair5066);
                    splice42=splice(MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice42 != null) // TODO: fix this with error nodes
                                      retval.ret = splice42.castNodeType(factory, MetaAnnotationElementNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1643:9: id= identifier '=' metaAnnotationElementValue
                    {
                    pushFollow(FOLLOW_identifier_in_metaAnnotationElementValuePair5095);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,EQ,FOLLOW_EQ_in_metaAnnotationElementValuePair5097); if (state.failed) return retval;
                    pushFollow(FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValuePair5099);
                    metaAnnotationElementValue43=metaAnnotationElementValue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(
                                          factory.makeMetaAnnotationElementNodeWithUnions((id!=null?id.ret:null), (metaAnnotationElementValue43!=null?metaAnnotationElementValue43.ret:null)));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaAnnotationElementValuePair"

    public static class metaAnnotationElementValue_return extends ParserRuleReturnScope {
        public NodeUnion<? extends MetaAnnotationValueNode> ret;
    };

    // $ANTLR start "metaAnnotationElementValue"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1659:1: metaAnnotationElementValue returns [NodeUnion<? extends MetaAnnotationValueNode> ret] : ( splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)] | conditionalExpression | metaAnnotation | metaAnnotationElementValueArrayInitializer );
    public final BsjAntlrParser.metaAnnotationElementValue_return metaAnnotationElementValue() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.metaAnnotationElementValue_return retval = new BsjAntlrParser.metaAnnotationElementValue_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice44 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> conditionalExpression45 = null;

        BsjAntlrParser.metaAnnotation_return metaAnnotation46 = null;

        NodeUnion<? extends MetaAnnotationArrayValueNode> metaAnnotationElementValueArrayInitializer47 = null;



                    ruleStart("metaAnnotationElementValue");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1667:5: ( splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)] | conditionalExpression | metaAnnotation | metaAnnotationElementValueArrayInitializer )
            int alt38=4;
            alt38 = dfa38.predict(input);
            switch (alt38) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1668:9: splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationElementValue5186);
                    splice44=splice(MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice44 != null) // TODO: fix this with error nodes
                                      retval.ret = splice44.castNodeType(factory, MetaAnnotationValueNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1674:9: conditionalExpression
                    {
                    pushFollow(FOLLOW_conditionalExpression_in_metaAnnotationElementValue5216);
                    conditionalExpression45=conditionalExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationExpressionValueNodeWithUnions(conditionalExpression45));
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1679:9: metaAnnotation
                    {
                    pushFollow(FOLLOW_metaAnnotation_in_metaAnnotationElementValue5245);
                    metaAnnotation46=metaAnnotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationMetaAnnotationValueNodeWithUnions((metaAnnotation46!=null?metaAnnotation46.ret:null)));
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1684:9: metaAnnotationElementValueArrayInitializer
                    {
                    pushFollow(FOLLOW_metaAnnotationElementValueArrayInitializer_in_metaAnnotationElementValue5274);
                    metaAnnotationElementValueArrayInitializer47=metaAnnotationElementValueArrayInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = metaAnnotationElementValueArrayInitializer47;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "metaAnnotationElementValue"


    // $ANTLR start "metaAnnotationElementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1699:1: metaAnnotationElementValues returns [NodeUnion<? extends MetaAnnotationValueListNode> ret] : ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* ) ) ;
    public final NodeUnion<? extends MetaAnnotationValueListNode> metaAnnotationElementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationValueListNode> ret = null;

        BsjAntlrParser.metaAnnotationElementValue_return a = null;

        BsjAntlrParser.metaAnnotationElementValue_return b = null;

        NodeUnion<? extends Node> splice48 = null;



                    ruleStart("metaAnnotationElementValues");
                    List<NodeUnion<? extends MetaAnnotationValueNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1708:5: ( ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1709:9: ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1709:9: ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* ) )
            int alt40=2;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1710:13: splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationElementValues5375);
                    splice48=splice(MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice48 != null) // TODO: fix this with error nodes
                                          ret = splice48.castNodeType(factory, MetaAnnotationValueListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1716:13: (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1716:13: (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1717:17: a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaAnnotationValueNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValues5446);
                    a=metaAnnotationElementValue();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaAnnotationElementValue", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1732:11: ( ',' b= metaAnnotationElementValue )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==COMMA) ) {
                            int LA39_1 = input.LA(2);

                            if ( (LA39_1==CODELITERAL_START||(LA39_1>=SUPER && LA39_1<=IDENTIFIER)||LA39_1==BOOLEAN||LA39_1==BYTE||LA39_1==CHAR||LA39_1==DOUBLE||LA39_1==FLOAT||LA39_1==INT||LA39_1==LONG||LA39_1==SHORT||LA39_1==VOID||LA39_1==LPAREN||LA39_1==LBRACE||(LA39_1>=BANG && LA39_1<=TILDE)||(LA39_1>=PLUSPLUS && LA39_1<=SUB)||LA39_1==MONKEYS_AT||LA39_1==128) ) {
                                alt39=1;
                            }


                        }


                        switch (alt39) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1733:13: ',' b= metaAnnotationElementValue
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_metaAnnotationElementValues5484); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValues5508);
                    	    b=metaAnnotationElementValue();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaAnnotationElementValue", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationValueListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaAnnotationElementValues"


    // $ANTLR start "optionalMetaAnnotationElementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1754:1: optionalMetaAnnotationElementValues returns [NodeUnion<? extends MetaAnnotationValueListNode> ret] : ( ( metaAnnotationElementValues ) | () );
    public final NodeUnion<? extends MetaAnnotationValueListNode> optionalMetaAnnotationElementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationValueListNode> ret = null;

        NodeUnion<? extends MetaAnnotationValueListNode> metaAnnotationElementValues49 = null;



                    ruleStart("optionalMetaAnnotationElementValues");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1762:5: ( ( metaAnnotationElementValues ) | () )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==CODELITERAL_START||(LA41_0>=SUPER && LA41_0<=IDENTIFIER)||LA41_0==BOOLEAN||LA41_0==BYTE||LA41_0==CHAR||LA41_0==DOUBLE||LA41_0==FLOAT||LA41_0==INT||LA41_0==LONG||LA41_0==SHORT||LA41_0==VOID||LA41_0==LPAREN||LA41_0==LBRACE||(LA41_0>=BANG && LA41_0<=TILDE)||(LA41_0>=PLUSPLUS && LA41_0<=SUB)||LA41_0==MONKEYS_AT||LA41_0==128) ) {
                alt41=1;
            }
            else if ( (LA41_0==RBRACE||LA41_0==COMMA) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1763:9: ( metaAnnotationElementValues )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1763:9: ( metaAnnotationElementValues )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1764:13: metaAnnotationElementValues
                    {
                    pushFollow(FOLLOW_metaAnnotationElementValues_in_optionalMetaAnnotationElementValues5655);
                    metaAnnotationElementValues49=metaAnnotationElementValues();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaAnnotationElementValues49;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1770:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1770:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1771:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaAnnotationValueListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaAnnotationElementValues"


    // $ANTLR start "metaAnnotationElementValueArrayInitializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1787:1: metaAnnotationElementValueArrayInitializer returns [NodeUnion<? extends MetaAnnotationArrayValueNode> ret] : ( splice[MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalMetaAnnotationElementValues ( ',' )? '}' );
    public final NodeUnion<? extends MetaAnnotationArrayValueNode> metaAnnotationElementValueArrayInitializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationArrayValueNode> ret = null;

        NodeUnion<? extends Node> splice50 = null;

        NodeUnion<? extends MetaAnnotationValueListNode> optionalMetaAnnotationElementValues51 = null;



                    ruleStart("metaAnnotationElementValueArrayInitializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1795:5: ( splice[MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalMetaAnnotationElementValues ( ',' )? '}' )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt43=1;
            }
            else if ( (LA43_0==LBRACE) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1796:9: splice[MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaAnnotationElementValueArrayInitializer5800);
                    splice50=splice(MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice50 != null) // TODO: fix this with error nodes
                                      ret = splice50.castNodeType(factory, MetaAnnotationArrayValueNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1802:9: '{' optionalMetaAnnotationElementValues ( ',' )? '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_metaAnnotationElementValueArrayInitializer5827); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalMetaAnnotationElementValues_in_metaAnnotationElementValueArrayInitializer5837);
                    optionalMetaAnnotationElementValues51=optionalMetaAnnotationElementValues();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(
                                              factory.makeMetaAnnotationArrayValueNodeWithUnions(optionalMetaAnnotationElementValues51));
                              
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1808:9: ( ',' )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==COMMA) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_metaAnnotationElementValueArrayInitializer5857); if (state.failed) return ret;

                            }
                            break;

                    }

                    match(input,RBRACE,FOLLOW_RBRACE_in_metaAnnotationElementValueArrayInitializer5868); if (state.failed) return ret;

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaAnnotationElementValueArrayInitializer"


    // $ANTLR start "codeLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1813:1: codeLiteral returns [NodeUnion<? extends RawCodeLiteralNode> ret] : {...}? => ( splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()] | '<:' codeLiteralBody ':>' ) ;
    public final NodeUnion<? extends RawCodeLiteralNode> codeLiteral() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends RawCodeLiteralNode> ret = null;

        NodeUnion<? extends Node> splice52 = null;

        List<BsjTokenImpl> codeLiteralBody53 = null;



                    ruleStart("codeLiteral");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1821:5: ({...}? => ( splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()] | '<:' codeLiteralBody ':>' ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1822:9: {...}? => ( splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()] | '<:' codeLiteralBody ':>' )
            {
            if ( !((configuration.getCodeLiteralsSupported())) ) {
                if (state.backtracking>0) {state.failed=true; return ret;}
                throw new FailedPredicateException(input, "codeLiteral", "configuration.getCodeLiteralsSupported()");
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1823:9: ( splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()] | '<:' codeLiteralBody ':>' )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt44=1;
            }
            else if ( (LA44_0==CODELITERAL_START) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1824:13: splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_codeLiteral5962);
                    splice52=splice(RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice52 != null) // TODO: fix this with error nodes
                                          ret = splice52.castNodeType(factory, RawCodeLiteralNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1830:13: '<:' codeLiteralBody ':>'
                    {
                    match(input,CODELITERAL_START,FOLLOW_CODELITERAL_START_in_codeLiteral6001); if (state.failed) return ret;
                    pushFollow(FOLLOW_codeLiteralBody_in_codeLiteral6015);
                    codeLiteralBody53=codeLiteralBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,CODELITERAL_STOP,FOLLOW_CODELITERAL_STOP_in_codeLiteral6029); if (state.failed) return ret;
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeRawCodeLiteralNode(new BsjRawCodeLiteralPayloadAntlrImpl(
                                              getResourceName(),
                                              codeLiteralBody53)));
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "codeLiteral"


    // $ANTLR start "codeLiteralBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1842:1: codeLiteralBody returns [List<BsjTokenImpl> ret] : ( anyNonCodeLiteralToken | '<:' inner= codeLiteralBody ':>' )+ ;
    public final List<BsjTokenImpl> codeLiteralBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        List<BsjTokenImpl> ret = null;

        List<BsjTokenImpl> inner = null;

        BsjTokenImpl anyNonCodeLiteralToken54 = null;



                    ruleStart("codeLiteralBody");
                    ret = new ArrayList<BsjTokenImpl>();
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1851:5: ( ( anyNonCodeLiteralToken | '<:' inner= codeLiteralBody ':>' )+ )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1852:9: ( anyNonCodeLiteralToken | '<:' inner= codeLiteralBody ':>' )+
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1852:9: ( anyNonCodeLiteralToken | '<:' inner= codeLiteralBody ':>' )+
            int cnt45=0;
            loop45:
            do {
                int alt45=3;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=THROWS && LA45_0<=129)) ) {
                    alt45=1;
                }
                else if ( (LA45_0==CODELITERAL_START) ) {
                    alt45=2;
                }


                switch (alt45) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1853:13: anyNonCodeLiteralToken
            	    {
            	    pushFollow(FOLLOW_anyNonCodeLiteralToken_in_codeLiteralBody6136);
            	    anyNonCodeLiteralToken54=anyNonCodeLiteralToken();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret.add(anyNonCodeLiteralToken54);
            	                  
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1858:13: '<:' inner= codeLiteralBody ':>'
            	    {
            	    match(input,CODELITERAL_START,FOLLOW_CODELITERAL_START_in_codeLiteralBody6174); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret.add(new BsjTokenImpl(input.get(input.index()-1)));
            	                  
            	    }
            	    pushFollow(FOLLOW_codeLiteralBody_in_codeLiteralBody6204);
            	    inner=codeLiteralBody();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret.addAll(inner);
            	                  
            	    }
            	    match(input,CODELITERAL_STOP,FOLLOW_CODELITERAL_STOP_in_codeLiteralBody6232); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret.add(new BsjTokenImpl(input.get(input.index()-1)));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return ret;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "codeLiteralBody"


    // $ANTLR start "anyNonCodeLiteralToken"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1874:1: anyNonCodeLiteralToken returns [BsjTokenImpl ret] : ~ ( CODELITERAL_START | CODELITERAL_STOP ) ;
    public final BsjTokenImpl anyNonCodeLiteralToken() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjTokenImpl ret = null;


                    ruleStart("anyNonCodeLiteralToken");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1882:5: (~ ( CODELITERAL_START | CODELITERAL_STOP ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1883:9: ~ ( CODELITERAL_START | CODELITERAL_STOP )
            {
            if ( (input.LA(1)>=THROWS && input.LA(1)<=129) ) {
                input.consume();
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }

            if (  true  ) {

                          ret = new BsjTokenImpl(input.get(input.index()-1));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "anyNonCodeLiteralToken"


    // $ANTLR start "splice"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1893:1: splice[Class<? extends Node> expectedType, List<Class<? extends Node>> forbiddenTypes] returns [NodeUnion<? extends Node> ret] options {memoize=false; } : {...}? => ( '~:' {...}? expression ':~' {...}?) ;
    public final NodeUnion<? extends Node> splice(Class<? extends Node> expectedType, List<Class<? extends Node>> forbiddenTypes) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends Node> ret = null;

        BsjAntlrParser.expression_return expression55 = null;



                    ruleStart("splice");
                    BsjTypechecker bsjTypechecker = 
                            null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1905:5: ({...}? => ( '~:' {...}? expression ':~' {...}?) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1906:9: {...}? => ( '~:' {...}? expression ':~' {...}?)
            {
            if ( !((configuration.getCodeSplicingSupported())) ) {
                if (state.backtracking>0) {state.failed=true; return ret;}
                throw new FailedPredicateException(input, "splice", "configuration.getCodeSplicingSupported()");
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1907:9: ( '~:' {...}? expression ':~' {...}?)
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1908:13: '~:' {...}? expression ':~' {...}?
            {
            match(input,128,FOLLOW_128_in_splice6477); if (state.failed) return ret;
            if ( !((
                            this.spliceTypechecker != null// are splices allowed right now?
                        )) ) {
                if (state.backtracking>0) {state.failed=true; return ret;}
                throw new FailedPredicateException(input, "splice", "\n                this.spliceTypechecker != null// are splices allowed right now?\n            ");
            }
            if (  true  ) {

                              // Disable the typechecker while parsing the following splice expression (so that it does not contain
                              // splices)
                              bsjTypechecker = this.spliceTypechecker;
                              this.spliceTypechecker = null;
                          
            }
            pushFollow(FOLLOW_expression_in_splice6519);
            expression55=expression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                              // Now put the splice typechecker back
                              this.spliceTypechecker = bsjTypechecker;
                          
            }
            match(input,129,FOLLOW_129_in_splice6547); if (state.failed) return ret;
            if ( !((
                            BsjAntlrParserUtils.isValidExpressionType("splice", this.spliceTypechecker, this.spliceContext,
                                    (expression55!=null?expression55.ret:null), expectedType, forbiddenTypes, input)
                        )) ) {
                if (state.backtracking>0) {state.failed=true; return ret;}
                throw new FailedPredicateException(input, "splice", "\n                BsjAntlrParserUtils.isValidExpressionType(\"splice\", this.spliceTypechecker, this.spliceContext,\n                        $expression.ret, expectedType, forbiddenTypes, input)\n            ");
            }
            if (  true  ) {

                              ret = createSpliceNodeUnion(expectedType, (expression55!=null?expression55.ret:null).getNormalNode());
                          
            }

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "splice"


    // $ANTLR start "compilationUnit"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1939:1: compilationUnit[String name] returns [NodeUnion<? extends CompilationUnitNode> ret] : ( splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()] | ( packageDeclaration )? optionalMetaImportDeclarations optionalImportDeclarations optionalTypeDeclarations EOF );
    public final NodeUnion<? extends CompilationUnitNode> compilationUnit(String name) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CompilationUnitNode> ret = null;

        NodeUnion<? extends Node> splice56 = null;

        NodeUnion<? extends PackageDeclarationNode> packageDeclaration57 = null;

        NodeUnion<? extends MetaprogramImportListNode> optionalMetaImportDeclarations58 = null;

        NodeUnion<? extends ImportListNode> optionalImportDeclarations59 = null;

        NodeUnion<? extends TypeDeclarationListNode> optionalTypeDeclarations60 = null;



                    ruleStart("compilationUnit");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1947:5: ( splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()] | ( packageDeclaration )? optionalMetaImportDeclarations optionalImportDeclarations optionalTypeDeclarations EOF )
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1948:9: splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_compilationUnit6657);
                    splice56=splice(CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice56 != null) // TODO: fix this with error nodes
                                      ret = splice56.castNodeType(factory, CompilationUnitNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1954:9: ( packageDeclaration )? optionalMetaImportDeclarations optionalImportDeclarations optionalTypeDeclarations EOF
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1954:9: ( packageDeclaration )?
                    int alt46=2;
                    alt46 = dfa46.predict(input);
                    switch (alt46) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: packageDeclaration
                            {
                            pushFollow(FOLLOW_packageDeclaration_in_compilationUnit6684);
                            packageDeclaration57=packageDeclaration();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_optionalMetaImportDeclarations_in_compilationUnit6695);
                    optionalMetaImportDeclarations58=optionalMetaImportDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalImportDeclarations_in_compilationUnit6705);
                    optionalImportDeclarations59=optionalImportDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeDeclarations_in_compilationUnit6715);
                    optionalTypeDeclarations60=optionalTypeDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,EOF,FOLLOW_EOF_in_compilationUnit6725); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeCompilationUnitNodeWithUnions(
                                              name,
                                              packageDeclaration57,
                                              optionalMetaImportDeclarations58,
                                              optionalImportDeclarations59,
                                              optionalTypeDeclarations60));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "compilationUnit"


    // $ANTLR start "packageDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1969:1: packageDeclaration returns [NodeUnion<? extends PackageDeclarationNode> ret] : ( splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | modifiers[false] 'package' name ';' );
    public final NodeUnion<? extends PackageDeclarationNode> packageDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends PackageDeclarationNode> ret = null;

        NodeUnion<? extends Node> splice61 = null;

        NodeUnion<? extends NameNode> name62 = null;

        BsjAntlrParser.modifiers_return modifiers63 = null;



                    ruleStart("packageDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1977:5: ( splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | modifiers[false] 'package' name ';' )
            int alt48=2;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1978:9: splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_packageDeclaration6803);
                    splice61=splice(PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice61 != null) // TODO: fix this with error nodes
                                      ret = splice61.castNodeType(factory, PackageDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1984:9: modifiers[false] 'package' name ';'
                    {
                    pushFollow(FOLLOW_modifiers_in_packageDeclaration6830);
                    modifiers63=modifiers(false);

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,PACKAGE,FOLLOW_PACKAGE_in_packageDeclaration6841); if (state.failed) return ret;
                    pushFollow(FOLLOW_name_in_packageDeclaration6843);
                    name62=name();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,SEMI,FOLLOW_SEMI_in_packageDeclaration6845); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makePackageDeclarationNodeWithUnions(
                                          name62,
                                          factory.makeNormalNodeUnion((modifiers63!=null?modifiers63.metaAnnotations:null)),
                                          factory.makeNormalNodeUnion((modifiers63!=null?modifiers63.annotations:null))));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "packageDeclaration"


    // $ANTLR start "metaImportDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1994:1: metaImportDeclarations returns [NodeUnion<? extends MetaprogramImportListNode> ret] : ( splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramImport (b= metaprogramImport )* ) ) ;
    public final NodeUnion<? extends MetaprogramImportListNode> metaImportDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramImportListNode> ret = null;

        BsjAntlrParser.metaprogramImport_return a = null;

        BsjAntlrParser.metaprogramImport_return b = null;

        NodeUnion<? extends Node> splice64 = null;



                    ruleStart("metaImportDeclarations");
                    List<NodeUnion<? extends MetaprogramImportNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2003:5: ( ( splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramImport (b= metaprogramImport )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2004:9: ( splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramImport (b= metaprogramImport )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2004:9: ( splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaprogramImport (b= metaprogramImport )* ) )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==128) ) {
                int LA50_1 = input.LA(2);

                if ( ((synpred54_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt50=1;
                }
                else if ( (true) ) {
                    alt50=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA50_0==METAIMPORT) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2005:13: splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_metaImportDeclarations6937);
                    splice64=splice(MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice64 != null) // TODO: fix this with error nodes
                                          ret = splice64.castNodeType(factory, MetaprogramImportListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2011:13: (a= metaprogramImport (b= metaprogramImport )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2011:13: (a= metaprogramImport (b= metaprogramImport )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2012:17: a= metaprogramImport (b= metaprogramImport )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends MetaprogramImportNode>>();
                                      
                    }
                    pushFollow(FOLLOW_metaprogramImport_in_metaImportDeclarations7008);
                    a=metaprogramImport();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "metaprogramImport", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2027:11: (b= metaprogramImport )*
                    loop49:
                    do {
                        int alt49=2;
                        alt49 = dfa49.predict(input);
                        switch (alt49) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2028:21: b= metaprogramImport
                    	    {
                    	    pushFollow(FOLLOW_metaprogramImport_in_metaImportDeclarations7056);
                    	    b=metaprogramImport();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "metaprogramImport", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop49;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeMetaprogramImportListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "metaImportDeclarations"


    // $ANTLR start "optionalMetaImportDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2048:1: optionalMetaImportDeclarations returns [NodeUnion<? extends MetaprogramImportListNode> ret] : ( ( metaImportDeclarations ) | () );
    public final NodeUnion<? extends MetaprogramImportListNode> optionalMetaImportDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramImportListNode> ret = null;

        NodeUnion<? extends MetaprogramImportListNode> metaImportDeclarations65 = null;



                    ruleStart("optionalMetaImportDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2056:5: ( ( metaImportDeclarations ) | () )
            int alt51=2;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2057:9: ( metaImportDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2057:9: ( metaImportDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2058:13: metaImportDeclarations
                    {
                    pushFollow(FOLLOW_metaImportDeclarations_in_optionalMetaImportDeclarations7203);
                    metaImportDeclarations65=metaImportDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = metaImportDeclarations65;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2064:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2064:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2065:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeMetaprogramImportListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalMetaImportDeclarations"


    // $ANTLR start "importDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2072:1: importDeclarations returns [NodeUnion<? extends ImportListNode> ret] : ( splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= importDeclaration (b= importDeclaration )* ) ) ;
    public final NodeUnion<? extends ImportListNode> importDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportListNode> ret = null;

        BsjAntlrParser.importDeclaration_return a = null;

        BsjAntlrParser.importDeclaration_return b = null;

        NodeUnion<? extends Node> splice66 = null;



                    ruleStart("importDeclarations");
                    List<NodeUnion<? extends ImportNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2081:5: ( ( splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= importDeclaration (b= importDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2082:9: ( splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= importDeclaration (b= importDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2082:9: ( splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= importDeclaration (b= importDeclaration )* ) )
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==128) ) {
                int LA53_1 = input.LA(2);

                if ( ((synpred57_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt53=1;
                }
                else if ( (true) ) {
                    alt53=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA53_0==IMPORT) ) {
                alt53=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }
            switch (alt53) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2083:13: splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_importDeclarations7350);
                    splice66=splice(ImportListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice66 != null) // TODO: fix this with error nodes
                                          ret = splice66.castNodeType(factory, ImportListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2089:13: (a= importDeclaration (b= importDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2089:13: (a= importDeclaration (b= importDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2090:17: a= importDeclaration (b= importDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends ImportNode>>();
                                      
                    }
                    pushFollow(FOLLOW_importDeclaration_in_importDeclarations7421);
                    a=importDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "importDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2105:11: (b= importDeclaration )*
                    loop52:
                    do {
                        int alt52=2;
                        alt52 = dfa52.predict(input);
                        switch (alt52) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2106:21: b= importDeclaration
                    	    {
                    	    pushFollow(FOLLOW_importDeclaration_in_importDeclarations7469);
                    	    b=importDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "importDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeImportListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importDeclarations"


    // $ANTLR start "optionalImportDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2126:1: optionalImportDeclarations returns [NodeUnion<? extends ImportListNode> ret] : ( ( importDeclarations ) | () );
    public final NodeUnion<? extends ImportListNode> optionalImportDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportListNode> ret = null;

        NodeUnion<? extends ImportListNode> importDeclarations67 = null;



                    ruleStart("optionalImportDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2134:5: ( ( importDeclarations ) | () )
            int alt54=2;
            alt54 = dfa54.predict(input);
            switch (alt54) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2135:9: ( importDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2135:9: ( importDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2136:13: importDeclarations
                    {
                    pushFollow(FOLLOW_importDeclarations_in_optionalImportDeclarations7616);
                    importDeclarations67=importDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = importDeclarations67;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2142:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2142:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2143:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeImportListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalImportDeclarations"


    // $ANTLR start "importBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2150:1: importBody returns [NodeUnion<? extends ImportNode> ret] : ( importStaticOnDemandBody | importStaticSingleBody | importOnDemandBody | importSingleBody ) ;
    public final NodeUnion<? extends ImportNode> importBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportNode> ret = null;

        NodeUnion<? extends StaticImportOnDemandNode> importStaticOnDemandBody68 = null;

        NodeUnion<? extends SingleStaticImportNode> importStaticSingleBody69 = null;

        NodeUnion<? extends ImportOnDemandNode> importOnDemandBody70 = null;

        NodeUnion<? extends ImportSingleTypeNode> importSingleBody71 = null;



                    ruleStart("importBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2158:5: ( ( importStaticOnDemandBody | importStaticSingleBody | importOnDemandBody | importSingleBody ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2159:9: ( importStaticOnDemandBody | importStaticSingleBody | importOnDemandBody | importSingleBody )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2159:9: ( importStaticOnDemandBody | importStaticSingleBody | importOnDemandBody | importSingleBody )
            int alt55=4;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==STATIC) ) {
                int LA55_1 = input.LA(2);

                if ( (synpred60_BsjAntlr()) ) {
                    alt55=1;
                }
                else if ( (synpred61_BsjAntlr()) ) {
                    alt55=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA55_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA55_2 = input.LA(2);

                if ( (((synpred62_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred62_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {
                    alt55=3;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt55=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 2, input);

                    throw nvae;
                }
            }
            else if ( (LA55_0==IDENTIFIER) ) {
                int LA55_3 = input.LA(2);

                if ( (synpred62_BsjAntlr()) ) {
                    alt55=3;
                }
                else if ( (true) ) {
                    alt55=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 55, 3, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2160:13: importStaticOnDemandBody
                    {
                    pushFollow(FOLLOW_importStaticOnDemandBody_in_importBody7763);
                    importStaticOnDemandBody68=importStaticOnDemandBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = importStaticOnDemandBody68;
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2165:13: importStaticSingleBody
                    {
                    pushFollow(FOLLOW_importStaticSingleBody_in_importBody7801);
                    importStaticSingleBody69=importStaticSingleBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = importStaticSingleBody69;
                                  
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2170:13: importOnDemandBody
                    {
                    pushFollow(FOLLOW_importOnDemandBody_in_importBody7839);
                    importOnDemandBody70=importOnDemandBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = importOnDemandBody70;
                                  
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2175:13: importSingleBody
                    {
                    pushFollow(FOLLOW_importSingleBody_in_importBody7877);
                    importSingleBody71=importSingleBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = importSingleBody71;
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importBody"


    // $ANTLR start "importStaticOnDemandBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2183:1: importStaticOnDemandBody returns [NodeUnion<? extends StaticImportOnDemandNode> ret] : 'static' name '.' '*' ;
    public final NodeUnion<? extends StaticImportOnDemandNode> importStaticOnDemandBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StaticImportOnDemandNode> ret = null;

        NodeUnion<? extends NameNode> name72 = null;



                    ruleStart("importStaticOnDemandBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2191:5: ( 'static' name '.' '*' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2192:9: 'static' name '.' '*'
            {
            match(input,STATIC,FOLLOW_STATIC_in_importStaticOnDemandBody7970); if (state.failed) return ret;
            pushFollow(FOLLOW_name_in_importStaticOnDemandBody7972);
            name72=name();

            state._fsp--;
            if (state.failed) return ret;
            match(input,DOT,FOLLOW_DOT_in_importStaticOnDemandBody7974); if (state.failed) return ret;
            match(input,STAR,FOLLOW_STAR_in_importStaticOnDemandBody7976); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeStaticImportOnDemandNodeWithUnions(name72));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importStaticOnDemandBody"


    // $ANTLR start "importStaticSingleBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2198:1: importStaticSingleBody returns [NodeUnion<? extends SingleStaticImportNode> ret] : 'static' separatedQualifiedName ;
    public final NodeUnion<? extends SingleStaticImportNode> importStaticSingleBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SingleStaticImportNode> ret = null;

        BsjAntlrParser.separatedQualifiedName_return separatedQualifiedName73 = null;



                    ruleStart("importStaticSingleBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2206:5: ( 'static' separatedQualifiedName )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2207:9: 'static' separatedQualifiedName
            {
            match(input,STATIC,FOLLOW_STATIC_in_importStaticSingleBody8054); if (state.failed) return ret;
            pushFollow(FOLLOW_separatedQualifiedName_in_importStaticSingleBody8056);
            separatedQualifiedName73=separatedQualifiedName();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeSingleStaticImportNodeWithUnions(
                                  (separatedQualifiedName73!=null?separatedQualifiedName73.name:null), (separatedQualifiedName73!=null?separatedQualifiedName73.ident:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importStaticSingleBody"


    // $ANTLR start "importOnDemandBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2214:1: importOnDemandBody returns [NodeUnion<? extends ImportOnDemandNode> ret] : name '.' '*' ;
    public final NodeUnion<? extends ImportOnDemandNode> importOnDemandBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportOnDemandNode> ret = null;

        NodeUnion<? extends NameNode> name74 = null;



                    ruleStart("importOnDemandBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2222:5: ( name '.' '*' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2223:9: name '.' '*'
            {
            pushFollow(FOLLOW_name_in_importOnDemandBody8134);
            name74=name();

            state._fsp--;
            if (state.failed) return ret;
            match(input,DOT,FOLLOW_DOT_in_importOnDemandBody8136); if (state.failed) return ret;
            match(input,STAR,FOLLOW_STAR_in_importOnDemandBody8138); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeImportOnDemandNodeWithUnions(name74));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importOnDemandBody"


    // $ANTLR start "importSingleBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2229:1: importSingleBody returns [NodeUnion<? extends ImportSingleTypeNode> ret] : name ;
    public final NodeUnion<? extends ImportSingleTypeNode> importSingleBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportSingleTypeNode> ret = null;

        NodeUnion<? extends NameNode> name75 = null;



                    ruleStart("importSingleBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2237:5: ( name )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2238:9: name
            {
            pushFollow(FOLLOW_name_in_importSingleBody8216);
            name75=name();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeImportSingleTypeNodeWithUnions(name75));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "importSingleBody"

    public static class importDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends ImportNode> ret;
    };

    // $ANTLR start "importDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2244:1: importDeclaration returns [NodeUnion<? extends ImportNode> ret] : ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] | 'import' importBody ';' );
    public final BsjAntlrParser.importDeclaration_return importDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.importDeclaration_return retval = new BsjAntlrParser.importDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice76 = null;

        NodeUnion<? extends ImportNode> importBody77 = null;



                    ruleStart("importDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2252:5: ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] | 'import' importBody ';' )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt56=1;
            }
            else if ( (LA56_0==IMPORT) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2253:9: splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_importDeclaration8294);
                    splice76=splice(ImportNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice76 != null) // TODO: fix this with error nodes
                                      retval.ret = splice76.castNodeType(factory, ImportNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2259:9: 'import' importBody ';'
                    {
                    match(input,IMPORT,FOLLOW_IMPORT_in_importDeclaration8321); if (state.failed) return retval;
                    pushFollow(FOLLOW_importBody_in_importDeclaration8331);
                    importBody77=importBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,SEMI,FOLLOW_SEMI_in_importDeclaration8341); if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = importBody77;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "importDeclaration"


    // $ANTLR start "javadoc"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2267:1: javadoc returns [NodeUnion<JavadocNode> ret] : ;
    public final NodeUnion<JavadocNode> javadoc() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<JavadocNode> ret = null;


                    ruleStart("javadoc");
                    int index = input.index();
                    while(--index >= 0)
                    {
                        if (input.get(index).getType() == BsjAntlrLexer.COMMENT)
                        {
                            Token token = input.get(index);
                            BsjSourceLocation startSourceLocation = new BsjSourceLocation(
                                    getResourceName(), token.getLine(), token.getCharPositionInLine() + 1);
                            BsjSourceLocation stopSourceLocation = new BsjSourceLocation(
                                    getResourceName(), token.getLine(),
                                    token.getCharPositionInLine() + token.getText().length() + 1);
                            factory.setStartSourceLocation(startSourceLocation);
                            factory.setStopSourceLocation(stopSourceLocation);
                            factorySourceLocationOverride = true;
                            ret = factory.makeNormalNodeUnion(factory.makeJavadocNode(parseJavadoc(token.getText())));
                            factorySourceLocationOverride = false;
                            break;
                        }
                        else if  (input.get(index).getChannel() == org.antlr.runtime.Token.DEFAULT_CHANNEL)
                        {
                            break;
                        }       
                    }
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2298:5: ()
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2299:5: 
            {
            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "javadoc"


    // $ANTLR start "typeDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2301:1: typeDeclarations returns [NodeUnion<? extends TypeDeclarationListNode> ret] : ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeDeclaration (b= typeDeclaration )* ) ) ;
    public final NodeUnion<? extends TypeDeclarationListNode> typeDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationListNode> ret = null;

        BsjAntlrParser.typeDeclaration_return a = null;

        BsjAntlrParser.typeDeclaration_return b = null;

        NodeUnion<? extends Node> splice78 = null;



                    ruleStart("typeDeclarations");
                    List<NodeUnion<? extends TypeDeclarationNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2310:5: ( ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeDeclaration (b= typeDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2311:9: ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeDeclaration (b= typeDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2311:9: ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeDeclaration (b= typeDeclaration )* ) )
            int alt58=2;
            alt58 = dfa58.predict(input);
            switch (alt58) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2312:13: splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_typeDeclarations8491);
                    splice78=splice(TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice78 != null) // TODO: fix this with error nodes
                                          ret = splice78.castNodeType(factory, TypeDeclarationListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2318:13: (a= typeDeclaration (b= typeDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2318:13: (a= typeDeclaration (b= typeDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2319:17: a= typeDeclaration (b= typeDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends TypeDeclarationNode>>();
                                      
                    }
                    pushFollow(FOLLOW_typeDeclaration_in_typeDeclarations8562);
                    a=typeDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "typeDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2334:11: (b= typeDeclaration )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==METAPROGRAM_START||LA57_0==ABSTRACT||LA57_0==CLASS||(LA57_0>=ENUM && LA57_0<=FINAL)||LA57_0==INTERFACE||LA57_0==NATIVE||(LA57_0>=PRIVATE && LA57_0<=PUBLIC)||(LA57_0>=STATIC && LA57_0<=STRICTFP)||LA57_0==SYNCHRONIZED||LA57_0==TRANSIENT||LA57_0==VOLATILE||LA57_0==SEMI||LA57_0==MONKEYS_AT||LA57_0==128) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2335:21: b= typeDeclaration
                    	    {
                    	    pushFollow(FOLLOW_typeDeclaration_in_typeDeclarations8610);
                    	    b=typeDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "typeDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeTypeDeclarationListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeDeclarations"


    // $ANTLR start "optionalTypeDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2355:1: optionalTypeDeclarations returns [NodeUnion<? extends TypeDeclarationListNode> ret] : ( ( typeDeclarations ) | () );
    public final NodeUnion<? extends TypeDeclarationListNode> optionalTypeDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationListNode> ret = null;

        NodeUnion<? extends TypeDeclarationListNode> typeDeclarations79 = null;



                    ruleStart("optionalTypeDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2363:5: ( ( typeDeclarations ) | () )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==METAPROGRAM_START||LA59_0==ABSTRACT||LA59_0==CLASS||(LA59_0>=ENUM && LA59_0<=FINAL)||LA59_0==INTERFACE||LA59_0==NATIVE||(LA59_0>=PRIVATE && LA59_0<=PUBLIC)||(LA59_0>=STATIC && LA59_0<=STRICTFP)||LA59_0==SYNCHRONIZED||LA59_0==TRANSIENT||LA59_0==VOLATILE||LA59_0==SEMI||LA59_0==MONKEYS_AT||LA59_0==128) ) {
                alt59=1;
            }
            else if ( (LA59_0==EOF) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2364:9: ( typeDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2364:9: ( typeDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2365:13: typeDeclarations
                    {
                    pushFollow(FOLLOW_typeDeclarations_in_optionalTypeDeclarations8757);
                    typeDeclarations79=typeDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = typeDeclarations79;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2371:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2371:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2372:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeTypeDeclarationListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalTypeDeclarations"

    public static class typeDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends TypeDeclarationNode> ret;
    };

    // $ANTLR start "typeDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2379:1: typeDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | classOrInterfaceDeclaration | noOp | {...}? => typeDeclarationBsjMetaprogramAnchor );
    public final BsjAntlrParser.typeDeclaration_return typeDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.typeDeclaration_return retval = new BsjAntlrParser.typeDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice80 = null;

        NodeUnion<? extends TypeDeclarationNode> classOrInterfaceDeclaration81 = null;

        NodeUnion<? extends NoOperationNode> noOp82 = null;

        NodeUnion<? extends TypeDeclarationMetaprogramAnchorNode> typeDeclarationBsjMetaprogramAnchor83 = null;



                    ruleStart("typeDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2387:5: ( splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | classOrInterfaceDeclaration | noOp | {...}? => typeDeclarationBsjMetaprogramAnchor )
            int alt60=4;
            alt60 = dfa60.predict(input);
            switch (alt60) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2388:9: splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_typeDeclaration8890);
                    splice80=splice(TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice80 != null) // TODO: fix this with error nodes
                                      retval.ret = splice80.castNodeType(factory, TypeDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2394:9: classOrInterfaceDeclaration
                    {
                    pushFollow(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration8917);
                    classOrInterfaceDeclaration81=classOrInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = classOrInterfaceDeclaration81;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2399:9: noOp
                    {
                    pushFollow(FOLLOW_noOp_in_typeDeclaration8943);
                    noOp82=noOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = noOp82;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2404:9: {...}? => typeDeclarationBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "typeDeclaration", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_typeDeclarationBsjMetaprogramAnchor_in_typeDeclaration8972);
                    typeDeclarationBsjMetaprogramAnchor83=typeDeclarationBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = typeDeclarationBsjMetaprogramAnchor83;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "typeDeclaration"


    // $ANTLR start "noOp"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2410:1: noOp returns [NodeUnion<? extends NoOperationNode> ret] : ( splice[NoOperationNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaAnnotationList ';' );
    public final NodeUnion<? extends NoOperationNode> noOp() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NoOperationNode> ret = null;

        NodeUnion<? extends Node> splice84 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList85 = null;



                    ruleStart("noOp");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2418:5: ( splice[NoOperationNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaAnnotationList ';' )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==128) ) {
                int LA61_1 = input.LA(2);

                if ( ((synpred70_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA61_0==SEMI||LA61_0==MONKEYS_AT) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2419:9: splice[NoOperationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_noOp9050);
                    splice84=splice(NoOperationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice84 != null) // TODO: fix this with error nodes
                                      ret = splice84.castNodeType(factory, NoOperationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2425:9: optionalMetaAnnotationList ';'
                    {
                    pushFollow(FOLLOW_optionalMetaAnnotationList_in_noOp9077);
                    optionalMetaAnnotationList85=optionalMetaAnnotationList();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,SEMI,FOLLOW_SEMI_in_noOp9087); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeNoOperationNodeWithUnions(optionalMetaAnnotationList85));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "noOp"


    // $ANTLR start "classOrInterfaceDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2432:1: classOrInterfaceDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( classHeader | enumHeader )=> classDeclaration | interfaceDeclaration );
    public final NodeUnion<? extends TypeDeclarationNode> classOrInterfaceDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationNode> ret = null;

        NodeUnion<? extends TypeDeclarationNode> classDeclaration86 = null;

        NodeUnion<? extends TypeDeclarationNode> interfaceDeclaration87 = null;



                    ruleStart("classOrInterfaceDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2440:5: ( ( classHeader | enumHeader )=> classDeclaration | interfaceDeclaration )
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:9: ( classHeader | enumHeader )=> classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_classOrInterfaceDeclaration9175);
                    classDeclaration86=classDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = classDeclaration86;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2446:9: interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration9201);
                    interfaceDeclaration87=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = interfaceDeclaration87;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classOrInterfaceDeclaration"

    public static class modifiers_return extends ParserRuleReturnScope {
        public ModifierSet modifiers;
        public AccessModifier access;
        public AnnotationListNode annotations;
        public MetaAnnotationListNode metaAnnotations;
    };

    // $ANTLR start "modifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2455:1: modifiers[boolean accessAllowed, Modifier... mods] returns [ModifierSet modifiers, AccessModifier access, AnnotationListNode annotations,\n MetaAnnotationListNode metaAnnotations] : ( metaAnnotation | annotation | ( 'public' | 'protected' | 'private' ) | 'abstract' | 'final' | 'native' | 'static' | 'strictfp' | 'synchronized' | 'transient' | 'volatile' )* ;
    public final BsjAntlrParser.modifiers_return modifiers(boolean accessAllowed, Modifier... mods) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.modifiers_return retval = new BsjAntlrParser.modifiers_return();
        retval.start = input.LT(1);

        BsjAntlrParser.metaAnnotation_return metaAnnotation88 = null;

        BsjAntlrParser.annotation_return annotation89 = null;



                    ruleStart("modifiers");
                    List<NodeUnion<? extends AnnotationNode>> annotationList =
                            new ArrayList<NodeUnion<? extends AnnotationNode>>();
                    List<NodeUnion<? extends MetaAnnotationNode>> metaAnnotationList =
                            new ArrayList<NodeUnion<? extends MetaAnnotationNode>>();
                    retval.access = AccessModifier.PACKAGE;
                    retval.modifiers = new ModifierSet(mods);
                    AccessModifier currentAccess = null;
                    Modifier accessAsModifier = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2475:5: ( ( metaAnnotation | annotation | ( 'public' | 'protected' | 'private' ) | 'abstract' | 'final' | 'native' | 'static' | 'strictfp' | 'synchronized' | 'transient' | 'volatile' )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2476:9: ( metaAnnotation | annotation | ( 'public' | 'protected' | 'private' ) | 'abstract' | 'final' | 'native' | 'static' | 'strictfp' | 'synchronized' | 'transient' | 'volatile' )*
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2476:9: ( metaAnnotation | annotation | ( 'public' | 'protected' | 'private' ) | 'abstract' | 'final' | 'native' | 'static' | 'strictfp' | 'synchronized' | 'transient' | 'volatile' )*
            loop64:
            do {
                int alt64=12;
                alt64 = dfa64.predict(input);
                switch (alt64) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2477:13: metaAnnotation
            	    {
            	    pushFollow(FOLLOW_metaAnnotation_in_modifiers9305);
            	    metaAnnotation88=metaAnnotation();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if (  true  ) {

            	                      // TODO: fix with error nodes
            	                      if ((metaAnnotation88!=null?metaAnnotation88.ret:null) != null && (metaAnnotation88!=null?metaAnnotation88.ret:null).getNodeValue() != null)
            	                      {
            	                          metaAnnotationList.add((metaAnnotation88!=null?metaAnnotation88.ret:null));
            	                      } else
            	                      {
            	                          reportDiagnostic(new RuleParseFailureDiagnosticImpl(
            	                                  getSourceLocation((metaAnnotation88!=null?((Token)metaAnnotation88.start):null)),
            	                                  "metaAnnotation",
            	                                  getSourceLocation((metaAnnotation88!=null?((Token)metaAnnotation88.stop):null))));
            	                      }
            	                  
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2492:13: annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_modifiers9343);
            	    annotation89=annotation();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if (  true  ) {

            	                      // TODO: fix with error nodes
            	                      if ((annotation89!=null?annotation89.ret:null) != null && (annotation89!=null?annotation89.ret:null).getNodeValue() != null)
            	                      {
            	                          annotationList.add((annotation89!=null?annotation89.ret:null));
            	                      } else
            	                      {
            	                          reportDiagnostic(new RuleParseFailureDiagnosticImpl(
            	                                  getSourceLocation((annotation89!=null?((Token)annotation89.start):null)),
            	                                  "annotation",
            	                                  getSourceLocation((annotation89!=null?((Token)annotation89.stop):null))));
            	                      }
            	                  
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2507:13: ( 'public' | 'protected' | 'private' )
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2507:13: ( 'public' | 'protected' | 'private' )
            	    int alt63=3;
            	    switch ( input.LA(1) ) {
            	    case PUBLIC:
            	        {
            	        alt63=1;
            	        }
            	        break;
            	    case PROTECTED:
            	        {
            	        alt63=2;
            	        }
            	        break;
            	    case PRIVATE:
            	        {
            	        alt63=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 63, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt63) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2508:17: 'public'
            	            {
            	            match(input,PUBLIC,FOLLOW_PUBLIC_in_modifiers9399); if (state.failed) return retval;
            	            if (  true  ) {

            	                                  currentAccess = AccessModifier.PUBLIC;
            	                                  accessAsModifier = Modifier.PUBLIC;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2514:17: 'protected'
            	            {
            	            match(input,PROTECTED,FOLLOW_PROTECTED_in_modifiers9449); if (state.failed) return retval;
            	            if (  true  ) {

            	                                  currentAccess = AccessModifier.PROTECTED;
            	                                  accessAsModifier = Modifier.PROTECTED;
            	                              
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2520:17: 'private'
            	            {
            	            match(input,PRIVATE,FOLLOW_PRIVATE_in_modifiers9499); if (state.failed) return retval;
            	            if (  true  ) {

            	                                  currentAccess = AccessModifier.PRIVATE;
            	                                  accessAsModifier = Modifier.PRIVATE;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    if (  true  ) {

            	                      if (accessAllowed)
            	                      {
            	                          if (retval.access != AccessModifier.PACKAGE)
            	                          {
            	                              if (retval.access == currentAccess)
            	                              {
            	                                  reportDiagnostic(new DuplicateModifierDiagnosticImpl(
            	                                          getSourceLocation(-1),
            	                                          ((Rule_scope)Rule_stack.peek()).name,
            	                                          currentAccess.toString().toLowerCase()));
            	                              } else
            	                              {
            	                                  reportDiagnostic(new ConflictingAccessModifierDiagnosticImpl(
            	                                          getSourceLocation(-1),
            	                                          ((Rule_scope)Rule_stack.peek()).name,
            	                                          retval.access.toString().toLowerCase(),
            	                                          currentAccess.toString().toLowerCase()));
            	                              }
            	                          } else
            	                          {
            	                              retval.access = currentAccess;
            	                          }
            	                      } else
            	                      {
            	                          retval.modifiers.notifySeen(accessAsModifier);
            	                      }
            	                  
            	    }

            	    }
            	    break;
            	case 4 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2555:13: 'abstract'
            	    {
            	    match(input,ABSTRACT,FOLLOW_ABSTRACT_in_modifiers9569); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.ABSTRACT);
            	                  
            	    }

            	    }
            	    break;
            	case 5 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2560:13: 'final'
            	    {
            	    match(input,FINAL,FOLLOW_FINAL_in_modifiers9607); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.FINAL);
            	                  
            	    }

            	    }
            	    break;
            	case 6 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2565:13: 'native'
            	    {
            	    match(input,NATIVE,FOLLOW_NATIVE_in_modifiers9645); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.NATIVE);
            	                  
            	    }

            	    }
            	    break;
            	case 7 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2570:13: 'static'
            	    {
            	    match(input,STATIC,FOLLOW_STATIC_in_modifiers9683); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.STATIC);
            	                  
            	    }

            	    }
            	    break;
            	case 8 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2575:13: 'strictfp'
            	    {
            	    match(input,STRICTFP,FOLLOW_STRICTFP_in_modifiers9721); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.STRICTFP);
            	                  
            	    }

            	    }
            	    break;
            	case 9 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2580:13: 'synchronized'
            	    {
            	    match(input,SYNCHRONIZED,FOLLOW_SYNCHRONIZED_in_modifiers9759); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.SYNCHRONIZED);
            	                  
            	    }

            	    }
            	    break;
            	case 10 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2585:13: 'transient'
            	    {
            	    match(input,TRANSIENT,FOLLOW_TRANSIENT_in_modifiers9797); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.TRANSIENT);
            	                  
            	    }

            	    }
            	    break;
            	case 11 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2590:13: 'volatile'
            	    {
            	    match(input,VOLATILE,FOLLOW_VOLATILE_in_modifiers9835); if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.modifiers.notifySeen(Modifier.VOLATILE);
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          retval.annotations = factory.makeAnnotationListNodeWithUnions(annotationList);
                          retval.metaAnnotations = factory.makeMetaAnnotationListNodeWithUnions(metaAnnotationList);
                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "modifiers"


    // $ANTLR start "annotationMethodModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2597:1: annotationMethodModifiers returns [NodeUnion<? extends AnnotationMethodModifiersNode> ret] : modifiers[false, Modifier.PUBLIC, Modifier.ABSTRACT] ;
    public final NodeUnion<? extends AnnotationMethodModifiersNode> annotationMethodModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMethodModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers90 = null;



                    ruleStart("annotationMethodModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2605:5: ( modifiers[false, Modifier.PUBLIC, Modifier.ABSTRACT] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2606:9: modifiers[false, Modifier.PUBLIC, Modifier.ABSTRACT]
            {
            pushFollow(FOLLOW_modifiers_in_annotationMethodModifiers9928);
            modifiers90=modifiers(false, Modifier.PUBLIC, Modifier.ABSTRACT);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationMethodModifiersNode(
                                  (modifiers90!=null?modifiers90.metaAnnotations:null),
                                  (modifiers90!=null?modifiers90.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationMethodModifiers"


    // $ANTLR start "annotationModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2614:1: annotationModifiers returns [NodeUnion<? extends AnnotationModifiersNode> ret] : modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT] ;
    public final NodeUnion<? extends AnnotationModifiersNode> annotationModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers91 = null;



                    ruleStart("annotationModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2622:5: ( modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2623:9: modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT]
            {
            pushFollow(FOLLOW_modifiers_in_annotationModifiers10007);
            modifiers91=modifiers(true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationModifiersNode(
                                  (modifiers91!=null?modifiers91.access:null),
                                  (modifiers91!=null?modifiers91.modifiers:null).has(Modifier.STATIC),
                                  (modifiers91!=null?modifiers91.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers91!=null?modifiers91.metaAnnotations:null),
                                  (modifiers91!=null?modifiers91.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationModifiers"


    // $ANTLR start "classModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2634:1: classModifiers returns [NodeUnion<? extends ClassModifiersNode> ret] : modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.STRICTFP] ;
    public final NodeUnion<? extends ClassModifiersNode> classModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers92 = null;



                    ruleStart("classModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2642:5: ( modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.STRICTFP] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2643:9: modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.STRICTFP]
            {
            pushFollow(FOLLOW_modifiers_in_classModifiers10091);
            modifiers92=modifiers(true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.STRICTFP);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeClassModifiersNode(
                                  (modifiers92!=null?modifiers92.access:null),
                                  (modifiers92!=null?modifiers92.modifiers:null).has(Modifier.ABSTRACT),
                                  (modifiers92!=null?modifiers92.modifiers:null).has(Modifier.STATIC),
                                  (modifiers92!=null?modifiers92.modifiers:null).has(Modifier.FINAL),
                                  (modifiers92!=null?modifiers92.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers92!=null?modifiers92.metaAnnotations:null),
                                  (modifiers92!=null?modifiers92.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classModifiers"


    // $ANTLR start "constantModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2656:1: constantModifiers returns [NodeUnion<? extends ConstantModifiersNode> ret] : modifiers[false, Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL] ;
    public final NodeUnion<? extends ConstantModifiersNode> constantModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstantModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers93 = null;



                    ruleStart("constantModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2664:5: ( modifiers[false, Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2665:9: modifiers[false, Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL]
            {
            pushFollow(FOLLOW_modifiers_in_constantModifiers10170);
            modifiers93=modifiers(false, Modifier.PUBLIC, Modifier.STATIC, Modifier.FINAL);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeConstantModifiersNode(
                                  (modifiers93!=null?modifiers93.metaAnnotations:null),
                                  (modifiers93!=null?modifiers93.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "constantModifiers"


    // $ANTLR start "constructorModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2673:1: constructorModifiers returns [NodeUnion<? extends ConstructorModifiersNode> ret] : modifiers[true] ;
    public final NodeUnion<? extends ConstructorModifiersNode> constructorModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers94 = null;



                    ruleStart("constructorModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2681:5: ( modifiers[true] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2682:9: modifiers[true]
            {
            pushFollow(FOLLOW_modifiers_in_constructorModifiers10249);
            modifiers94=modifiers(true);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeConstructorModifiersNode(
                                  (modifiers94!=null?modifiers94.access:null),
                                  (modifiers94!=null?modifiers94.metaAnnotations:null),
                                  (modifiers94!=null?modifiers94.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "constructorModifiers"


    // $ANTLR start "enumConstantModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2691:1: enumConstantModifiers returns [NodeUnion<? extends EnumConstantModifiersNode> ret] : modifiers[false] ;
    public final NodeUnion<? extends EnumConstantModifiersNode> enumConstantModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumConstantModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers95 = null;



                    ruleStart("enumConstantModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2699:5: ( modifiers[false] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2700:9: modifiers[false]
            {
            pushFollow(FOLLOW_modifiers_in_enumConstantModifiers10328);
            modifiers95=modifiers(false);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeEnumConstantModifiersNode(
                                  (modifiers95!=null?modifiers95.metaAnnotations:null),
                                  (modifiers95!=null?modifiers95.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumConstantModifiers"


    // $ANTLR start "enumModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2708:1: enumModifiers returns [NodeUnion<? extends EnumModifiersNode> ret] : modifiers[true, Modifier.STRICTFP, Modifier.STATIC] ;
    public final NodeUnion<? extends EnumModifiersNode> enumModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers96 = null;



                    ruleStart("enumModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2716:5: ( modifiers[true, Modifier.STRICTFP, Modifier.STATIC] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2717:9: modifiers[true, Modifier.STRICTFP, Modifier.STATIC]
            {
            pushFollow(FOLLOW_modifiers_in_enumModifiers10407);
            modifiers96=modifiers(true, Modifier.STRICTFP, Modifier.STATIC);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeEnumModifiersNode(
                                  (modifiers96!=null?modifiers96.access:null),
                                  (modifiers96!=null?modifiers96.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers96!=null?modifiers96.metaAnnotations:null),
                                  (modifiers96!=null?modifiers96.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumModifiers"


    // $ANTLR start "fieldModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2727:1: fieldModifiers returns [NodeUnion<? extends FieldModifiersNode> ret] : modifiers[true, Modifier.STATIC, Modifier.FINAL, Modifier.TRANSIENT, Modifier.VOLATILE] ;
    public final NodeUnion<? extends FieldModifiersNode> fieldModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends FieldModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers97 = null;



                    ruleStart("fieldModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2735:5: ( modifiers[true, Modifier.STATIC, Modifier.FINAL, Modifier.TRANSIENT, Modifier.VOLATILE] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2736:9: modifiers[true, Modifier.STATIC, Modifier.FINAL, Modifier.TRANSIENT, Modifier.VOLATILE]
            {
            pushFollow(FOLLOW_modifiers_in_fieldModifiers10486);
            modifiers97=modifiers(true, Modifier.STATIC, Modifier.FINAL, Modifier.TRANSIENT, Modifier.VOLATILE);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeFieldModifiersNode(
                                  (modifiers97!=null?modifiers97.access:null),
                                  (modifiers97!=null?modifiers97.modifiers:null).has(Modifier.STATIC),
                                  (modifiers97!=null?modifiers97.modifiers:null).has(Modifier.FINAL),
                                  (modifiers97!=null?modifiers97.modifiers:null).has(Modifier.TRANSIENT),
                                  (modifiers97!=null?modifiers97.modifiers:null).has(Modifier.VOLATILE),
                                  (modifiers97!=null?modifiers97.metaAnnotations:null),
                                  (modifiers97!=null?modifiers97.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "fieldModifiers"


    // $ANTLR start "localClassModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2749:1: localClassModifiers returns [NodeUnion<? extends LocalClassModifiersNode> ret] : modifiers[false, Modifier.ABSTRACT, Modifier.FINAL, Modifier.STRICTFP] ;
    public final NodeUnion<? extends LocalClassModifiersNode> localClassModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalClassModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers98 = null;



                    ruleStart("localClassModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2757:5: ( modifiers[false, Modifier.ABSTRACT, Modifier.FINAL, Modifier.STRICTFP] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2758:9: modifiers[false, Modifier.ABSTRACT, Modifier.FINAL, Modifier.STRICTFP]
            {
            pushFollow(FOLLOW_modifiers_in_localClassModifiers10565);
            modifiers98=modifiers(false, Modifier.ABSTRACT, Modifier.FINAL, Modifier.STRICTFP);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeLocalClassModifiersNode(
                                  (modifiers98!=null?modifiers98.modifiers:null).has(Modifier.ABSTRACT),
                                  (modifiers98!=null?modifiers98.modifiers:null).has(Modifier.FINAL),
                                  (modifiers98!=null?modifiers98.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers98!=null?modifiers98.metaAnnotations:null),
                                  (modifiers98!=null?modifiers98.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "localClassModifiers"


    // $ANTLR start "interfaceModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2769:1: interfaceModifiers returns [NodeUnion<? extends InterfaceModifiersNode> ret] : modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT] ;
    public final NodeUnion<? extends InterfaceModifiersNode> interfaceModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers99 = null;



                    ruleStart("interfaceModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2777:5: ( modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2778:9: modifiers[true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT]
            {
            pushFollow(FOLLOW_modifiers_in_interfaceModifiers10644);
            modifiers99=modifiers(true, Modifier.STATIC, Modifier.STRICTFP, Modifier.ABSTRACT);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeInterfaceModifiersNode(
                                  (modifiers99!=null?modifiers99.access:null),
                                  (modifiers99!=null?modifiers99.modifiers:null).has(Modifier.STATIC),
                                  (modifiers99!=null?modifiers99.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers99!=null?modifiers99.metaAnnotations:null),
                                  (modifiers99!=null?modifiers99.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceModifiers"


    // $ANTLR start "methodModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2789:1: methodModifiers returns [NodeUnion<? extends MethodModifiersNode> ret] : modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.SYNCHRONIZED, Modifier.NATIVE, Modifier.STRICTFP] ;
    public final NodeUnion<? extends MethodModifiersNode> methodModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers100 = null;



                    ruleStart("methodModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2797:5: ( modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.SYNCHRONIZED, Modifier.NATIVE, Modifier.STRICTFP] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2798:9: modifiers[true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.SYNCHRONIZED, Modifier.NATIVE, Modifier.STRICTFP]
            {
            pushFollow(FOLLOW_modifiers_in_methodModifiers10723);
            modifiers100=modifiers(true, Modifier.ABSTRACT, Modifier.STATIC, Modifier.FINAL, Modifier.SYNCHRONIZED, Modifier.NATIVE, Modifier.STRICTFP);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeMethodModifiersNode(
                                  (modifiers100!=null?modifiers100.access:null),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.ABSTRACT),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.STATIC),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.FINAL),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.SYNCHRONIZED),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.NATIVE),
                                  (modifiers100!=null?modifiers100.modifiers:null).has(Modifier.STRICTFP),
                                  (modifiers100!=null?modifiers100.metaAnnotations:null),
                                  (modifiers100!=null?modifiers100.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "methodModifiers"


    // $ANTLR start "variableModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2813:1: variableModifiers returns [NodeUnion<? extends VariableModifiersNode> ret] : modifiers[false, Modifier.FINAL] ;
    public final NodeUnion<? extends VariableModifiersNode> variableModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableModifiersNode> ret = null;

        BsjAntlrParser.modifiers_return modifiers101 = null;



                    ruleStart("variableModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2821:5: ( modifiers[false, Modifier.FINAL] )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2822:9: modifiers[false, Modifier.FINAL]
            {
            pushFollow(FOLLOW_modifiers_in_variableModifiers10802);
            modifiers101=modifiers(false, Modifier.FINAL);

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeVariableModifiersNode(
                                  (modifiers101!=null?modifiers101.modifiers:null).has(Modifier.FINAL),
                                  (modifiers101!=null?modifiers101.metaAnnotations:null),
                                  (modifiers101!=null?modifiers101.annotations:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "variableModifiers"


    // $ANTLR start "classDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2832:1: classDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( classHeader )=> normalClassDeclaration | enumDeclaration );
    public final NodeUnion<? extends TypeDeclarationNode> classDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationNode> ret = null;

        NodeUnion<? extends ClassDeclarationNode> normalClassDeclaration102 = null;

        NodeUnion<? extends EnumDeclarationNode> enumDeclaration103 = null;



                    ruleStart("classDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2840:5: ( ( classHeader )=> normalClassDeclaration | enumDeclaration )
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2841:9: ( classHeader )=> normalClassDeclaration
                    {
                    pushFollow(FOLLOW_normalClassDeclaration_in_classDeclaration10886);
                    normalClassDeclaration102=normalClassDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = normalClassDeclaration102;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2846:9: enumDeclaration
                    {
                    pushFollow(FOLLOW_enumDeclaration_in_classDeclaration10912);
                    enumDeclaration103=enumDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = enumDeclaration103;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classDeclaration"


    // $ANTLR start "normalClassDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2852:1: normalClassDeclaration returns [NodeUnion<? extends ClassDeclarationNode> ret] : ( splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc classModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody );
    public final NodeUnion<? extends ClassDeclarationNode> normalClassDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice104 = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList105 = null;

        NodeUnion<? extends ClassModifiersNode> classModifiers106 = null;

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType107 = null;

        NodeUnion<? extends ClassBodyNode> classBody108 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters109 = null;

        NodeUnion<JavadocNode> javadoc110 = null;



                    ruleStart("normalClassDeclaration");
                    NodeUnion<? extends DeclaredTypeListNode> declaredTypeListNode = 
                            factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2862:5: ( splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc classModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody )
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2863:9: splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_normalClassDeclaration10993);
                    splice104=splice(ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice104 != null) // TODO: fix this with error nodes
                                      ret = splice104.castNodeType(factory, ClassDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2869:9: javadoc classModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody
                    {
                    pushFollow(FOLLOW_javadoc_in_normalClassDeclaration11020);
                    javadoc110=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_classModifiers_in_normalClassDeclaration11022);
                    classModifiers106=classModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,CLASS,FOLLOW_CLASS_in_normalClassDeclaration11032); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_normalClassDeclaration11036);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_normalClassDeclaration11046);
                    optionalTypeParameters109=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2872:9: ( 'extends' classOrInterfaceType )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==EXTENDS) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2872:10: 'extends' classOrInterfaceType
                            {
                            match(input,EXTENDS,FOLLOW_EXTENDS_in_normalClassDeclaration11057); if (state.failed) return ret;
                            pushFollow(FOLLOW_classOrInterfaceType_in_normalClassDeclaration11059);
                            classOrInterfaceType107=classOrInterfaceType();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2873:9: ( 'implements' declaredTypeList )?
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==IMPLEMENTS) ) {
                        alt67=1;
                    }
                    switch (alt67) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2874:13: 'implements' declaredTypeList
                            {
                            match(input,IMPLEMENTS,FOLLOW_IMPLEMENTS_in_normalClassDeclaration11085); if (state.failed) return ret;
                            pushFollow(FOLLOW_declaredTypeList_in_normalClassDeclaration11087);
                            declaredTypeList105=declaredTypeList();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              declaredTypeListNode = declaredTypeList105;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_classBody_in_normalClassDeclaration11134);
                    classBody108=classBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {
                                  
                                  ret = factory.makeNormalNodeUnion(factory.makeClassDeclarationNodeWithUnions(
                                          classModifiers106,
                                          (classOrInterfaceType107!=null?classOrInterfaceType107.ret:null),
                                          declaredTypeListNode,
                                          classBody108,
                                          optionalTypeParameters109,                    
                                          (id!=null?id.ret:null),
                                          javadoc110));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "normalClassDeclaration"


    // $ANTLR start "localClassDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2892:1: localClassDeclaration returns [NodeUnion<? extends LocalClassDeclarationNode> ret] : ( splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc localClassModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody );
    public final NodeUnion<? extends LocalClassDeclarationNode> localClassDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalClassDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice111 = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList112 = null;

        NodeUnion<? extends LocalClassModifiersNode> localClassModifiers113 = null;

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType114 = null;

        NodeUnion<? extends ClassBodyNode> classBody115 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters116 = null;

        NodeUnion<JavadocNode> javadoc117 = null;



                    ruleStart("localClassDeclaration");
                    NodeUnion<? extends DeclaredTypeListNode> declaredTypeListNode = 
                            factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2902:5: ( splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc localClassModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody )
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2903:9: splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_localClassDeclaration11215);
                    splice111=splice(LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice111 != null) // TODO: fix this with error nodes
                                      ret = splice111.castNodeType(factory, LocalClassDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2909:9: javadoc localClassModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody
                    {
                    pushFollow(FOLLOW_javadoc_in_localClassDeclaration11242);
                    javadoc117=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_localClassModifiers_in_localClassDeclaration11244);
                    localClassModifiers113=localClassModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,CLASS,FOLLOW_CLASS_in_localClassDeclaration11254); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_localClassDeclaration11258);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_localClassDeclaration11268);
                    optionalTypeParameters116=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2912:9: ( 'extends' classOrInterfaceType )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==EXTENDS) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2912:10: 'extends' classOrInterfaceType
                            {
                            match(input,EXTENDS,FOLLOW_EXTENDS_in_localClassDeclaration11279); if (state.failed) return ret;
                            pushFollow(FOLLOW_classOrInterfaceType_in_localClassDeclaration11281);
                            classOrInterfaceType114=classOrInterfaceType();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2913:9: ( 'implements' declaredTypeList )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==IMPLEMENTS) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2914:13: 'implements' declaredTypeList
                            {
                            match(input,IMPLEMENTS,FOLLOW_IMPLEMENTS_in_localClassDeclaration11307); if (state.failed) return ret;
                            pushFollow(FOLLOW_declaredTypeList_in_localClassDeclaration11309);
                            declaredTypeList112=declaredTypeList();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              declaredTypeListNode = declaredTypeList112;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_classBody_in_localClassDeclaration11356);
                    classBody115=classBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {
                                  
                                  ret = factory.makeNormalNodeUnion(factory.makeLocalClassDeclarationNodeWithUnions(
                                          localClassModifiers113,
                                          (classOrInterfaceType114!=null?classOrInterfaceType114.ret:null),
                                          declaredTypeListNode,
                                          classBody115,
                                          optionalTypeParameters116,                    
                                          (id!=null?id.ret:null),
                                          javadoc117));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "localClassDeclaration"


    // $ANTLR start "typeParameters"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2932:1: typeParameters returns [NodeUnion<? extends TypeParameterListNode> ret] : '<' ( splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeParameter ( ',' b= typeParameter )* ) ) '>' ;
    public final NodeUnion<? extends TypeParameterListNode> typeParameters() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeParameterListNode> ret = null;

        BsjAntlrParser.typeParameter_return a = null;

        BsjAntlrParser.typeParameter_return b = null;

        NodeUnion<? extends Node> splice118 = null;



                    ruleStart("typeParameters");
                    List<NodeUnion<? extends TypeParameterNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2941:5: ( '<' ( splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeParameter ( ',' b= typeParameter )* ) ) '>' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2942:9: '<' ( splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeParameter ( ',' b= typeParameter )* ) ) '>'
            {
            match(input,LT,FOLLOW_LT_in_typeParameters11434); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2943:9: ( splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeParameter ( ',' b= typeParameter )* ) )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==128) ) {
                int LA73_1 = input.LA(2);

                if ( ((synpred93_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt73=1;
                }
                else if ( (true) ) {
                    alt73=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 73, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA73_0==IDENTIFIER) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2944:13: splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_typeParameters11458);
                    splice118=splice(TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice118 != null) // TODO: fix this with error nodes
                                          ret = splice118.castNodeType(factory, TypeParameterListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2950:13: (a= typeParameter ( ',' b= typeParameter )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2950:13: (a= typeParameter ( ',' b= typeParameter )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2951:17: a= typeParameter ( ',' b= typeParameter )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends TypeParameterNode>>();
                                      
                    }
                    pushFollow(FOLLOW_typeParameter_in_typeParameters11529);
                    a=typeParameter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "typeParameter", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2966:11: ( ',' b= typeParameter )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==COMMA) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2967:13: ',' b= typeParameter
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_typeParameters11567); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_typeParameter_in_typeParameters11591);
                    	    b=typeParameter();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "typeParameter", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeTypeParameterListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }

            match(input,GT,FOLLOW_GT_in_typeParameters11666); if (state.failed) return ret;

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeParameters"


    // $ANTLR start "optionalTypeParameters"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2989:1: optionalTypeParameters returns [NodeUnion<? extends TypeParameterListNode> ret] : ( ( typeParameters ) | () );
    public final NodeUnion<? extends TypeParameterListNode> optionalTypeParameters() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeParameterListNode> ret = null;

        NodeUnion<? extends TypeParameterListNode> typeParameters119 = null;



                    ruleStart("optionalTypeParameters");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2997:5: ( ( typeParameters ) | () )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==LT) ) {
                alt74=1;
            }
            else if ( (LA74_0==EXTENDS||LA74_0==IDENTIFIER||LA74_0==BOOLEAN||LA74_0==BYTE||LA74_0==CHAR||LA74_0==DOUBLE||LA74_0==FLOAT||LA74_0==IMPLEMENTS||LA74_0==INT||LA74_0==LONG||LA74_0==SHORT||LA74_0==VOID||LA74_0==LBRACE||LA74_0==128) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2998:9: ( typeParameters )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2998:9: ( typeParameters )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2999:13: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_optionalTypeParameters11748);
                    typeParameters119=typeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = typeParameters119;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3005:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3005:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3006:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeTypeParameterListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalTypeParameters"

    public static class typeParameter_return extends ParserRuleReturnScope {
        public NodeUnion<? extends TypeParameterNode> ret;
    };

    // $ANTLR start "typeParameter"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3013:1: typeParameter returns [NodeUnion<? extends TypeParameterNode> ret] : ( splice[TypeParameterNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier ( 'extends' typeBound )? );
    public final BsjAntlrParser.typeParameter_return typeParameter() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.typeParameter_return retval = new BsjAntlrParser.typeParameter_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice120 = null;

        NodeUnion<? extends DeclaredTypeListNode> typeBound121 = null;



                    ruleStart("typeParameter");
                    NodeUnion<? extends DeclaredTypeListNode> typeBoundNode = 
                            factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3023:5: ( splice[TypeParameterNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier ( 'extends' typeBound )? )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA76_1 = input.LA(2);

                if ( ((synpred96_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt76=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt76=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 76, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA76_0==IDENTIFIER) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3024:9: splice[TypeParameterNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_typeParameter11881);
                    splice120=splice(TypeParameterNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice120 != null) // TODO: fix this with error nodes
                                      retval.ret = splice120.castNodeType(factory, TypeParameterNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3030:9: id= identifier ( 'extends' typeBound )?
                    {
                    pushFollow(FOLLOW_identifier_in_typeParameter11910);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3031:9: ( 'extends' typeBound )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==EXTENDS) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3032:13: 'extends' typeBound
                            {
                            match(input,EXTENDS,FOLLOW_EXTENDS_in_typeParameter11934); if (state.failed) return retval;
                            pushFollow(FOLLOW_typeBound_in_typeParameter11936);
                            typeBound121=typeBound();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              typeBoundNode = typeBound121;
                                          
                            }

                            }
                            break;

                    }

                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeTypeParameterNodeWithUnions((id!=null?id.ret:null), typeBoundNode));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "typeParameter"


    // $ANTLR start "typeBound"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3042:1: typeBound returns [NodeUnion<? extends DeclaredTypeListNode> ret] : ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* ) ) ;
    public final NodeUnion<? extends DeclaredTypeListNode> typeBound() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DeclaredTypeListNode> ret = null;

        BsjAntlrParser.classOrInterfaceType_return a = null;

        BsjAntlrParser.classOrInterfaceType_return b = null;

        NodeUnion<? extends Node> splice122 = null;



                    ruleStart("typeBound");
                    List<NodeUnion<? extends DeclaredTypeNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3051:5: ( ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3052:9: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3052:9: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* ) )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==128) ) {
                int LA78_1 = input.LA(2);

                if ( ((synpred98_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt78=1;
                }
                else if ( (true) ) {
                    alt78=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 78, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA78_0==IDENTIFIER) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3053:13: splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_typeBound12061);
                    splice122=splice(DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice122 != null) // TODO: fix this with error nodes
                                          ret = splice122.castNodeType(factory, DeclaredTypeListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3059:13: (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3059:13: (a= classOrInterfaceType ( '&' b= classOrInterfaceType )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3060:17: a= classOrInterfaceType ( '&' b= classOrInterfaceType )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends DeclaredTypeNode>>();
                                      
                    }
                    pushFollow(FOLLOW_classOrInterfaceType_in_typeBound12132);
                    a=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "classOrInterfaceType", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3075:11: ( '&' b= classOrInterfaceType )*
                    loop77:
                    do {
                        int alt77=2;
                        int LA77_0 = input.LA(1);

                        if ( (LA77_0==AMP) ) {
                            alt77=1;
                        }


                        switch (alt77) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3076:13: '&' b= classOrInterfaceType
                    	    {
                    	    match(input,AMP,FOLLOW_AMP_in_typeBound12170); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_classOrInterfaceType_in_typeBound12194);
                    	    b=classOrInterfaceType();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "classOrInterfaceType", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeBound"


    // $ANTLR start "optionalTypeBound"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3097:1: optionalTypeBound returns [NodeUnion<? extends DeclaredTypeListNode> ret] : ( ( typeBound ) | () );
    public final NodeUnion<? extends DeclaredTypeListNode> optionalTypeBound() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DeclaredTypeListNode> ret = null;

        NodeUnion<? extends DeclaredTypeListNode> typeBound123 = null;



                    ruleStart("optionalTypeBound");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3105:5: ( ( typeBound ) | () )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==IDENTIFIER||LA79_0==128) ) {
                alt79=1;
            }
            else if ( (LA79_0==EOF) ) {
                alt79=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3106:9: ( typeBound )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3106:9: ( typeBound )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3107:13: typeBound
                    {
                    pushFollow(FOLLOW_typeBound_in_optionalTypeBound12341);
                    typeBound123=typeBound();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = typeBound123;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3113:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3113:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3114:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalTypeBound"


    // $ANTLR start "enumDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3121:1: enumDeclaration returns [NodeUnion<? extends EnumDeclarationNode> ret] : ( splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumModifiers 'enum' id= identifier ( 'implements' declaredTypeList )? enumBody );
    public final NodeUnion<? extends EnumDeclarationNode> enumDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice124 = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList125 = null;

        NodeUnion<? extends EnumModifiersNode> enumModifiers126 = null;

        NodeUnion<? extends EnumBodyNode> enumBody127 = null;

        NodeUnion<JavadocNode> javadoc128 = null;



                    ruleStart("enumDeclaration");
                    NodeUnion<? extends DeclaredTypeListNode> declaredTypeListNode = 
                            factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3131:5: ( splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumModifiers 'enum' id= identifier ( 'implements' declaredTypeList )? enumBody )
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3132:9: splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_enumDeclaration12477);
                    splice124=splice(EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice124 != null) // TODO: fix this with error nodes
                                      ret = splice124.castNodeType(factory, EnumDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3138:9: javadoc enumModifiers 'enum' id= identifier ( 'implements' declaredTypeList )? enumBody
                    {
                    pushFollow(FOLLOW_javadoc_in_enumDeclaration12504);
                    javadoc128=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_enumModifiers_in_enumDeclaration12506);
                    enumModifiers126=enumModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,ENUM,FOLLOW_ENUM_in_enumDeclaration12516); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_enumDeclaration12529);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3141:9: ( 'implements' declaredTypeList )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==IMPLEMENTS) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3142:13: 'implements' declaredTypeList
                            {
                            match(input,IMPLEMENTS,FOLLOW_IMPLEMENTS_in_enumDeclaration12553); if (state.failed) return ret;
                            pushFollow(FOLLOW_declaredTypeList_in_enumDeclaration12555);
                            declaredTypeList125=declaredTypeList();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              declaredTypeListNode = declaredTypeList125;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_enumBody_in_enumDeclaration12590);
                    enumBody127=enumBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeEnumDeclarationNodeWithUnions(
                                              enumModifiers126,
                                              declaredTypeListNode,
                                              enumBody127,
                                              (id!=null?id.ret:null),
                                              javadoc128));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumDeclaration"


    // $ANTLR start "enumBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3158:1: enumBody returns [NodeUnion<? extends EnumBodyNode> ret] : ( splice[EnumBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalEnumConstants ( ',' )? ( enumBodyDeclarations )? '}' );
    public final NodeUnion<? extends EnumBodyNode> enumBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumBodyNode> ret = null;

        NodeUnion<? extends Node> splice129 = null;

        NodeUnion<? extends ClassMemberListNode> enumBodyDeclarations130 = null;

        NodeUnion<? extends EnumConstantDeclarationListNode> optionalEnumConstants131 = null;



                    ruleStart("enumBody");
                    NodeUnion<? extends ClassMemberListNode> enumBodyDeclarationsNode = 
                            factory.makeNormalNodeUnion(factory.makeClassMemberListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3168:5: ( splice[EnumBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalEnumConstants ( ',' )? ( enumBodyDeclarations )? '}' )
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt84=1;
            }
            else if ( (LA84_0==LBRACE) ) {
                alt84=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }
            switch (alt84) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3169:9: splice[EnumBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_enumBody12671);
                    splice129=splice(EnumBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice129 != null) // TODO: fix this with error nodes
                                      ret = splice129.castNodeType(factory, EnumBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3175:9: '{' optionalEnumConstants ( ',' )? ( enumBodyDeclarations )? '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_enumBody12698); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalEnumConstants_in_enumBody12708);
                    optionalEnumConstants131=optionalEnumConstants();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3177:9: ( ',' )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==COMMA) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_enumBody12718); if (state.failed) return ret;

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3178:9: ( enumBodyDeclarations )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==SEMI) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3179:13: enumBodyDeclarations
                            {
                            pushFollow(FOLLOW_enumBodyDeclarations_in_enumBody12743);
                            enumBodyDeclarations130=enumBodyDeclarations();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              enumBodyDeclarationsNode = enumBodyDeclarations130;
                                          
                            }

                            }
                            break;

                    }

                    match(input,RBRACE,FOLLOW_RBRACE_in_enumBody12778); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(
                                              factory.makeEnumBodyNodeWithUnions(optionalEnumConstants131, enumBodyDeclarationsNode));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumBody"


    // $ANTLR start "enumConstants"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3191:1: enumConstants returns [NodeUnion<? extends EnumConstantDeclarationListNode> ret] : ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= enumConstant ( ',' b= enumConstant )* ) ) ;
    public final NodeUnion<? extends EnumConstantDeclarationListNode> enumConstants() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumConstantDeclarationListNode> ret = null;

        BsjAntlrParser.enumConstant_return a = null;

        BsjAntlrParser.enumConstant_return b = null;

        NodeUnion<? extends Node> splice132 = null;



                    ruleStart("enumConstants");
                    List<NodeUnion<? extends EnumConstantDeclarationNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3200:5: ( ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= enumConstant ( ',' b= enumConstant )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3201:9: ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= enumConstant ( ',' b= enumConstant )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3201:9: ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= enumConstant ( ',' b= enumConstant )* ) )
            int alt86=2;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3202:13: splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_enumConstants12870);
                    splice132=splice(EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice132 != null) // TODO: fix this with error nodes
                                          ret = splice132.castNodeType(factory, EnumConstantDeclarationListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3208:13: (a= enumConstant ( ',' b= enumConstant )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3208:13: (a= enumConstant ( ',' b= enumConstant )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3209:17: a= enumConstant ( ',' b= enumConstant )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends EnumConstantDeclarationNode>>();
                                      
                    }
                    pushFollow(FOLLOW_enumConstant_in_enumConstants12941);
                    a=enumConstant();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "enumConstant", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3224:11: ( ',' b= enumConstant )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==COMMA) ) {
                            int LA85_1 = input.LA(2);

                            if ( (LA85_1==IDENTIFIER||LA85_1==ABSTRACT||LA85_1==FINAL||LA85_1==NATIVE||(LA85_1>=PRIVATE && LA85_1<=PUBLIC)||(LA85_1>=STATIC && LA85_1<=STRICTFP)||LA85_1==SYNCHRONIZED||LA85_1==TRANSIENT||LA85_1==VOLATILE||LA85_1==MONKEYS_AT||LA85_1==128) ) {
                                alt85=1;
                            }


                        }


                        switch (alt85) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3225:13: ',' b= enumConstant
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_enumConstants12979); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_enumConstant_in_enumConstants13003);
                    	    b=enumConstant();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "enumConstant", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeEnumConstantDeclarationListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumConstants"


    // $ANTLR start "optionalEnumConstants"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3246:1: optionalEnumConstants returns [NodeUnion<? extends EnumConstantDeclarationListNode> ret] : ( ( enumConstants ) | () );
    public final NodeUnion<? extends EnumConstantDeclarationListNode> optionalEnumConstants() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumConstantDeclarationListNode> ret = null;

        NodeUnion<? extends EnumConstantDeclarationListNode> enumConstants133 = null;



                    ruleStart("optionalEnumConstants");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3254:5: ( ( enumConstants ) | () )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==IDENTIFIER||LA87_0==ABSTRACT||LA87_0==FINAL||LA87_0==NATIVE||(LA87_0>=PRIVATE && LA87_0<=PUBLIC)||(LA87_0>=STATIC && LA87_0<=STRICTFP)||LA87_0==SYNCHRONIZED||LA87_0==TRANSIENT||LA87_0==VOLATILE||LA87_0==MONKEYS_AT||LA87_0==128) ) {
                alt87=1;
            }
            else if ( (LA87_0==RBRACE||(LA87_0>=SEMI && LA87_0<=COMMA)) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3255:9: ( enumConstants )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3255:9: ( enumConstants )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3256:13: enumConstants
                    {
                    pushFollow(FOLLOW_enumConstants_in_optionalEnumConstants13150);
                    enumConstants133=enumConstants();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = enumConstants133;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3262:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3262:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3263:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeEnumConstantDeclarationListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalEnumConstants"

    public static class enumConstant_return extends ParserRuleReturnScope {
        public NodeUnion<? extends EnumConstantDeclarationNode> ret;
    };

    // $ANTLR start "enumConstant"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3270:1: enumConstant returns [NodeUnion<? extends EnumConstantDeclarationNode> ret] : ( splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumConstantModifiers id= identifier ( arguments )? ( anonymousClassBody )? );
    public final BsjAntlrParser.enumConstant_return enumConstant() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.enumConstant_return retval = new BsjAntlrParser.enumConstant_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice134 = null;

        NodeUnion<? extends ExpressionListNode> arguments135 = null;

        NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBody136 = null;

        NodeUnion<? extends EnumConstantModifiersNode> enumConstantModifiers137 = null;

        NodeUnion<JavadocNode> javadoc138 = null;



                    ruleStart("enumConstant");
                    NodeUnion<? extends AnnotationListNode> annotationsNode = 
                            factory.makeNormalNodeUnion(factory.makeAnnotationListNode());
                    NodeUnion<? extends MetaAnnotationListNode> metaAnnotationsNode = 
                            factory.makeNormalNodeUnion(factory.makeMetaAnnotationListNode());
                    NodeUnion<? extends ExpressionListNode> argumentsNode = 
                            factory.makeNormalNodeUnion(factory.makeExpressionListNode());
                    NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBodyNode = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3286:5: ( splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumConstantModifiers id= identifier ( arguments )? ( anonymousClassBody )? )
            int alt90=2;
            alt90 = dfa90.predict(input);
            switch (alt90) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3287:9: splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_enumConstant13286);
                    splice134=splice(EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice134 != null) // TODO: fix this with error nodes
                                      retval.ret = splice134.castNodeType(factory, EnumConstantDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3293:9: javadoc enumConstantModifiers id= identifier ( arguments )? ( anonymousClassBody )?
                    {
                    pushFollow(FOLLOW_javadoc_in_enumConstant13313);
                    javadoc138=javadoc();

                    state._fsp--;
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_enumConstantModifiers_in_enumConstant13315);
                    enumConstantModifiers137=enumConstantModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_identifier_in_enumConstant13327);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3295:9: ( arguments )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==LPAREN) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3296:13: arguments
                            {
                            pushFollow(FOLLOW_arguments_in_enumConstant13351);
                            arguments135=arguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              argumentsNode = arguments135;
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3301:9: ( anonymousClassBody )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==128) && ((configuration.getCodeSplicingSupported()))) {
                        alt89=1;
                    }
                    else if ( (LA89_0==LBRACE) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3302:13: anonymousClassBody
                            {
                            pushFollow(FOLLOW_anonymousClassBody_in_enumConstant13400);
                            anonymousClassBody136=anonymousClassBody();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              anonymousClassBodyNode = anonymousClassBody136;
                                          
                            }

                            }
                            break;

                    }

                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeEnumConstantDeclarationNodeWithUnions(
                                      enumConstantModifiers137,
                                      (id!=null?id.ret:null),
                                      argumentsNode,
                                      anonymousClassBodyNode,
                                      javadoc138));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "enumConstant"


    // $ANTLR start "enumBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3317:1: enumBodyDeclarations returns [NodeUnion<? extends ClassMemberListNode> ret] : ';' optionalClassBodyDeclarations ;
    public final NodeUnion<? extends ClassMemberListNode> enumBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberListNode> ret = null;

        NodeUnion<? extends ClassMemberListNode> optionalClassBodyDeclarations139 = null;



                    ruleStart("enumBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3325:5: ( ';' optionalClassBodyDeclarations )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3326:9: ';' optionalClassBodyDeclarations
            {
            match(input,SEMI,FOLLOW_SEMI_in_enumBodyDeclarations13503); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalClassBodyDeclarations_in_enumBodyDeclarations13513);
            optionalClassBodyDeclarations139=optionalClassBodyDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = optionalClassBodyDeclarations139;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enumBodyDeclarations"


    // $ANTLR start "interfaceDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3333:1: interfaceDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( interfaceHeader )=>a= normalInterfaceDeclaration | b= annotationTypeDeclaration );
    public final NodeUnion<? extends TypeDeclarationNode> interfaceDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationNode> ret = null;

        NodeUnion<? extends InterfaceDeclarationNode> a = null;

        NodeUnion<? extends AnnotationDeclarationNode> b = null;



                    ruleStart("interfaceDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3341:5: ( ( interfaceHeader )=>a= normalInterfaceDeclaration | b= annotationTypeDeclaration )
            int alt91=2;
            alt91 = dfa91.predict(input);
            switch (alt91) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3342:9: ( interfaceHeader )=>a= normalInterfaceDeclaration
                    {
                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration13600);
                    a=normalInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = a;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3347:9: b= annotationTypeDeclaration
                    {
                    pushFollow(FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration13628);
                    b=annotationTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = b;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceDeclaration"


    // $ANTLR start "normalInterfaceDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3353:1: normalInterfaceDeclaration returns [NodeUnion<? extends InterfaceDeclarationNode> ret] : ( splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc interfaceModifiers 'interface' id= identifier optionalTypeParameters ( 'extends' declaredTypeList )? interfaceBody );
    public final NodeUnion<? extends InterfaceDeclarationNode> normalInterfaceDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice140 = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList141 = null;

        NodeUnion<? extends InterfaceModifiersNode> interfaceModifiers142 = null;

        NodeUnion<? extends InterfaceBodyNode> interfaceBody143 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters144 = null;

        NodeUnion<JavadocNode> javadoc145 = null;



                    ruleStart("normalInterfaceDeclaration");
                    NodeUnion<? extends DeclaredTypeListNode> declaredTypeListNode = 
                            factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3363:5: ( splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc interfaceModifiers 'interface' id= identifier optionalTypeParameters ( 'extends' declaredTypeList )? interfaceBody )
            int alt93=2;
            alt93 = dfa93.predict(input);
            switch (alt93) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3364:9: splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_normalInterfaceDeclaration13713);
                    splice140=splice(InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice140 != null) // TODO: fix this with error nodes
                                      ret = splice140.castNodeType(factory, InterfaceDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3370:9: javadoc interfaceModifiers 'interface' id= identifier optionalTypeParameters ( 'extends' declaredTypeList )? interfaceBody
                    {
                    pushFollow(FOLLOW_javadoc_in_normalInterfaceDeclaration13740);
                    javadoc145=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_interfaceModifiers_in_normalInterfaceDeclaration13742);
                    interfaceModifiers142=interfaceModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,INTERFACE,FOLLOW_INTERFACE_in_normalInterfaceDeclaration13752); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_normalInterfaceDeclaration13756);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_normalInterfaceDeclaration13766);
                    optionalTypeParameters144=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3373:9: ( 'extends' declaredTypeList )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==EXTENDS) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3374:13: 'extends' declaredTypeList
                            {
                            match(input,EXTENDS,FOLLOW_EXTENDS_in_normalInterfaceDeclaration13790); if (state.failed) return ret;
                            pushFollow(FOLLOW_declaredTypeList_in_normalInterfaceDeclaration13792);
                            declaredTypeList141=declaredTypeList();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              declaredTypeListNode = declaredTypeList141;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_interfaceBody_in_normalInterfaceDeclaration13835);
                    interfaceBody143=interfaceBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeInterfaceDeclarationNodeWithUnions(
                                          interfaceModifiers142,
                                          declaredTypeListNode,
                                          interfaceBody143,
                                          optionalTypeParameters144,
                                          (id!=null?id.ret:null),
                                          javadoc145));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "normalInterfaceDeclaration"


    // $ANTLR start "declaredTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3391:1: declaredTypeList returns [NodeUnion<? extends DeclaredTypeListNode> ret] : ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* ) ) ;
    public final NodeUnion<? extends DeclaredTypeListNode> declaredTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DeclaredTypeListNode> ret = null;

        BsjAntlrParser.classOrInterfaceType_return a = null;

        BsjAntlrParser.classOrInterfaceType_return b = null;

        NodeUnion<? extends Node> splice146 = null;



                    ruleStart("declaredTypeList");
                    List<NodeUnion<? extends DeclaredTypeNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3400:5: ( ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3401:9: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3401:9: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* ) )
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==128) ) {
                int LA95_1 = input.LA(2);

                if ( ((synpred115_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt95=1;
                }
                else if ( (true) ) {
                    alt95=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 95, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA95_0==IDENTIFIER) ) {
                alt95=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 95, 0, input);

                throw nvae;
            }
            switch (alt95) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3402:13: splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_declaredTypeList13927);
                    splice146=splice(DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice146 != null) // TODO: fix this with error nodes
                                          ret = splice146.castNodeType(factory, DeclaredTypeListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3408:13: (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3408:13: (a= classOrInterfaceType ( ',' b= classOrInterfaceType )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3409:17: a= classOrInterfaceType ( ',' b= classOrInterfaceType )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends DeclaredTypeNode>>();
                                      
                    }
                    pushFollow(FOLLOW_classOrInterfaceType_in_declaredTypeList13998);
                    a=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "classOrInterfaceType", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3424:11: ( ',' b= classOrInterfaceType )*
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==COMMA) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3425:13: ',' b= classOrInterfaceType
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_declaredTypeList14036); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_classOrInterfaceType_in_declaredTypeList14060);
                    	    b=classOrInterfaceType();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "classOrInterfaceType", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "declaredTypeList"


    // $ANTLR start "optionalDeclaredTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3446:1: optionalDeclaredTypeList returns [NodeUnion<? extends DeclaredTypeListNode> ret] : ( ( declaredTypeList ) | () );
    public final NodeUnion<? extends DeclaredTypeListNode> optionalDeclaredTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DeclaredTypeListNode> ret = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList147 = null;



                    ruleStart("optionalDeclaredTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3454:5: ( ( declaredTypeList ) | () )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==IDENTIFIER||LA96_0==128) ) {
                alt96=1;
            }
            else if ( (LA96_0==EOF) ) {
                alt96=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3455:9: ( declaredTypeList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3455:9: ( declaredTypeList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3456:13: declaredTypeList
                    {
                    pushFollow(FOLLOW_declaredTypeList_in_optionalDeclaredTypeList14207);
                    declaredTypeList147=declaredTypeList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = declaredTypeList147;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3462:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3462:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3463:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeDeclaredTypeListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalDeclaredTypeList"


    // $ANTLR start "referenceTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3470:1: referenceTypeList returns [NodeUnion<? extends ReferenceTypeListNode> ret] : ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= referenceType ( ',' b= referenceType )* ) ) ;
    public final NodeUnion<? extends ReferenceTypeListNode> referenceTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReferenceTypeListNode> ret = null;

        BsjAntlrParser.referenceType_return a = null;

        BsjAntlrParser.referenceType_return b = null;

        NodeUnion<? extends Node> splice148 = null;



                    ruleStart("referenceTypeList");
                    List<NodeUnion<? extends ReferenceTypeNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3479:5: ( ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= referenceType ( ',' b= referenceType )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3480:9: ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= referenceType ( ',' b= referenceType )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3480:9: ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= referenceType ( ',' b= referenceType )* ) )
            int alt98=2;
            alt98 = dfa98.predict(input);
            switch (alt98) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3481:13: splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_referenceTypeList14354);
                    splice148=splice(ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice148 != null) // TODO: fix this with error nodes
                                          ret = splice148.castNodeType(factory, ReferenceTypeListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3487:13: (a= referenceType ( ',' b= referenceType )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3487:13: (a= referenceType ( ',' b= referenceType )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3488:17: a= referenceType ( ',' b= referenceType )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends ReferenceTypeNode>>();
                                      
                    }
                    pushFollow(FOLLOW_referenceType_in_referenceTypeList14425);
                    a=referenceType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "referenceType", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3503:11: ( ',' b= referenceType )*
                    loop97:
                    do {
                        int alt97=2;
                        int LA97_0 = input.LA(1);

                        if ( (LA97_0==COMMA) ) {
                            alt97=1;
                        }


                        switch (alt97) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3504:13: ',' b= referenceType
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_referenceTypeList14463); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_referenceType_in_referenceTypeList14487);
                    	    b=referenceType();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "referenceType", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop97;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeReferenceTypeListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "referenceTypeList"


    // $ANTLR start "optionalReferenceTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3525:1: optionalReferenceTypeList returns [NodeUnion<? extends ReferenceTypeListNode> ret] : ( ( referenceTypeList ) | () );
    public final NodeUnion<? extends ReferenceTypeListNode> optionalReferenceTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReferenceTypeListNode> ret = null;

        NodeUnion<? extends ReferenceTypeListNode> referenceTypeList149 = null;



                    ruleStart("optionalReferenceTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3533:5: ( ( referenceTypeList ) | () )
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==IDENTIFIER||LA99_0==BOOLEAN||LA99_0==BYTE||LA99_0==CHAR||LA99_0==DOUBLE||LA99_0==FLOAT||LA99_0==INT||LA99_0==LONG||LA99_0==SHORT||LA99_0==128) ) {
                alt99=1;
            }
            else if ( (LA99_0==EOF) ) {
                alt99=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }
            switch (alt99) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3534:9: ( referenceTypeList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3534:9: ( referenceTypeList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3535:13: referenceTypeList
                    {
                    pushFollow(FOLLOW_referenceTypeList_in_optionalReferenceTypeList14634);
                    referenceTypeList149=referenceTypeList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = referenceTypeList149;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3541:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3541:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3542:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeReferenceTypeListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalReferenceTypeList"


    // $ANTLR start "classBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3549:1: classBody returns [NodeUnion<? extends ClassBodyNode> ret] : ( splice[ClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalClassBodyDeclarations '}' );
    public final NodeUnion<? extends ClassBodyNode> classBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassBodyNode> ret = null;

        NodeUnion<? extends Node> splice150 = null;

        NodeUnion<? extends ClassMemberListNode> optionalClassBodyDeclarations151 = null;



                    ruleStart("classBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3557:5: ( splice[ClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalClassBodyDeclarations '}' )
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt100=1;
            }
            else if ( (LA100_0==LBRACE) ) {
                alt100=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }
            switch (alt100) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3558:9: splice[ClassBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_classBody14767);
                    splice150=splice(ClassBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice150 != null) // TODO: fix this with error nodes
                                      ret = splice150.castNodeType(factory, ClassBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3564:9: '{' optionalClassBodyDeclarations '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_classBody14794); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalClassBodyDeclarations_in_classBody14804);
                    optionalClassBodyDeclarations151=optionalClassBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_classBody14814); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeClassBodyNodeWithUnions(optionalClassBodyDeclarations151));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classBody"


    // $ANTLR start "anonymousClassBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3572:1: anonymousClassBody returns [NodeUnion<? extends AnonymousClassBodyNode> ret] : ( splice[AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalAnonymousClassBodyDeclarations '}' );
    public final NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassBodyNode> ret = null;

        NodeUnion<? extends Node> splice152 = null;

        NodeUnion<? extends AnonymousClassMemberListNode> optionalAnonymousClassBodyDeclarations153 = null;



                    ruleStart("anonymousClassBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3580:5: ( splice[AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalAnonymousClassBodyDeclarations '}' )
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt101=1;
            }
            else if ( (LA101_0==LBRACE) ) {
                alt101=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }
            switch (alt101) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3581:9: splice[AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_anonymousClassBody14895);
                    splice152=splice(AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice152 != null) // TODO: fix this with error nodes
                                      ret = splice152.castNodeType(factory, AnonymousClassBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3587:9: '{' optionalAnonymousClassBodyDeclarations '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_anonymousClassBody14922); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalAnonymousClassBodyDeclarations_in_anonymousClassBody14933);
                    optionalAnonymousClassBodyDeclarations153=optionalAnonymousClassBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_anonymousClassBody14943); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeAnonymousClassBodyNodeWithUnions(optionalAnonymousClassBodyDeclarations153));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "anonymousClassBody"


    // $ANTLR start "interfaceBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3595:1: interfaceBody returns [NodeUnion<? extends InterfaceBodyNode> ret] : ( splice[InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalInterfaceBodyDeclarations '}' );
    public final NodeUnion<? extends InterfaceBodyNode> interfaceBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceBodyNode> ret = null;

        NodeUnion<? extends Node> splice154 = null;

        NodeUnion<? extends InterfaceMemberListNode> optionalInterfaceBodyDeclarations155 = null;



                    ruleStart("interfaceBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3603:5: ( splice[InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalInterfaceBodyDeclarations '}' )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt102=1;
            }
            else if ( (LA102_0==LBRACE) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3604:9: splice[InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_interfaceBody15021);
                    splice154=splice(InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice154 != null) // TODO: fix this with error nodes
                                      ret = splice154.castNodeType(factory, InterfaceBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3610:9: '{' optionalInterfaceBodyDeclarations '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_interfaceBody15051); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalInterfaceBodyDeclarations_in_interfaceBody15061);
                    optionalInterfaceBodyDeclarations155=optionalInterfaceBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_interfaceBody15072); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeInterfaceBodyNodeWithUnions(optionalInterfaceBodyDeclarations155));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceBody"


    // $ANTLR start "initializerBlock"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3618:1: initializerBlock returns [NodeUnion<? extends InitializerDeclarationNode> ret] : ( splice[InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaAnnotationList (staticText= 'static' )? block );
    public final NodeUnion<? extends InitializerDeclarationNode> initializerBlock() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InitializerDeclarationNode> ret = null;

        Token staticText=null;
        NodeUnion<? extends Node> splice156 = null;

        NodeUnion<? extends BlockStatementListNode> block157 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList158 = null;



                    ruleStart("initializerBlock");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3626:5: ( splice[InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaAnnotationList (staticText= 'static' )? block )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==128) ) {
                int LA104_1 = input.LA(2);

                if ( ((synpred124_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt104=1;
                }
                else if ( (true) ) {
                    alt104=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 104, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA104_0==STATIC||LA104_0==LBRACE||LA104_0==MONKEYS_AT) ) {
                alt104=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3627:9: splice[InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_initializerBlock15150);
                    splice156=splice(InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice156 != null) // TODO: fix this with error nodes
                                      ret = splice156.castNodeType(factory, InitializerDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3633:9: optionalMetaAnnotationList (staticText= 'static' )? block
                    {
                    pushFollow(FOLLOW_optionalMetaAnnotationList_in_initializerBlock15177);
                    optionalMetaAnnotationList158=optionalMetaAnnotationList();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3634:19: (staticText= 'static' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==STATIC) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: staticText= 'static'
                            {
                            staticText=(Token)match(input,STATIC,FOLLOW_STATIC_in_initializerBlock15189); if (state.failed) return ret;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_block_in_initializerBlock15200);
                    block157=block();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeInitializerDeclarationNodeWithUnions(
                                          staticText!=null,
                                          block157,
                                          optionalMetaAnnotationList158));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "initializerBlock"


    // $ANTLR start "classBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3644:1: classBodyDeclarations returns [NodeUnion<? extends ClassMemberListNode> ret] : ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classBodyDeclaration (b= classBodyDeclaration )* ) ) ;
    public final NodeUnion<? extends ClassMemberListNode> classBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberListNode> ret = null;

        BsjAntlrParser.classBodyDeclaration_return a = null;

        BsjAntlrParser.classBodyDeclaration_return b = null;

        NodeUnion<? extends Node> splice159 = null;



                    ruleStart("classBodyDeclarations");
                    List<NodeUnion<? extends ClassMemberNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3653:5: ( ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classBodyDeclaration (b= classBodyDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3654:9: ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classBodyDeclaration (b= classBodyDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3654:9: ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classBodyDeclaration (b= classBodyDeclaration )* ) )
            int alt106=2;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3655:13: splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_classBodyDeclarations15292);
                    splice159=splice(ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice159 != null) // TODO: fix this with error nodes
                                          ret = splice159.castNodeType(factory, ClassMemberListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3661:13: (a= classBodyDeclaration (b= classBodyDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3661:13: (a= classBodyDeclaration (b= classBodyDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3662:17: a= classBodyDeclaration (b= classBodyDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends ClassMemberNode>>();
                                      
                    }
                    pushFollow(FOLLOW_classBodyDeclaration_in_classBodyDeclarations15363);
                    a=classBodyDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "classBodyDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3677:11: (b= classBodyDeclaration )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==IDENTIFIER||LA105_0==METAPROGRAM_START||LA105_0==ABSTRACT||LA105_0==BOOLEAN||LA105_0==BYTE||(LA105_0>=CHAR && LA105_0<=CLASS)||LA105_0==DOUBLE||(LA105_0>=ENUM && LA105_0<=FINAL)||LA105_0==FLOAT||(LA105_0>=INT && LA105_0<=NATIVE)||(LA105_0>=PRIVATE && LA105_0<=PUBLIC)||(LA105_0>=SHORT && LA105_0<=STRICTFP)||LA105_0==SYNCHRONIZED||LA105_0==TRANSIENT||(LA105_0>=VOID && LA105_0<=VOLATILE)||LA105_0==LBRACE||LA105_0==SEMI||LA105_0==MONKEYS_AT||LA105_0==LT||LA105_0==128) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3678:21: b= classBodyDeclaration
                    	    {
                    	    pushFollow(FOLLOW_classBodyDeclaration_in_classBodyDeclarations15411);
                    	    b=classBodyDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "classBodyDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeClassMemberListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "classBodyDeclarations"


    // $ANTLR start "optionalClassBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3698:1: optionalClassBodyDeclarations returns [NodeUnion<? extends ClassMemberListNode> ret] : ( ( classBodyDeclarations ) | () );
    public final NodeUnion<? extends ClassMemberListNode> optionalClassBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberListNode> ret = null;

        NodeUnion<? extends ClassMemberListNode> classBodyDeclarations160 = null;



                    ruleStart("optionalClassBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3706:5: ( ( classBodyDeclarations ) | () )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==IDENTIFIER||LA107_0==METAPROGRAM_START||LA107_0==ABSTRACT||LA107_0==BOOLEAN||LA107_0==BYTE||(LA107_0>=CHAR && LA107_0<=CLASS)||LA107_0==DOUBLE||(LA107_0>=ENUM && LA107_0<=FINAL)||LA107_0==FLOAT||(LA107_0>=INT && LA107_0<=NATIVE)||(LA107_0>=PRIVATE && LA107_0<=PUBLIC)||(LA107_0>=SHORT && LA107_0<=STRICTFP)||LA107_0==SYNCHRONIZED||LA107_0==TRANSIENT||(LA107_0>=VOID && LA107_0<=VOLATILE)||LA107_0==LBRACE||LA107_0==SEMI||LA107_0==MONKEYS_AT||LA107_0==LT||LA107_0==128) ) {
                alt107=1;
            }
            else if ( (LA107_0==EOF||LA107_0==RBRACE) ) {
                alt107=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3707:9: ( classBodyDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3707:9: ( classBodyDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3708:13: classBodyDeclarations
                    {
                    pushFollow(FOLLOW_classBodyDeclarations_in_optionalClassBodyDeclarations15558);
                    classBodyDeclarations160=classBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = classBodyDeclarations160;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3714:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3714:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3715:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeClassMemberListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalClassBodyDeclarations"

    public static class classBodyDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends ClassMemberNode> ret;
    };

    // $ANTLR start "classBodyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3722:1: classBodyDeclaration returns [NodeUnion<? extends ClassMemberNode> ret] : ( splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | {...}? => classMemberBsjMetaprogramAnchor | noOp | initializerBlock | constructorDeclaration | memberDecl );
    public final BsjAntlrParser.classBodyDeclaration_return classBodyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.classBodyDeclaration_return retval = new BsjAntlrParser.classBodyDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice161 = null;

        NodeUnion<? extends ClassMemberMetaprogramAnchorNode> classMemberBsjMetaprogramAnchor162 = null;

        NodeUnion<? extends NoOperationNode> noOp163 = null;

        NodeUnion<? extends InitializerDeclarationNode> initializerBlock164 = null;

        NodeUnion<? extends ConstructorDeclarationNode> constructorDeclaration165 = null;

        NodeUnion<? extends AnonymousClassMemberNode> memberDecl166 = null;



                    ruleStart("classBodyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3730:5: ( splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | {...}? => classMemberBsjMetaprogramAnchor | noOp | initializerBlock | constructorDeclaration | memberDecl )
            int alt108=6;
            alt108 = dfa108.predict(input);
            switch (alt108) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3731:9: splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_classBodyDeclaration15695);
                    splice161=splice(ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice161 != null) // TODO: fix this with error nodes
                                      retval.ret = splice161.castNodeType(factory, ClassMemberNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3740:9: {...}? => classMemberBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "classBodyDeclaration", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_classMemberBsjMetaprogramAnchor_in_classBodyDeclaration15735);
                    classMemberBsjMetaprogramAnchor162=classMemberBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = classMemberBsjMetaprogramAnchor162;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3745:9: noOp
                    {
                    pushFollow(FOLLOW_noOp_in_classBodyDeclaration15761);
                    noOp163=noOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = noOp163;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3750:9: initializerBlock
                    {
                    pushFollow(FOLLOW_initializerBlock_in_classBodyDeclaration15787);
                    initializerBlock164=initializerBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = initializerBlock164;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3755:9: constructorDeclaration
                    {
                    pushFollow(FOLLOW_constructorDeclaration_in_classBodyDeclaration15813);
                    constructorDeclaration165=constructorDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = constructorDeclaration165;
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3760:9: memberDecl
                    {
                    pushFollow(FOLLOW_memberDecl_in_classBodyDeclaration15839);
                    memberDecl166=memberDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = memberDecl166;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "classBodyDeclaration"


    // $ANTLR start "anonymousClassBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3766:1: anonymousClassBodyDeclarations returns [NodeUnion<? extends AnonymousClassMemberListNode> ret] : ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* ) ) ;
    public final NodeUnion<? extends AnonymousClassMemberListNode> anonymousClassBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberListNode> ret = null;

        BsjAntlrParser.anonymousClassBodyDeclaration_return a = null;

        BsjAntlrParser.anonymousClassBodyDeclaration_return b = null;

        NodeUnion<? extends Node> splice167 = null;



                    ruleStart("anonymousClassBodyDeclarations");
                    List<NodeUnion<? extends AnonymousClassMemberNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3775:5: ( ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3776:9: ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3776:9: ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* ) )
            int alt110=2;
            alt110 = dfa110.predict(input);
            switch (alt110) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3777:13: splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_anonymousClassBodyDeclarations15931);
                    splice167=splice(AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice167 != null) // TODO: fix this with error nodes
                                          ret = splice167.castNodeType(factory, AnonymousClassMemberListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3783:13: (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3783:13: (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3784:17: a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends AnonymousClassMemberNode>>();
                                      
                    }
                    pushFollow(FOLLOW_anonymousClassBodyDeclaration_in_anonymousClassBodyDeclarations16002);
                    a=anonymousClassBodyDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "anonymousClassBodyDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3799:11: (b= anonymousClassBodyDeclaration )*
                    loop109:
                    do {
                        int alt109=2;
                        int LA109_0 = input.LA(1);

                        if ( (LA109_0==IDENTIFIER||LA109_0==METAPROGRAM_START||LA109_0==ABSTRACT||LA109_0==BOOLEAN||LA109_0==BYTE||(LA109_0>=CHAR && LA109_0<=CLASS)||LA109_0==DOUBLE||(LA109_0>=ENUM && LA109_0<=FINAL)||LA109_0==FLOAT||(LA109_0>=INT && LA109_0<=NATIVE)||(LA109_0>=PRIVATE && LA109_0<=PUBLIC)||(LA109_0>=SHORT && LA109_0<=STRICTFP)||LA109_0==SYNCHRONIZED||LA109_0==TRANSIENT||(LA109_0>=VOID && LA109_0<=VOLATILE)||LA109_0==LBRACE||LA109_0==SEMI||LA109_0==MONKEYS_AT||LA109_0==LT||LA109_0==128) ) {
                            alt109=1;
                        }


                        switch (alt109) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3800:21: b= anonymousClassBodyDeclaration
                    	    {
                    	    pushFollow(FOLLOW_anonymousClassBodyDeclaration_in_anonymousClassBodyDeclarations16050);
                    	    b=anonymousClassBodyDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "anonymousClassBodyDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop109;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeAnonymousClassMemberListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "anonymousClassBodyDeclarations"


    // $ANTLR start "optionalAnonymousClassBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3820:1: optionalAnonymousClassBodyDeclarations returns [NodeUnion<? extends AnonymousClassMemberListNode> ret] : ( ( anonymousClassBodyDeclarations ) | () );
    public final NodeUnion<? extends AnonymousClassMemberListNode> optionalAnonymousClassBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberListNode> ret = null;

        NodeUnion<? extends AnonymousClassMemberListNode> anonymousClassBodyDeclarations168 = null;



                    ruleStart("optionalAnonymousClassBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3828:5: ( ( anonymousClassBodyDeclarations ) | () )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==IDENTIFIER||LA111_0==METAPROGRAM_START||LA111_0==ABSTRACT||LA111_0==BOOLEAN||LA111_0==BYTE||(LA111_0>=CHAR && LA111_0<=CLASS)||LA111_0==DOUBLE||(LA111_0>=ENUM && LA111_0<=FINAL)||LA111_0==FLOAT||(LA111_0>=INT && LA111_0<=NATIVE)||(LA111_0>=PRIVATE && LA111_0<=PUBLIC)||(LA111_0>=SHORT && LA111_0<=STRICTFP)||LA111_0==SYNCHRONIZED||LA111_0==TRANSIENT||(LA111_0>=VOID && LA111_0<=VOLATILE)||LA111_0==LBRACE||LA111_0==SEMI||LA111_0==MONKEYS_AT||LA111_0==LT||LA111_0==128) ) {
                alt111=1;
            }
            else if ( (LA111_0==RBRACE) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3829:9: ( anonymousClassBodyDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3829:9: ( anonymousClassBodyDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3830:13: anonymousClassBodyDeclarations
                    {
                    pushFollow(FOLLOW_anonymousClassBodyDeclarations_in_optionalAnonymousClassBodyDeclarations16197);
                    anonymousClassBodyDeclarations168=anonymousClassBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = anonymousClassBodyDeclarations168;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3836:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3836:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3837:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAnonymousClassMemberListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalAnonymousClassBodyDeclarations"

    public static class anonymousClassBodyDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends AnonymousClassMemberNode> ret;
    };

    // $ANTLR start "anonymousClassBodyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3844:1: anonymousClassBodyDeclaration returns [NodeUnion<? extends AnonymousClassMemberNode> ret] : ( splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | noOp | initializerBlock | memberDecl | {...}? => anonymousClassMemberBsjMetaprogramAnchor );
    public final BsjAntlrParser.anonymousClassBodyDeclaration_return anonymousClassBodyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.anonymousClassBodyDeclaration_return retval = new BsjAntlrParser.anonymousClassBodyDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice169 = null;

        NodeUnion<? extends NoOperationNode> noOp170 = null;

        NodeUnion<? extends InitializerDeclarationNode> initializerBlock171 = null;

        NodeUnion<? extends AnonymousClassMemberNode> memberDecl172 = null;

        NodeUnion<? extends AnonymousClassMemberMetaprogramAnchorNode> anonymousClassMemberBsjMetaprogramAnchor173 = null;



                    ruleStart("anonymousClassBodyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3852:5: ( splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | noOp | initializerBlock | memberDecl | {...}? => anonymousClassMemberBsjMetaprogramAnchor )
            int alt112=5;
            alt112 = dfa112.predict(input);
            switch (alt112) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3853:9: splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_anonymousClassBodyDeclaration16334);
                    splice169=splice(AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice169 != null) // TODO: fix this with error nodes
                                      retval.ret = splice169.castNodeType(factory, AnonymousClassMemberNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3859:9: noOp
                    {
                    pushFollow(FOLLOW_noOp_in_anonymousClassBodyDeclaration16361);
                    noOp170=noOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = noOp170;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3864:9: initializerBlock
                    {
                    pushFollow(FOLLOW_initializerBlock_in_anonymousClassBodyDeclaration16387);
                    initializerBlock171=initializerBlock();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = initializerBlock171;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3869:9: memberDecl
                    {
                    pushFollow(FOLLOW_memberDecl_in_anonymousClassBodyDeclaration16413);
                    memberDecl172=memberDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = memberDecl172;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3874:9: {...}? => anonymousClassMemberBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "anonymousClassBodyDeclaration", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_anonymousClassMemberBsjMetaprogramAnchor_in_anonymousClassBodyDeclaration16442);
                    anonymousClassMemberBsjMetaprogramAnchor173=anonymousClassMemberBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = anonymousClassMemberBsjMetaprogramAnchor173;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "anonymousClassBodyDeclaration"


    // $ANTLR start "memberDecl"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3880:1: memberDecl returns [NodeUnion<? extends AnonymousClassMemberNode> ret] : ( ( fieldHeader )=> fieldDeclaration | ( methodHeader )=> methodDeclaration | ( classHeader | enumHeader )=> classDeclaration | ( interfaceHeader | annotationHeader )=> interfaceDeclaration );
    public final NodeUnion<? extends AnonymousClassMemberNode> memberDecl() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberNode> ret = null;

        NodeUnion<? extends FieldDeclarationNode> fieldDeclaration174 = null;

        NodeUnion<? extends MethodDeclarationNode> methodDeclaration175 = null;

        NodeUnion<? extends TypeDeclarationNode> classDeclaration176 = null;

        NodeUnion<? extends TypeDeclarationNode> interfaceDeclaration177 = null;



                    ruleStart("memberDecl");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3888:5: ( ( fieldHeader )=> fieldDeclaration | ( methodHeader )=> methodDeclaration | ( classHeader | enumHeader )=> classDeclaration | ( interfaceHeader | annotationHeader )=> interfaceDeclaration )
            int alt113=4;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3889:9: ( fieldHeader )=> fieldDeclaration
                    {
                    pushFollow(FOLLOW_fieldDeclaration_in_memberDecl16528);
                    fieldDeclaration174=fieldDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = fieldDeclaration174;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3894:9: ( methodHeader )=> methodDeclaration
                    {
                    pushFollow(FOLLOW_methodDeclaration_in_memberDecl16561);
                    methodDeclaration175=methodDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = methodDeclaration175;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:9: ( classHeader | enumHeader )=> classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_memberDecl16596);
                    classDeclaration176=classDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = classDeclaration176;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:9: ( interfaceHeader | annotationHeader )=> interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_memberDecl16631);
                    interfaceDeclaration177=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = interfaceDeclaration177;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "memberDecl"


    // $ANTLR start "methodReturnType"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3910:1: methodReturnType returns [NodeUnion<? extends TypeNode> ret] : ( splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()] | type | 'void' );
    public final NodeUnion<? extends TypeNode> methodReturnType() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeNode> ret = null;

        NodeUnion<? extends Node> splice178 = null;

        NodeUnion<? extends TypeNode> type179 = null;



                    ruleStart("methodReturnType");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3918:5: ( splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()] | type | 'void' )
            int alt114=3;
            alt114 = dfa114.predict(input);
            switch (alt114) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3919:9: splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_methodReturnType16709);
                    splice178=splice(VoidTypeNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice178 != null) // TODO: fix this with error nodes
                                      ret = splice178.castNodeType(factory, VoidTypeNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3925:9: type
                    {
                    pushFollow(FOLLOW_type_in_methodReturnType16736);
                    type179=type();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = type179;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3930:9: 'void'
                    {
                    match(input,VOID,FOLLOW_VOID_in_methodReturnType16762); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeVoidTypeNode());
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "methodReturnType"


    // $ANTLR start "constructorDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3936:1: constructorDeclaration returns [NodeUnion<? extends ConstructorDeclarationNode> ret] : ( splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constructorModifiers optionalTypeParameters identifier formalParameters ( throwsClause )? constructorBody );
    public final NodeUnion<? extends ConstructorDeclarationNode> constructorDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorDeclarationNode> ret = null;

        NodeUnion<? extends Node> splice180 = null;

        NodeUnion<? extends UnparameterizedTypeListNode> throwsClause181 = null;

        BsjAntlrParser.identifier_return identifier182 = null;

        NodeUnion<? extends ConstructorBodyNode> constructorBody183 = null;

        NodeUnion<? extends ConstructorModifiersNode> constructorModifiers184 = null;

        BsjAntlrParser.formalParameters_return formalParameters185 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters186 = null;

        NodeUnion<JavadocNode> javadoc187 = null;



                    ruleStart("constructorDeclaration");
                    NodeUnion<? extends UnparameterizedTypeListNode> throwsNode = 
                            factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3946:5: ( splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constructorModifiers optionalTypeParameters identifier formalParameters ( throwsClause )? constructorBody )
            int alt116=2;
            alt116 = dfa116.predict(input);
            switch (alt116) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3947:9: splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_constructorDeclaration16840);
                    splice180=splice(ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice180 != null) // TODO: fix this with error nodes
                                      ret = splice180.castNodeType(factory, ConstructorDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3953:9: javadoc constructorModifiers optionalTypeParameters identifier formalParameters ( throwsClause )? constructorBody
                    {
                    pushFollow(FOLLOW_javadoc_in_constructorDeclaration16867);
                    javadoc187=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_constructorModifiers_in_constructorDeclaration16869);
                    constructorModifiers184=constructorModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_constructorDeclaration16879);
                    optionalTypeParameters186=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_constructorDeclaration16889);
                    identifier182=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_formalParameters_in_constructorDeclaration16899);
                    formalParameters185=formalParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3957:9: ( throwsClause )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==THROWS) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3958:13: throwsClause
                            {
                            pushFollow(FOLLOW_throwsClause_in_constructorDeclaration16923);
                            throwsClause181=throwsClause();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              throwsNode = throwsClause181;
                                          
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_constructorBody_in_constructorDeclaration16958);
                    constructorBody183=constructorBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeConstructorDeclarationNodeWithUnions(
                                      (identifier182!=null?identifier182.ret:null),
                                      constructorBody183,
                                      constructorModifiers184,
                                      (formalParameters185!=null?formalParameters185.parameters:null),
                                      (formalParameters185!=null?formalParameters185.varargParameter:null),
                                      throwsNode,
                                      optionalTypeParameters186,
                                      javadoc187));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "constructorDeclaration"


    // $ANTLR start "constructorBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3977:1: constructorBody returns [NodeUnion<? extends ConstructorBodyNode> ret] : ( splice[ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' ( explicitConstructorInvocation )? optionalBlockStatementList '}' );
    public final NodeUnion<? extends ConstructorBodyNode> constructorBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorBodyNode> ret = null;

        NodeUnion<? extends Node> splice188 = null;

        NodeUnion<? extends ConstructorInvocationNode> explicitConstructorInvocation189 = null;

        NodeUnion<? extends BlockStatementListNode> optionalBlockStatementList190 = null;



                    ruleStart("constructorBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3985:5: ( splice[ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' ( explicitConstructorInvocation )? optionalBlockStatementList '}' )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt118=1;
            }
            else if ( (LA118_0==LBRACE) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3986:9: splice[ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_constructorBody17036);
                    splice188=splice(ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice188 != null) // TODO: fix this with error nodes
                                      ret = splice188.castNodeType(factory, ConstructorBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3992:9: '{' ( explicitConstructorInvocation )? optionalBlockStatementList '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_constructorBody17063); if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3993:9: ( explicitConstructorInvocation )?
                    int alt117=2;
                    alt117 = dfa117.predict(input);
                    switch (alt117) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: explicitConstructorInvocation
                            {
                            pushFollow(FOLLOW_explicitConstructorInvocation_in_constructorBody17074);
                            explicitConstructorInvocation189=explicitConstructorInvocation();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_optionalBlockStatementList_in_constructorBody17085);
                    optionalBlockStatementList190=optionalBlockStatementList();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_constructorBody17095); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(
                                              factory.makeConstructorBodyNodeWithUnions(
                                                      explicitConstructorInvocation189,
                                                      optionalBlockStatementList190));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "constructorBody"


    // $ANTLR start "methodDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4004:1: methodDeclaration returns [NodeUnion<? extends MethodDeclarationNode> ret] : ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ( block | ';' ) );
    public final NodeUnion<? extends MethodDeclarationNode> methodDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice191 = null;

        NodeUnion<? extends TypeNode> methodReturnType192 = null;

        int arrayTypeCounter193 = 0;

        NodeUnion<? extends UnparameterizedTypeListNode> throwsClause194 = null;

        NodeUnion<? extends BlockStatementListNode> block195 = null;

        NodeUnion<? extends MethodModifiersNode> methodModifiers196 = null;

        BsjAntlrParser.formalParameters_return formalParameters197 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters198 = null;

        NodeUnion<JavadocNode> javadoc199 = null;



                    ruleStart("methodDeclaration");
                    NodeUnion<? extends BlockStatementListNode> body = 
                            factory.makeNormalNodeUnion(factory.makeBlockStatementListNode());
                    NodeUnion<? extends UnparameterizedTypeListNode> throwsNode = 
                            factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeListNode());
                    NodeUnion<? extends TypeNode> returnTypeNode = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4018:5: ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ( block | ';' ) )
            int alt122=2;
            alt122 = dfa122.predict(input);
            switch (alt122) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4019:9: splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_methodDeclaration17173);
                    splice191=splice(MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice191 != null) // TODO: fix this with error nodes
                                      ret = splice191.castNodeType(factory, MethodDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4025:9: javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ( block | ';' )
                    {
                    pushFollow(FOLLOW_javadoc_in_methodDeclaration17200);
                    javadoc199=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_methodModifiers_in_methodDeclaration17202);
                    methodModifiers196=methodModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_methodDeclaration17212);
                    optionalTypeParameters198=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_methodReturnType_in_methodDeclaration17222);
                    methodReturnType192=methodReturnType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  returnTypeNode = methodReturnType192;
                              
                    }
                    pushFollow(FOLLOW_identifier_in_methodDeclaration17244);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_formalParameters_in_methodDeclaration17254);
                    formalParameters197=formalParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4033:9: ( arrayTypeCounter )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==LBRACKET) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4034:13: arrayTypeCounter
                            {
                            pushFollow(FOLLOW_arrayTypeCounter_in_methodDeclaration17278);
                            arrayTypeCounter193=arrayTypeCounter();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              returnTypeNode = wrapArrayLevels(returnTypeNode, arrayTypeCounter193);
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4039:9: ( throwsClause )?
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==THROWS) ) {
                        alt120=1;
                    }
                    switch (alt120) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4040:13: throwsClause
                            {
                            pushFollow(FOLLOW_throwsClause_in_methodDeclaration17327);
                            throwsClause194=throwsClause();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              throwsNode = throwsClause194;
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4045:9: ( block | ';' )
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==LBRACE) ) {
                        alt121=1;
                    }
                    else if ( (LA121_0==SEMI) ) {
                        alt121=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 121, 0, input);

                        throw nvae;
                    }
                    switch (alt121) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4046:13: block
                            {
                            pushFollow(FOLLOW_block_in_methodDeclaration17384);
                            block195=block();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              body = block195;
                                          
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4051:13: ';'
                            {
                            match(input,SEMI,FOLLOW_SEMI_in_methodDeclaration17425); if (state.failed) return ret;

                            }
                            break;

                    }

                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeMethodDeclarationNodeWithUnions(
                                          body,
                                          methodModifiers196,
                                          (id!=null?id.ret:null),
                                          (formalParameters197!=null?formalParameters197.parameters:null),
                                          (formalParameters197!=null?formalParameters197.varargParameter:null),
                                          returnTypeNode,
                                          throwsNode,
                                          optionalTypeParameters198,
                                          javadoc199));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "methodDeclaration"


    // $ANTLR start "fieldDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4067:1: fieldDeclaration returns [NodeUnion<? extends FieldDeclarationNode> ret] : ( splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc fieldModifiers type variableDeclarators ';' );
    public final NodeUnion<? extends FieldDeclarationNode> fieldDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends FieldDeclarationNode> ret = null;

        NodeUnion<? extends Node> splice200 = null;

        NodeUnion<? extends FieldModifiersNode> fieldModifiers201 = null;

        NodeUnion<? extends TypeNode> type202 = null;

        NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators203 = null;

        NodeUnion<JavadocNode> javadoc204 = null;



                    ruleStart("fieldDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4075:5: ( splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc fieldModifiers type variableDeclarators ';' )
            int alt123=2;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4076:9: splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_fieldDeclaration17525);
                    splice200=splice(FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice200 != null) // TODO: fix this with error nodes
                                      ret = splice200.castNodeType(factory, FieldDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4082:9: javadoc fieldModifiers type variableDeclarators ';'
                    {
                    pushFollow(FOLLOW_javadoc_in_fieldDeclaration17552);
                    javadoc204=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_fieldModifiers_in_fieldDeclaration17554);
                    fieldModifiers201=fieldModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_type_in_fieldDeclaration17564);
                    type202=type();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_variableDeclarators_in_fieldDeclaration17574);
                    variableDeclarators203=variableDeclarators();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,SEMI,FOLLOW_SEMI_in_fieldDeclaration17584); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeFieldDeclarationNodeWithUnions(
                                          fieldModifiers201,
                                          type202,
                                          variableDeclarators203,
                                          javadoc204));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "fieldDeclaration"


    // $ANTLR start "interfaceBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4095:1: interfaceBodyDeclarations returns [NodeUnion<? extends InterfaceMemberListNode> ret] : ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* ) ) ;
    public final NodeUnion<? extends InterfaceMemberListNode> interfaceBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceMemberListNode> ret = null;

        BsjAntlrParser.interfaceBodyDeclaration_return a = null;

        BsjAntlrParser.interfaceBodyDeclaration_return b = null;

        NodeUnion<? extends Node> splice205 = null;



                    ruleStart("interfaceBodyDeclarations");
                    List<NodeUnion<? extends InterfaceMemberNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4104:5: ( ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4105:9: ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4105:9: ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* ) )
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4106:13: splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_interfaceBodyDeclarations17680);
                    splice205=splice(InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice205 != null) // TODO: fix this with error nodes
                                          ret = splice205.castNodeType(factory, InterfaceMemberListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4112:13: (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4112:13: (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4113:17: a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends InterfaceMemberNode>>();
                                      
                    }
                    pushFollow(FOLLOW_interfaceBodyDeclaration_in_interfaceBodyDeclarations17751);
                    a=interfaceBodyDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "interfaceBodyDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4128:11: (b= interfaceBodyDeclaration )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==IDENTIFIER||LA124_0==METAPROGRAM_START||LA124_0==ABSTRACT||LA124_0==BOOLEAN||LA124_0==BYTE||(LA124_0>=CHAR && LA124_0<=CLASS)||LA124_0==DOUBLE||(LA124_0>=ENUM && LA124_0<=FINAL)||LA124_0==FLOAT||(LA124_0>=INT && LA124_0<=NATIVE)||(LA124_0>=PRIVATE && LA124_0<=PUBLIC)||(LA124_0>=SHORT && LA124_0<=STRICTFP)||LA124_0==SYNCHRONIZED||LA124_0==TRANSIENT||(LA124_0>=VOID && LA124_0<=VOLATILE)||LA124_0==SEMI||LA124_0==MONKEYS_AT||LA124_0==LT||LA124_0==128) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4129:21: b= interfaceBodyDeclaration
                    	    {
                    	    pushFollow(FOLLOW_interfaceBodyDeclaration_in_interfaceBodyDeclarations17799);
                    	    b=interfaceBodyDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "interfaceBodyDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeInterfaceMemberListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceBodyDeclarations"


    // $ANTLR start "optionalInterfaceBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4149:1: optionalInterfaceBodyDeclarations returns [NodeUnion<? extends InterfaceMemberListNode> ret] : ( ( interfaceBodyDeclarations ) | () );
    public final NodeUnion<? extends InterfaceMemberListNode> optionalInterfaceBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceMemberListNode> ret = null;

        NodeUnion<? extends InterfaceMemberListNode> interfaceBodyDeclarations206 = null;



                    ruleStart("optionalInterfaceBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4157:5: ( ( interfaceBodyDeclarations ) | () )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==IDENTIFIER||LA126_0==METAPROGRAM_START||LA126_0==ABSTRACT||LA126_0==BOOLEAN||LA126_0==BYTE||(LA126_0>=CHAR && LA126_0<=CLASS)||LA126_0==DOUBLE||(LA126_0>=ENUM && LA126_0<=FINAL)||LA126_0==FLOAT||(LA126_0>=INT && LA126_0<=NATIVE)||(LA126_0>=PRIVATE && LA126_0<=PUBLIC)||(LA126_0>=SHORT && LA126_0<=STRICTFP)||LA126_0==SYNCHRONIZED||LA126_0==TRANSIENT||(LA126_0>=VOID && LA126_0<=VOLATILE)||LA126_0==SEMI||LA126_0==MONKEYS_AT||LA126_0==LT||LA126_0==128) ) {
                alt126=1;
            }
            else if ( (LA126_0==RBRACE) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4158:9: ( interfaceBodyDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4158:9: ( interfaceBodyDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4159:13: interfaceBodyDeclarations
                    {
                    pushFollow(FOLLOW_interfaceBodyDeclarations_in_optionalInterfaceBodyDeclarations17946);
                    interfaceBodyDeclarations206=interfaceBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = interfaceBodyDeclarations206;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4165:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4165:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4166:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeInterfaceMemberListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalInterfaceBodyDeclarations"

    public static class interfaceBodyDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends InterfaceMemberNode> ret;
    };

    // $ANTLR start "interfaceBodyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4173:1: interfaceBodyDeclaration returns [NodeUnion<? extends InterfaceMemberNode> ret] : ( splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | constantDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | noOp | {...}? => interfaceMemberBsjMetaprogramAnchor );
    public final BsjAntlrParser.interfaceBodyDeclaration_return interfaceBodyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.interfaceBodyDeclaration_return retval = new BsjAntlrParser.interfaceBodyDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice207 = null;

        NodeUnion<? extends ConstantDeclarationNode> constantDeclaration208 = null;

        NodeUnion<? extends MethodDeclarationNode> interfaceMethodDeclaration209 = null;

        NodeUnion<? extends TypeDeclarationNode> interfaceDeclaration210 = null;

        NodeUnion<? extends TypeDeclarationNode> classDeclaration211 = null;

        NodeUnion<? extends NoOperationNode> noOp212 = null;

        NodeUnion<? extends InterfaceMemberMetaprogramAnchorNode> interfaceMemberBsjMetaprogramAnchor213 = null;



                    ruleStart("interfaceBodyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4181:5: ( splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | constantDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | noOp | {...}? => interfaceMemberBsjMetaprogramAnchor )
            int alt127=7;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4182:9: splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_interfaceBodyDeclaration18083);
                    splice207=splice(InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice207 != null) // TODO: fix this with error nodes
                                      retval.ret = splice207.castNodeType(factory, InterfaceMemberNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4188:9: constantDeclaration
                    {
                    pushFollow(FOLLOW_constantDeclaration_in_interfaceBodyDeclaration18110);
                    constantDeclaration208=constantDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = constantDeclaration208;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4193:9: interfaceMethodDeclaration
                    {
                    pushFollow(FOLLOW_interfaceMethodDeclaration_in_interfaceBodyDeclaration18147);
                    interfaceMethodDeclaration209=interfaceMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = interfaceMethodDeclaration209;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4198:9: interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_interfaceBodyDeclaration18176);
                    interfaceDeclaration210=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = interfaceDeclaration210;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4203:9: classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_interfaceBodyDeclaration18205);
                    classDeclaration211=classDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = classDeclaration211;
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4208:9: noOp
                    {
                    pushFollow(FOLLOW_noOp_in_interfaceBodyDeclaration18234);
                    noOp212=noOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = noOp212;
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4213:9: {...}? => interfaceMemberBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "interfaceBodyDeclaration", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_interfaceMemberBsjMetaprogramAnchor_in_interfaceBodyDeclaration18263);
                    interfaceMemberBsjMetaprogramAnchor213=interfaceMemberBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = interfaceMemberBsjMetaprogramAnchor213;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "interfaceBodyDeclaration"


    // $ANTLR start "interfaceMethodDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4219:1: interfaceMethodDeclaration returns [NodeUnion<? extends MethodDeclarationNode> ret] : ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ';' );
    public final NodeUnion<? extends MethodDeclarationNode> interfaceMethodDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice214 = null;

        NodeUnion<? extends TypeNode> methodReturnType215 = null;

        int arrayTypeCounter216 = 0;

        NodeUnion<? extends UnparameterizedTypeListNode> throwsClause217 = null;

        NodeUnion<? extends MethodModifiersNode> methodModifiers218 = null;

        BsjAntlrParser.formalParameters_return formalParameters219 = null;

        NodeUnion<? extends TypeParameterListNode> optionalTypeParameters220 = null;

        NodeUnion<JavadocNode> javadoc221 = null;



                    ruleStart("interfaceMethodDeclaration");
                    NodeUnion<? extends TypeNode> returnTypeNode = 
                            factory.makeNormalNodeUnion(null);
                    NodeUnion<? extends UnparameterizedTypeListNode> throwsNode = 
                            factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeListNode());
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4231:5: ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ';' )
            int alt130=2;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4233:9: splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_interfaceMethodDeclaration18353);
                    splice214=splice(MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice214 != null) // TODO: fix this with error nodes
                                      ret = splice214.castNodeType(factory, MethodDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4239:9: javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ';'
                    {
                    pushFollow(FOLLOW_javadoc_in_interfaceMethodDeclaration18380);
                    javadoc221=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_methodModifiers_in_interfaceMethodDeclaration18382);
                    methodModifiers218=methodModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeParameters_in_interfaceMethodDeclaration18392);
                    optionalTypeParameters220=optionalTypeParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_methodReturnType_in_interfaceMethodDeclaration18402);
                    methodReturnType215=methodReturnType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  returnTypeNode = methodReturnType215;
                              
                    }
                    pushFollow(FOLLOW_identifier_in_interfaceMethodDeclaration18424);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_formalParameters_in_interfaceMethodDeclaration18434);
                    formalParameters219=formalParameters();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4247:9: ( arrayTypeCounter )?
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==LBRACKET) ) {
                        alt128=1;
                    }
                    switch (alt128) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4248:13: arrayTypeCounter
                            {
                            pushFollow(FOLLOW_arrayTypeCounter_in_interfaceMethodDeclaration18458);
                            arrayTypeCounter216=arrayTypeCounter();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              returnTypeNode = wrapArrayLevels(returnTypeNode, arrayTypeCounter216);
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4253:9: ( throwsClause )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==THROWS) ) {
                        alt129=1;
                    }
                    switch (alt129) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4254:13: throwsClause
                            {
                            pushFollow(FOLLOW_throwsClause_in_interfaceMethodDeclaration18507);
                            throwsClause217=throwsClause();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              throwsNode = throwsClause217;
                                          
                            }

                            }
                            break;

                    }

                    match(input,SEMI,FOLLOW_SEMI_in_interfaceMethodDeclaration18542); if (state.failed) return ret;
                    if (  true  ) {

                                  // TODO: this would be cleaner if we actually had a type for interface methods (like the JLS grammar does)
                                  ret = factory.makeNormalNodeUnion(factory.makeMethodDeclarationNodeWithUnions(
                                          null, // No body for interface methods; thus null
                                          methodModifiers218,
                                          (id!=null?id.ret:null),
                                          (formalParameters219!=null?formalParameters219.parameters:null),
                                          (formalParameters219!=null?formalParameters219.varargParameter:null),
                                          returnTypeNode,
                                          throwsNode,
                                          optionalTypeParameters220,
                                          javadoc221));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "interfaceMethodDeclaration"


    // $ANTLR start "constantDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4275:1: constantDeclaration returns [NodeUnion<? extends ConstantDeclarationNode> ret] : ( splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constantModifiers type variableDeclarators ';' );
    public final NodeUnion<? extends ConstantDeclarationNode> constantDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstantDeclarationNode> ret = null;

        NodeUnion<? extends Node> splice222 = null;

        NodeUnion<? extends ConstantModifiersNode> constantModifiers223 = null;

        NodeUnion<? extends TypeNode> type224 = null;

        NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators225 = null;

        NodeUnion<JavadocNode> javadoc226 = null;



                    ruleStart("constantDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4283:5: ( splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constantModifiers type variableDeclarators ';' )
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4284:9: splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_constantDeclaration18632);
                    splice222=splice(ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice222 != null) // TODO: fix this with error nodes
                                      ret = splice222.castNodeType(factory, ConstantDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4290:9: javadoc constantModifiers type variableDeclarators ';'
                    {
                    pushFollow(FOLLOW_javadoc_in_constantDeclaration18659);
                    javadoc226=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_constantModifiers_in_constantDeclaration18661);
                    constantModifiers223=constantModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_type_in_constantDeclaration18671);
                    type224=type();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_variableDeclarators_in_constantDeclaration18681);
                    variableDeclarators225=variableDeclarators();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,SEMI,FOLLOW_SEMI_in_constantDeclaration18691); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeConstantDeclarationNodeWithUnions(
                                          constantModifiers223,
                                          type224,
                                          variableDeclarators225,
                                          javadoc226));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "constantDeclaration"


    // $ANTLR start "variableDeclarators"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4304:1: variableDeclarators returns [NodeUnion<? extends VariableDeclaratorListNode> ret] : ( splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableDeclarator ( ',' b= variableDeclarator )* ) ) ;
    public final NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableDeclaratorListNode> ret = null;

        BsjAntlrParser.variableDeclarator_return a = null;

        BsjAntlrParser.variableDeclarator_return b = null;

        NodeUnion<? extends Node> splice227 = null;



                    ruleStart("variableDeclarators");
                    List<NodeUnion<? extends VariableDeclaratorNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4313:5: ( ( splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableDeclarator ( ',' b= variableDeclarator )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4314:9: ( splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableDeclarator ( ',' b= variableDeclarator )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4314:9: ( splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableDeclarator ( ',' b= variableDeclarator )* ) )
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==128) ) {
                int LA133_1 = input.LA(2);

                if ( ((synpred171_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt133=1;
                }
                else if ( (true) ) {
                    alt133=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 133, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA133_0==IDENTIFIER) ) {
                alt133=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 133, 0, input);

                throw nvae;
            }
            switch (alt133) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4315:13: splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_variableDeclarators18784);
                    splice227=splice(VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice227 != null) // TODO: fix this with error nodes
                                          ret = splice227.castNodeType(factory, VariableDeclaratorListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4321:13: (a= variableDeclarator ( ',' b= variableDeclarator )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4321:13: (a= variableDeclarator ( ',' b= variableDeclarator )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4322:17: a= variableDeclarator ( ',' b= variableDeclarator )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends VariableDeclaratorNode>>();
                                      
                    }
                    pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators18855);
                    a=variableDeclarator();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "variableDeclarator", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4337:11: ( ',' b= variableDeclarator )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==COMMA) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4338:13: ',' b= variableDeclarator
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_variableDeclarators18893); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators18917);
                    	    b=variableDeclarator();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "variableDeclarator", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeVariableDeclaratorListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "variableDeclarators"


    // $ANTLR start "optionalVariableDeclarators"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4359:1: optionalVariableDeclarators returns [NodeUnion<? extends VariableDeclaratorListNode> ret] : ( ( variableDeclarators ) | () );
    public final NodeUnion<? extends VariableDeclaratorListNode> optionalVariableDeclarators() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableDeclaratorListNode> ret = null;

        NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators228 = null;



                    ruleStart("optionalVariableDeclarators");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4367:5: ( ( variableDeclarators ) | () )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==IDENTIFIER||LA134_0==128) ) {
                alt134=1;
            }
            else if ( (LA134_0==EOF) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4368:9: ( variableDeclarators )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4368:9: ( variableDeclarators )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4369:13: variableDeclarators
                    {
                    pushFollow(FOLLOW_variableDeclarators_in_optionalVariableDeclarators19064);
                    variableDeclarators228=variableDeclarators();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = variableDeclarators228;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4375:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4375:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4376:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeVariableDeclaratorListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalVariableDeclarators"

    public static class variableDeclarator_return extends ParserRuleReturnScope {
        public NodeUnion<? extends VariableDeclaratorNode> ret;
    };

    // $ANTLR start "variableDeclarator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4385:1: variableDeclarator returns [NodeUnion<? extends VariableDeclaratorNode> ret] : ( splice[VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier ( arrayTypeCounter )? ( '=' variableInitializer )? );
    public final BsjAntlrParser.variableDeclarator_return variableDeclarator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.variableDeclarator_return retval = new BsjAntlrParser.variableDeclarator_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice229 = null;

        int arrayTypeCounter230 = 0;

        BsjAntlrParser.variableInitializer_return variableInitializer231 = null;



                    ruleStart("variableDeclarator");
                    int arrayLevels = 0;
                    NodeUnion<? extends VariableInitializerNode> initializer = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4396:5: ( splice[VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier ( arrayTypeCounter )? ( '=' variableInitializer )? )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA137_1 = input.LA(2);

                if ( ((synpred174_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt137=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt137=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 137, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA137_0==IDENTIFIER) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4397:9: splice[VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_variableDeclarator19200);
                    splice229=splice(VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice229 != null) // TODO: fix this with error nodes
                                      retval.ret = splice229.castNodeType(factory, VariableDeclaratorNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4403:9: id= identifier ( arrayTypeCounter )? ( '=' variableInitializer )?
                    {
                    pushFollow(FOLLOW_identifier_in_variableDeclarator19229);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4404:9: ( arrayTypeCounter )?
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==LBRACKET) ) {
                        alt135=1;
                    }
                    switch (alt135) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4405:13: arrayTypeCounter
                            {
                            pushFollow(FOLLOW_arrayTypeCounter_in_variableDeclarator19253);
                            arrayTypeCounter230=arrayTypeCounter();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              arrayLevels = arrayTypeCounter230;
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4410:9: ( '=' variableInitializer )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==EQ) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4411:13: '=' variableInitializer
                            {
                            match(input,EQ,FOLLOW_EQ_in_variableDeclarator19302); if (state.failed) return retval;
                            pushFollow(FOLLOW_variableInitializer_in_variableDeclarator19304);
                            variableInitializer231=variableInitializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              initializer = (variableInitializer231!=null?variableInitializer231.ret:null);
                                          
                            }

                            }
                            break;

                    }

                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeVariableDeclaratorNodeWithUnions((id!=null?id.ret:null), arrayLevels, initializer));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "variableDeclarator"

    public static class unparameterizedType_return extends ParserRuleReturnScope {
        public NodeUnion<? extends UnparameterizedTypeNode> ret;
    };

    // $ANTLR start "unparameterizedType"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4421:1: unparameterizedType returns [NodeUnion<? extends UnparameterizedTypeNode> ret] : ( splice[UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] | name );
    public final BsjAntlrParser.unparameterizedType_return unparameterizedType() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.unparameterizedType_return retval = new BsjAntlrParser.unparameterizedType_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice232 = null;

        NodeUnion<? extends NameNode> name233 = null;



                    ruleStart("unparameterizedType");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4429:5: ( splice[UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] | name )
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA138_1 = input.LA(2);

                if ( ((synpred177_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt138=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt138=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 138, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA138_0==IDENTIFIER) ) {
                alt138=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 138, 0, input);

                throw nvae;
            }
            switch (alt138) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4430:9: splice[UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_unparameterizedType19407);
                    splice232=splice(UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice232 != null) // TODO: fix this with error nodes
                                      retval.ret = splice232.castNodeType(factory, UnparameterizedTypeNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4436:9: name
                    {
                    pushFollow(FOLLOW_name_in_unparameterizedType19437);
                    name233=name();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeNodeWithUnions(name233));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "unparameterizedType"


    // $ANTLR start "unparameterizedTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4442:1: unparameterizedTypeList returns [NodeUnion<? extends UnparameterizedTypeListNode> ret] : ( splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= unparameterizedType ( ',' b= unparameterizedType )* ) ) ;
    public final NodeUnion<? extends UnparameterizedTypeListNode> unparameterizedTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends UnparameterizedTypeListNode> ret = null;

        BsjAntlrParser.unparameterizedType_return a = null;

        BsjAntlrParser.unparameterizedType_return b = null;

        NodeUnion<? extends Node> splice234 = null;



                    ruleStart("unparameterizedTypeList");
                    List<NodeUnion<? extends UnparameterizedTypeNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4451:5: ( ( splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= unparameterizedType ( ',' b= unparameterizedType )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4452:9: ( splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= unparameterizedType ( ',' b= unparameterizedType )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4452:9: ( splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= unparameterizedType ( ',' b= unparameterizedType )* ) )
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==128) ) {
                int LA140_1 = input.LA(2);

                if ( ((synpred178_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt140=1;
                }
                else if ( (true) ) {
                    alt140=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 140, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA140_0==IDENTIFIER) ) {
                alt140=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 140, 0, input);

                throw nvae;
            }
            switch (alt140) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4453:13: splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_unparameterizedTypeList19529);
                    splice234=splice(UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice234 != null) // TODO: fix this with error nodes
                                          ret = splice234.castNodeType(factory, UnparameterizedTypeListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4459:13: (a= unparameterizedType ( ',' b= unparameterizedType )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4459:13: (a= unparameterizedType ( ',' b= unparameterizedType )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4460:17: a= unparameterizedType ( ',' b= unparameterizedType )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends UnparameterizedTypeNode>>();
                                      
                    }
                    pushFollow(FOLLOW_unparameterizedType_in_unparameterizedTypeList19600);
                    a=unparameterizedType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "unparameterizedType", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4475:11: ( ',' b= unparameterizedType )*
                    loop139:
                    do {
                        int alt139=2;
                        int LA139_0 = input.LA(1);

                        if ( (LA139_0==COMMA) ) {
                            alt139=1;
                        }


                        switch (alt139) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4476:13: ',' b= unparameterizedType
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unparameterizedTypeList19638); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_unparameterizedType_in_unparameterizedTypeList19662);
                    	    b=unparameterizedType();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "unparameterizedType", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop139;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "unparameterizedTypeList"


    // $ANTLR start "optionalUnparameterizedTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4497:1: optionalUnparameterizedTypeList returns [NodeUnion<? extends UnparameterizedTypeListNode> ret] : ( ( unparameterizedTypeList ) | () );
    public final NodeUnion<? extends UnparameterizedTypeListNode> optionalUnparameterizedTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends UnparameterizedTypeListNode> ret = null;

        NodeUnion<? extends UnparameterizedTypeListNode> unparameterizedTypeList235 = null;



                    ruleStart("optionalUnparameterizedTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4505:5: ( ( unparameterizedTypeList ) | () )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==IDENTIFIER||LA141_0==128) ) {
                alt141=1;
            }
            else if ( (LA141_0==EOF) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4506:9: ( unparameterizedTypeList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4506:9: ( unparameterizedTypeList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4507:13: unparameterizedTypeList
                    {
                    pushFollow(FOLLOW_unparameterizedTypeList_in_optionalUnparameterizedTypeList19809);
                    unparameterizedTypeList235=unparameterizedTypeList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = unparameterizedTypeList235;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4513:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4513:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4514:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeUnparameterizedTypeListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalUnparameterizedTypeList"


    // $ANTLR start "throwsClause"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4521:1: throwsClause returns [NodeUnion<? extends UnparameterizedTypeListNode> ret] : THROWS unparameterizedTypeList ;
    public final NodeUnion<? extends UnparameterizedTypeListNode> throwsClause() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends UnparameterizedTypeListNode> ret = null;

        NodeUnion<? extends UnparameterizedTypeListNode> unparameterizedTypeList236 = null;



                    ruleStart("throwsClause");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4529:5: ( THROWS unparameterizedTypeList )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4530:9: THROWS unparameterizedTypeList
            {
            match(input,THROWS,FOLLOW_THROWS_in_throwsClause19942); if (state.failed) return ret;
            pushFollow(FOLLOW_unparameterizedTypeList_in_throwsClause19952);
            unparameterizedTypeList236=unparameterizedTypeList();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = unparameterizedTypeList236;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "throwsClause"

    public static class referenceType_return extends ParserRuleReturnScope {
        public NodeUnion<? extends ReferenceTypeNode> ret;
    };

    // $ANTLR start "referenceType"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4537:1: referenceType returns [NodeUnion<? extends ReferenceTypeNode> ret] : ( classOrInterfaceType ( arrayTypeCounter )? | primitiveType arrayTypeCounter );
    public final BsjAntlrParser.referenceType_return referenceType() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.referenceType_return retval = new BsjAntlrParser.referenceType_return();
        retval.start = input.LT(1);

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType237 = null;

        int arrayTypeCounter238 = 0;

        int arrayTypeCounter239 = 0;

        NodeUnion<? extends PrimitiveTypeNode> primitiveType240 = null;



                    ruleStart("referenceType");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4545:5: ( classOrInterfaceType ( arrayTypeCounter )? | primitiveType arrayTypeCounter )
            int alt143=2;
            alt143 = dfa143.predict(input);
            switch (alt143) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4546:9: classOrInterfaceType ( arrayTypeCounter )?
                    {
                    pushFollow(FOLLOW_classOrInterfaceType_in_referenceType20030);
                    classOrInterfaceType237=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = (classOrInterfaceType237!=null?classOrInterfaceType237.ret:null);
                              
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4550:9: ( arrayTypeCounter )?
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==LBRACKET) ) {
                        alt142=1;
                    }
                    switch (alt142) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4551:13: arrayTypeCounter
                            {
                            pushFollow(FOLLOW_arrayTypeCounter_in_referenceType20064);
                            arrayTypeCounter238=arrayTypeCounter();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              retval.ret = wrapArrayLevels(retval.ret, arrayTypeCounter238);
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4557:9: primitiveType arrayTypeCounter
                    {
                    pushFollow(FOLLOW_primitiveType_in_referenceType20105);
                    primitiveType240=primitiveType();

                    state._fsp--;
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_arrayTypeCounter_in_referenceType20107);
                    arrayTypeCounter239=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (arrayTypeCounter239 > 0)
                                  {
                                      retval.ret = wrapArrayLevels(primitiveType240, arrayTypeCounter239);
                                  }
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "referenceType"


    // $ANTLR start "type"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4574:1: type returns [NodeUnion<? extends TypeNode> ret] : ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] | ( classOrInterfaceType | primitiveType ) ) ( arrayTypeCounter )? ;
    public final NodeUnion<? extends TypeNode> type() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeNode> ret = null;

        NodeUnion<? extends Node> splice241 = null;

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType242 = null;

        NodeUnion<? extends PrimitiveTypeNode> primitiveType243 = null;

        int arrayTypeCounter244 = 0;



                    ruleStart("type");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4582:5: ( ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] | ( classOrInterfaceType | primitiveType ) ) ( arrayTypeCounter )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4583:9: ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] | ( classOrInterfaceType | primitiveType ) ) ( arrayTypeCounter )?
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4583:9: ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] | ( classOrInterfaceType | primitiveType ) )
            int alt145=2;
            alt145 = dfa145.predict(input);
            switch (alt145) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4584:13: splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_type20207);
                    splice241=splice(TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class));

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice241 != null) // TODO: fix this with error nodes
                                          ret = splice241.castNodeType(factory, TypeNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4590:13: ( classOrInterfaceType | primitiveType )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4590:13: ( classOrInterfaceType | primitiveType )
                    int alt144=2;
                    alt144 = dfa144.predict(input);
                    switch (alt144) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4591:17: classOrInterfaceType
                            {
                            pushFollow(FOLLOW_classOrInterfaceType_in_type20267);
                            classOrInterfaceType242=classOrInterfaceType();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                                  ret = (classOrInterfaceType242!=null?classOrInterfaceType242.ret:null);
                                              
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4596:17: primitiveType
                            {
                            pushFollow(FOLLOW_primitiveType_in_type20317);
                            primitiveType243=primitiveType();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                                  ret = primitiveType243;
                                              
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4602:9: ( arrayTypeCounter )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==LBRACKET) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4603:13: arrayTypeCounter
                    {
                    pushFollow(FOLLOW_arrayTypeCounter_in_type20383);
                    arrayTypeCounter244=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = wrapArrayLevels(ret, arrayTypeCounter244);
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "type"

    public static class classOrInterfaceType_return extends ParserRuleReturnScope {
        public NodeUnion<? extends DeclaredTypeNode> ret;
    };

    // $ANTLR start "classOrInterfaceType"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4617:1: classOrInterfaceType returns [NodeUnion<? extends DeclaredTypeNode> ret] : ( unparameterizedType ( typeArguments ( '.' next= classOrInterfaceType )? )? | splice[ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] ( '.' next= classOrInterfaceType )? | splice[DeclaredTypeNode.class, Arrays.<Class<? extends Node>>asList(UnparameterizedTypeNode.class, ParameterizedTypeNode.class)] );
    public final BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.classOrInterfaceType_return retval = new BsjAntlrParser.classOrInterfaceType_return();
        retval.start = input.LT(1);

        BsjAntlrParser.classOrInterfaceType_return next = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType245 = null;

        NodeUnion<? extends TypeArgumentListNode> typeArguments246 = null;

        NodeUnion<? extends Node> splice247 = null;

        NodeUnion<? extends Node> splice248 = null;



                    ruleStart("classOrInterfaceType");
                    NodeUnion<? extends UnparameterizedTypeNode> unparameterizedTypeNode = 
                            factory.makeNormalNodeUnion(null);
                    NodeUnion<? extends ParameterizedTypeNode> parameterizedTypeNode = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4629:5: ( unparameterizedType ( typeArguments ( '.' next= classOrInterfaceType )? )? | splice[ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] ( '.' next= classOrInterfaceType )? | splice[DeclaredTypeNode.class, Arrays.<Class<? extends Node>>asList(UnparameterizedTypeNode.class, ParameterizedTypeNode.class)] )
            int alt150=3;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA150_1 = input.LA(2);

                if ( (((synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred188_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {
                    alt150=1;
                }
                else if ( ((synpred190_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt150=2;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt150=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA150_0==IDENTIFIER) ) {
                alt150=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4630:9: unparameterizedType ( typeArguments ( '.' next= classOrInterfaceType )? )?
                    {
                    pushFollow(FOLLOW_unparameterizedType_in_classOrInterfaceType20483);
                    unparameterizedType245=unparameterizedType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  unparameterizedTypeNode = (unparameterizedType245!=null?unparameterizedType245.ret:null);
                                  retval.ret = unparameterizedTypeNode;
                              
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4635:9: ( typeArguments ( '.' next= classOrInterfaceType )? )?
                    int alt148=2;
                    int LA148_0 = input.LA(1);

                    if ( (LA148_0==LT) ) {
                        int LA148_1 = input.LA(2);

                        if ( (LA148_1==IDENTIFIER||LA148_1==BOOLEAN||LA148_1==BYTE||LA148_1==CHAR||LA148_1==DOUBLE||LA148_1==FLOAT||LA148_1==INT||LA148_1==LONG||LA148_1==SHORT||LA148_1==QUES||LA148_1==128) ) {
                            alt148=1;
                        }
                    }
                    switch (alt148) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4636:13: typeArguments ( '.' next= classOrInterfaceType )?
                            {
                            pushFollow(FOLLOW_typeArguments_in_classOrInterfaceType20517);
                            typeArguments246=typeArguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              parameterizedTypeNode = factory.makeNormalNodeUnion(
                                                      factory.makeParameterizedTypeNodeWithUnions(unparameterizedTypeNode, typeArguments246));
                                              retval.ret = parameterizedTypeNode;
                                          
                            }
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4642:13: ( '.' next= classOrInterfaceType )?
                            int alt147=2;
                            int LA147_0 = input.LA(1);

                            if ( (LA147_0==DOT) ) {
                                alt147=1;
                            }
                            switch (alt147) {
                                case 1 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4643:17: '.' next= classOrInterfaceType
                                    {
                                    match(input,DOT,FOLLOW_DOT_in_classOrInterfaceType20563); if (state.failed) return retval;
                                    pushFollow(FOLLOW_classOrInterfaceType_in_classOrInterfaceType20567);
                                    next=classOrInterfaceType();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if (  true  ) {

                                                          retval.ret = factory.makeNormalNodeUnion(
                                                                  factory.makeParameterizedTypeSelectNodeWithUnions(parameterizedTypeNode, (next!=null?next.ret:null)));
                                                      
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4651:9: splice[ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] ( '.' next= classOrInterfaceType )?
                    {
                    pushFollow(FOLLOW_splice_in_classOrInterfaceType20627);
                    splice247=splice(ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice247 != null) // TODO: fix this with error nodes
                                      retval.ret = splice247.castNodeType(factory, ParameterizedTypeNode.class);
                                  parameterizedTypeNode = retval.ret.castNodeType(factory, ParameterizedTypeNode.class);
                              
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4657:9: ( '.' next= classOrInterfaceType )?
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==DOT) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4658:13: '.' next= classOrInterfaceType
                            {
                            match(input,DOT,FOLLOW_DOT_in_classOrInterfaceType20662); if (state.failed) return retval;
                            pushFollow(FOLLOW_classOrInterfaceType_in_classOrInterfaceType20666);
                            next=classOrInterfaceType();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              retval.ret = factory.makeNormalNodeUnion(
                                                      factory.makeParameterizedTypeSelectNodeWithUnions(parameterizedTypeNode, (next!=null?next.ret:null)));
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4665:9: splice[DeclaredTypeNode.class, Arrays.<Class<? extends Node>>asList(UnparameterizedTypeNode.class, ParameterizedTypeNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_classOrInterfaceType20707);
                    splice248=splice(DeclaredTypeNode.class, Arrays.<Class<? extends Node>>asList(UnparameterizedTypeNode.class, ParameterizedTypeNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice248 != null) // TODO: fix this with error nodes
                                      retval.ret = splice248.castNodeType(factory, DeclaredTypeNode.class);
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "classOrInterfaceType"


    // $ANTLR start "primitiveType"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4677:1: primitiveType returns [NodeUnion<? extends PrimitiveTypeNode> ret] : ( splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()] | 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
    public final NodeUnion<? extends PrimitiveTypeNode> primitiveType() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends PrimitiveTypeNode> ret = null;

        NodeUnion<? extends Node> splice249 = null;



                    ruleStart("primitiveType");
                    PrimitiveType temp = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4687:5: ( splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()] | 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
            int alt151=9;
            alt151 = dfa151.predict(input);
            switch (alt151) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4688:9: splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_primitiveType20794);
                    splice249=splice(PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice249 != null) // TODO: fix this with error nodes
                                      ret = splice249.castNodeType(factory, PrimitiveTypeNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4694:9: 'boolean'
                    {
                    match(input,BOOLEAN,FOLLOW_BOOLEAN_in_primitiveType20824); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.BOOLEAN;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4699:9: 'char'
                    {
                    match(input,CHAR,FOLLOW_CHAR_in_primitiveType20853); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.CHAR;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4704:9: 'byte'
                    {
                    match(input,BYTE,FOLLOW_BYTE_in_primitiveType20882); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.BYTE;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4709:9: 'short'
                    {
                    match(input,SHORT,FOLLOW_SHORT_in_primitiveType20911); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.SHORT;
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4714:9: 'int'
                    {
                    match(input,INT,FOLLOW_INT_in_primitiveType20944); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.INT;
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4719:9: 'long'
                    {
                    match(input,LONG,FOLLOW_LONG_in_primitiveType20977); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.LONG;
                              
                    }

                    }
                    break;
                case 8 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4724:9: 'float'
                    {
                    match(input,FLOAT,FOLLOW_FLOAT_in_primitiveType21006); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.FLOAT;
                              
                    }

                    }
                    break;
                case 9 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4729:9: 'double'
                    {
                    match(input,DOUBLE,FOLLOW_DOUBLE_in_primitiveType21035); if (state.failed) return ret;
                    if (  true  ) {

                                  temp = PrimitiveType.DOUBLE;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                          ret = factory.makeNormalNodeUnion(factory.makePrimitiveTypeNode(temp));
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "primitiveType"


    // $ANTLR start "typeArguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4740:1: typeArguments returns [NodeUnion<? extends TypeArgumentListNode> ret] : '<' ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeArgument ( ',' b= typeArgument )* ) ) '>' ;
    public final NodeUnion<? extends TypeArgumentListNode> typeArguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeArgumentListNode> ret = null;

        BsjAntlrParser.typeArgument_return a = null;

        BsjAntlrParser.typeArgument_return b = null;

        NodeUnion<? extends Node> splice250 = null;



                    ruleStart("typeArguments");
                    List<NodeUnion<? extends TypeArgumentNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4749:5: ( '<' ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeArgument ( ',' b= typeArgument )* ) ) '>' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4750:9: '<' ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeArgument ( ',' b= typeArgument )* ) ) '>'
            {
            match(input,LT,FOLLOW_LT_in_typeArguments21122); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4751:9: ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeArgument ( ',' b= typeArgument )* ) )
            int alt153=2;
            alt153 = dfa153.predict(input);
            switch (alt153) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4752:13: splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_typeArguments21146);
                    splice250=splice(TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice250 != null) // TODO: fix this with error nodes
                                          ret = splice250.castNodeType(factory, TypeArgumentListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4758:13: (a= typeArgument ( ',' b= typeArgument )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4758:13: (a= typeArgument ( ',' b= typeArgument )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4759:17: a= typeArgument ( ',' b= typeArgument )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends TypeArgumentNode>>();
                                      
                    }
                    pushFollow(FOLLOW_typeArgument_in_typeArguments21217);
                    a=typeArgument();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "typeArgument", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4774:11: ( ',' b= typeArgument )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==COMMA) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4775:13: ',' b= typeArgument
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_typeArguments21255); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_typeArgument_in_typeArguments21279);
                    	    b=typeArgument();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "typeArgument", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeTypeArgumentListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }

            match(input,GT,FOLLOW_GT_in_typeArguments21354); if (state.failed) return ret;

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeArguments"


    // $ANTLR start "optionalTypeArguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4797:1: optionalTypeArguments returns [NodeUnion<? extends TypeArgumentListNode> ret] : ( ( typeArguments ) | () );
    public final NodeUnion<? extends TypeArgumentListNode> optionalTypeArguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeArgumentListNode> ret = null;

        NodeUnion<? extends TypeArgumentListNode> typeArguments251 = null;



                    ruleStart("optionalTypeArguments");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4805:5: ( ( typeArguments ) | () )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==LT) ) {
                alt154=1;
            }
            else if ( (LA154_0==IDENTIFIER||LA154_0==LPAREN||LA154_0==128) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4806:9: ( typeArguments )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4806:9: ( typeArguments )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4807:13: typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_optionalTypeArguments21436);
                    typeArguments251=typeArguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = typeArguments251;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4813:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4813:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4814:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeTypeArgumentListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalTypeArguments"

    public static class typeArgument_return extends ParserRuleReturnScope {
        public NodeUnion<? extends TypeArgumentNode> ret;
    };

    // $ANTLR start "typeArgument"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4828:1: typeArgument returns [NodeUnion<? extends TypeArgumentNode> ret] : ( splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)] | referenceType | wildcard );
    public final BsjAntlrParser.typeArgument_return typeArgument() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.typeArgument_return retval = new BsjAntlrParser.typeArgument_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice252 = null;

        BsjAntlrParser.referenceType_return referenceType253 = null;

        NodeUnion<? extends WildcardTypeNode> wildcard254 = null;



                    ruleStart("typeArgument");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4836:5: ( splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)] | referenceType | wildcard )
            int alt155=3;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4837:9: splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_typeArgument21576);
                    splice252=splice(TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice252 != null) // TODO: fix this with error nodes
                                      retval.ret = splice252.castNodeType(factory, TypeArgumentNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4843:9: referenceType
                    {
                    pushFollow(FOLLOW_referenceType_in_typeArgument21603);
                    referenceType253=referenceType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = (referenceType253!=null?referenceType253.ret:null);
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4848:9: wildcard
                    {
                    pushFollow(FOLLOW_wildcard_in_typeArgument21629);
                    wildcard254=wildcard();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = wildcard254;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "typeArgument"


    // $ANTLR start "wildcard"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4854:1: wildcard returns [NodeUnion<? extends WildcardTypeNode> ret] : ( splice[WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList()] | '?' ( ( EXTENDS | SUPER ) referenceType )? );
    public final NodeUnion<? extends WildcardTypeNode> wildcard() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends WildcardTypeNode> ret = null;

        NodeUnion<? extends Node> splice255 = null;

        BsjAntlrParser.referenceType_return referenceType256 = null;



                    ruleStart("wildcard");
                    boolean upper = false;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4863:5: ( splice[WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList()] | '?' ( ( EXTENDS | SUPER ) referenceType )? )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt158=1;
            }
            else if ( (LA158_0==QUES) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4864:9: splice[WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_wildcard21707);
                    splice255=splice(WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice255 != null) // TODO: fix this with error nodes
                                      ret = splice255.castNodeType(factory, WildcardTypeNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4870:9: '?' ( ( EXTENDS | SUPER ) referenceType )?
                    {
                    match(input,QUES,FOLLOW_QUES_in_wildcard21734); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeWildcardTypeNode((ReferenceTypeNode)null, false));
                              
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4874:9: ( ( EXTENDS | SUPER ) referenceType )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( ((LA157_0>=EXTENDS && LA157_0<=SUPER)) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4875:13: ( EXTENDS | SUPER ) referenceType
                            {
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4875:13: ( EXTENDS | SUPER )
                            int alt156=2;
                            int LA156_0 = input.LA(1);

                            if ( (LA156_0==EXTENDS) ) {
                                alt156=1;
                            }
                            else if ( (LA156_0==SUPER) ) {
                                alt156=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return ret;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 156, 0, input);

                                throw nvae;
                            }
                            switch (alt156) {
                                case 1 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4876:17: EXTENDS
                                    {
                                    match(input,EXTENDS,FOLLOW_EXTENDS_in_wildcard21786); if (state.failed) return ret;
                                    if (  true  ) {
                                       upper = true; 
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4878:17: SUPER
                                    {
                                    match(input,SUPER,FOLLOW_SUPER_in_wildcard21820); if (state.failed) return ret;
                                    if (  true  ) {
                                       upper = false; 
                                    }

                                    }
                                    break;

                            }

                            pushFollow(FOLLOW_referenceType_in_wildcard21850);
                            referenceType256=referenceType();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = factory.makeNormalNodeUnion(factory.makeWildcardTypeNodeWithUnions((referenceType256!=null?referenceType256.ret:null), upper));
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "wildcard"

    public static class formalParameters_return extends ParserRuleReturnScope {
        public NodeUnion<? extends VariableListNode> parameters;
        public NodeUnion<? extends VariableNode> varargParameter;
    };

    // $ANTLR start "formalParameters"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4892:1: formalParameters returns [NodeUnion<? extends VariableListNode> parameters, NodeUnion<? extends VariableNode> varargParameter] : '(' ( formalParameterDecls )? ')' ;
    public final BsjAntlrParser.formalParameters_return formalParameters() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.formalParameters_return retval = new BsjAntlrParser.formalParameters_return();
        retval.start = input.LT(1);

        BsjAntlrParser.formalParameterDecls_return formalParameterDecls257 = null;



                    ruleStart("formalParameters");
                    retval.parameters = factory.makeNormalNodeUnion(factory.makeVariableListNode());
                    retval.varargParameter = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4902:5: ( '(' ( formalParameterDecls )? ')' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4903:9: '(' ( formalParameterDecls )? ')'
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_formalParameters21948); if (state.failed) return retval;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4904:9: ( formalParameterDecls )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==IDENTIFIER||LA159_0==ABSTRACT||LA159_0==BOOLEAN||LA159_0==BYTE||LA159_0==CHAR||LA159_0==DOUBLE||LA159_0==FINAL||LA159_0==FLOAT||LA159_0==INT||(LA159_0>=LONG && LA159_0<=NATIVE)||(LA159_0>=PRIVATE && LA159_0<=PUBLIC)||(LA159_0>=SHORT && LA159_0<=STRICTFP)||LA159_0==SYNCHRONIZED||LA159_0==TRANSIENT||LA159_0==VOLATILE||LA159_0==MONKEYS_AT||LA159_0==128) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4905:13: formalParameterDecls
                    {
                    pushFollow(FOLLOW_formalParameterDecls_in_formalParameters21972);
                    formalParameterDecls257=formalParameterDecls();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                      retval.parameters = (formalParameterDecls257!=null?formalParameterDecls257.parameters:null);
                                      retval.varargParameter = (formalParameterDecls257!=null?formalParameterDecls257.varargParameter:null);
                                  
                    }

                    }
                    break;

            }

            match(input,RPAREN,FOLLOW_RPAREN_in_formalParameters22008); if (state.failed) return retval;

            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "formalParameters"

    public static class formalParameterDecls_return extends ParserRuleReturnScope {
        public NodeUnion<? extends VariableListNode> parameters;
        public NodeUnion<? extends VariableNode> varargParameter;
    };

    // $ANTLR start "formalParameterDecls"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4915:1: formalParameterDecls returns [NodeUnion<? extends VariableListNode> parameters, NodeUnion<? extends VariableNode> varargParameter] : ( normalParameterDecls ',' ellipsisParameterDecl | normalParameterDecls | ellipsisParameterDecl );
    public final BsjAntlrParser.formalParameterDecls_return formalParameterDecls() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.formalParameterDecls_return retval = new BsjAntlrParser.formalParameterDecls_return();
        retval.start = input.LT(1);

        NodeUnion<? extends VariableListNode> normalParameterDecls258 = null;

        NodeUnion<? extends VariableNode> ellipsisParameterDecl259 = null;

        NodeUnion<? extends VariableListNode> normalParameterDecls260 = null;

        NodeUnion<? extends VariableNode> ellipsisParameterDecl261 = null;



                    ruleStart("formalParameterDecls");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4923:5: ( normalParameterDecls ',' ellipsisParameterDecl | normalParameterDecls | ellipsisParameterDecl )
            int alt160=3;
            alt160 = dfa160.predict(input);
            switch (alt160) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4924:9: normalParameterDecls ',' ellipsisParameterDecl
                    {
                    pushFollow(FOLLOW_normalParameterDecls_in_formalParameterDecls22077);
                    normalParameterDecls258=normalParameterDecls();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,COMMA,FOLLOW_COMMA_in_formalParameterDecls22087); if (state.failed) return retval;
                    pushFollow(FOLLOW_ellipsisParameterDecl_in_formalParameterDecls22097);
                    ellipsisParameterDecl259=ellipsisParameterDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.parameters = normalParameterDecls258;
                                  retval.varargParameter = ellipsisParameterDecl259;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4932:9: normalParameterDecls
                    {
                    pushFollow(FOLLOW_normalParameterDecls_in_formalParameterDecls22123);
                    normalParameterDecls260=normalParameterDecls();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.parameters = normalParameterDecls260;
                                  retval.varargParameter = null;            
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4938:9: ellipsisParameterDecl
                    {
                    pushFollow(FOLLOW_ellipsisParameterDecl_in_formalParameterDecls22149);
                    ellipsisParameterDecl261=ellipsisParameterDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.parameters = factory.makeNormalNodeUnion(factory.makeVariableListNode());
                                  retval.varargParameter = ellipsisParameterDecl261;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "formalParameterDecls"


    // $ANTLR start "normalParameterDecls"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4945:1: normalParameterDecls returns [NodeUnion<? extends VariableListNode> ret] : ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= normalParameterDecl ( ',' b= normalParameterDecl )* ) ) ;
    public final NodeUnion<? extends VariableListNode> normalParameterDecls() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableListNode> ret = null;

        BsjAntlrParser.normalParameterDecl_return a = null;

        BsjAntlrParser.normalParameterDecl_return b = null;

        NodeUnion<? extends Node> splice262 = null;



                    ruleStart("normalParameterDecls");
                    List<NodeUnion<? extends VariableNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4954:5: ( ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= normalParameterDecl ( ',' b= normalParameterDecl )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4955:9: ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= normalParameterDecl ( ',' b= normalParameterDecl )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4955:9: ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= normalParameterDecl ( ',' b= normalParameterDecl )* ) )
            int alt162=2;
            alt162 = dfa162.predict(input);
            switch (alt162) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4956:13: splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_normalParameterDecls22241);
                    splice262=splice(VariableListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice262 != null) // TODO: fix this with error nodes
                                          ret = splice262.castNodeType(factory, VariableListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4962:13: (a= normalParameterDecl ( ',' b= normalParameterDecl )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4962:13: (a= normalParameterDecl ( ',' b= normalParameterDecl )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4963:17: a= normalParameterDecl ( ',' b= normalParameterDecl )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends VariableNode>>();
                                      
                    }
                    pushFollow(FOLLOW_normalParameterDecl_in_normalParameterDecls22312);
                    a=normalParameterDecl();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "normalParameterDecl", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4978:11: ( ',' b= normalParameterDecl )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==COMMA) ) {
                            int LA161_1 = input.LA(2);

                            if ( (synpred211_BsjAntlr()) ) {
                                alt161=1;
                            }


                        }


                        switch (alt161) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4979:13: ',' b= normalParameterDecl
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_normalParameterDecls22350); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_normalParameterDecl_in_normalParameterDecls22374);
                    	    b=normalParameterDecl();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "normalParameterDecl", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeVariableListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "normalParameterDecls"


    // $ANTLR start "optionalNormalParameterDecls"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5000:1: optionalNormalParameterDecls returns [NodeUnion<? extends VariableListNode> ret] : ( ( normalParameterDecls ) | () );
    public final NodeUnion<? extends VariableListNode> optionalNormalParameterDecls() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableListNode> ret = null;

        NodeUnion<? extends VariableListNode> normalParameterDecls263 = null;



                    ruleStart("optionalNormalParameterDecls");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5008:5: ( ( normalParameterDecls ) | () )
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==IDENTIFIER||LA163_0==ABSTRACT||LA163_0==BOOLEAN||LA163_0==BYTE||LA163_0==CHAR||LA163_0==DOUBLE||LA163_0==FINAL||LA163_0==FLOAT||LA163_0==INT||(LA163_0>=LONG && LA163_0<=NATIVE)||(LA163_0>=PRIVATE && LA163_0<=PUBLIC)||(LA163_0>=SHORT && LA163_0<=STRICTFP)||LA163_0==SYNCHRONIZED||LA163_0==TRANSIENT||LA163_0==VOLATILE||LA163_0==MONKEYS_AT||LA163_0==128) ) {
                alt163=1;
            }
            else if ( (LA163_0==EOF) ) {
                alt163=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }
            switch (alt163) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5009:9: ( normalParameterDecls )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5009:9: ( normalParameterDecls )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5010:13: normalParameterDecls
                    {
                    pushFollow(FOLLOW_normalParameterDecls_in_optionalNormalParameterDecls22521);
                    normalParameterDecls263=normalParameterDecls();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = normalParameterDecls263;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5016:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5016:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5017:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeVariableListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalNormalParameterDecls"

    public static class normalParameterDecl_return extends ParserRuleReturnScope {
        public NodeUnion<? extends VariableNode> ret;
    };

    // $ANTLR start "normalParameterDecl"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5024:1: normalParameterDecl returns [NodeUnion<? extends VariableNode> ret] : ( splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()] | mod= variableModifiers t= type id= identifier ( arrayTypeCounter )? );
    public final BsjAntlrParser.normalParameterDecl_return normalParameterDecl() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.normalParameterDecl_return retval = new BsjAntlrParser.normalParameterDecl_return();
        retval.start = input.LT(1);

        NodeUnion<? extends VariableModifiersNode> mod = null;

        NodeUnion<? extends TypeNode> t = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice264 = null;

        int arrayTypeCounter265 = 0;



                    ruleStart("normalParameterDecl");
                    NodeUnion<? extends TypeNode> typeNode = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5033:5: ( splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()] | mod= variableModifiers t= type id= identifier ( arrayTypeCounter )? )
            int alt165=2;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5034:9: splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_normalParameterDecl22654);
                    splice264=splice(VariableNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice264 != null) // TODO: fix this with error nodes
                                      retval.ret = splice264.castNodeType(factory, VariableNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5040:9: mod= variableModifiers t= type id= identifier ( arrayTypeCounter )?
                    {
                    pushFollow(FOLLOW_variableModifiers_in_normalParameterDecl22683);
                    mod=variableModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_type_in_normalParameterDecl22695);
                    t=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  typeNode = t;
                              
                    }
                    pushFollow(FOLLOW_identifier_in_normalParameterDecl22717);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5046:9: ( arrayTypeCounter )?
                    int alt164=2;
                    int LA164_0 = input.LA(1);

                    if ( (LA164_0==LBRACKET) ) {
                        alt164=1;
                    }
                    switch (alt164) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5047:13: arrayTypeCounter
                            {
                            pushFollow(FOLLOW_arrayTypeCounter_in_normalParameterDecl22741);
                            arrayTypeCounter265=arrayTypeCounter();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              typeNode = wrapArrayLevels(typeNode, arrayTypeCounter265);
                                          
                            }

                            }
                            break;

                    }

                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeVariableNodeWithUnions(mod, typeNode, (id!=null?id.ret:null)));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "normalParameterDecl"


    // $ANTLR start "ellipsisParameterDecl"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5057:1: ellipsisParameterDecl returns [NodeUnion<? extends VariableNode> ret] : mod= variableModifiers t= type '...' id= identifier ( arrayTypeCounter )? ;
    public final NodeUnion<? extends VariableNode> ellipsisParameterDecl() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableNode> ret = null;

        NodeUnion<? extends VariableModifiersNode> mod = null;

        NodeUnion<? extends TypeNode> t = null;

        BsjAntlrParser.identifier_return id = null;

        int arrayTypeCounter266 = 0;



                    ruleStart("ellipsisParameterDecl");
                    NodeUnion<? extends TypeNode> typeNode = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5066:5: (mod= variableModifiers t= type '...' id= identifier ( arrayTypeCounter )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5067:9: mod= variableModifiers t= type '...' id= identifier ( arrayTypeCounter )?
            {
            pushFollow(FOLLOW_variableModifiers_in_ellipsisParameterDecl22846);
            mod=variableModifiers();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_type_in_ellipsisParameterDecl22858);
            t=type();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          typeNode = t;
                      
            }
            match(input,ELLIPSIS,FOLLOW_ELLIPSIS_in_ellipsisParameterDecl22878); if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_ellipsisParameterDecl22890);
            id=identifier();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5074:9: ( arrayTypeCounter )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==LBRACKET) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5075:13: arrayTypeCounter
                    {
                    pushFollow(FOLLOW_arrayTypeCounter_in_ellipsisParameterDecl22914);
                    arrayTypeCounter266=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      typeNode = wrapArrayLevels(typeNode, arrayTypeCounter266);
                                  
                    }

                    }
                    break;

            }

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeVariableNodeWithUnions(mod, typeNode, (id!=null?id.ret:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "ellipsisParameterDecl"


    // $ANTLR start "alternateConstructorInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5085:1: alternateConstructorInvocation returns [NodeUnion<? extends AlternateConstructorInvocationNode> ret] : optionalNonWildcardTypeArguments 'this' arguments ';' ;
    public final NodeUnion<? extends AlternateConstructorInvocationNode> alternateConstructorInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AlternateConstructorInvocationNode> ret = null;

        NodeUnion<? extends ExpressionListNode> arguments267 = null;

        NodeUnion<? extends ReferenceTypeListNode> optionalNonWildcardTypeArguments268 = null;



                    ruleStart("alternateConstructorInvocation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5093:5: ( optionalNonWildcardTypeArguments 'this' arguments ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5094:9: optionalNonWildcardTypeArguments 'this' arguments ';'
            {
            pushFollow(FOLLOW_optionalNonWildcardTypeArguments_in_alternateConstructorInvocation23017);
            optionalNonWildcardTypeArguments268=optionalNonWildcardTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            match(input,THIS,FOLLOW_THIS_in_alternateConstructorInvocation23019); if (state.failed) return ret;
            pushFollow(FOLLOW_arguments_in_alternateConstructorInvocation23021);
            arguments267=arguments();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_alternateConstructorInvocation23023); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAlternateConstructorInvocationNodeWithUnions(
                                      arguments267,
                                      optionalNonWildcardTypeArguments268));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "alternateConstructorInvocation"


    // $ANTLR start "superclassConstructorInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5102:1: superclassConstructorInvocation returns [NodeUnion<? extends SuperclassConstructorInvocationNode> ret] : ( primary '.' )? optionalNonWildcardTypeArguments SUPER arguments ';' ;
    public final NodeUnion<? extends SuperclassConstructorInvocationNode> superclassConstructorInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SuperclassConstructorInvocationNode> ret = null;

        NodeUnion<? extends PrimaryExpressionNode> primary269 = null;

        NodeUnion<? extends ExpressionListNode> arguments270 = null;

        NodeUnion<? extends ReferenceTypeListNode> optionalNonWildcardTypeArguments271 = null;



                    ruleStart("superclassConstructorInvocation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5110:5: ( ( primary '.' )? optionalNonWildcardTypeArguments SUPER arguments ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5111:9: ( primary '.' )? optionalNonWildcardTypeArguments SUPER arguments ';'
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5111:9: ( primary '.' )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {
                alt167=1;
            }
            else if ( (LA167_0==CODELITERAL_START||(LA167_0>=THIS && LA167_0<=IDENTIFIER)||LA167_0==BOOLEAN||LA167_0==BYTE||LA167_0==CHAR||LA167_0==DOUBLE||LA167_0==FLOAT||LA167_0==INT||LA167_0==LONG||LA167_0==SHORT||LA167_0==VOID||LA167_0==LPAREN) ) {
                alt167=1;
            }
            else if ( (LA167_0==SUPER) ) {
                int LA167_3 = input.LA(2);

                if ( (LA167_3==DOT) ) {
                    alt167=1;
                }
            }
            switch (alt167) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5112:13: primary '.'
                    {
                    pushFollow(FOLLOW_primary_in_superclassConstructorInvocation23115);
                    primary269=primary();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,DOT,FOLLOW_DOT_in_superclassConstructorInvocation23117); if (state.failed) return ret;

                    }
                    break;

            }

            pushFollow(FOLLOW_optionalNonWildcardTypeArguments_in_superclassConstructorInvocation23138);
            optionalNonWildcardTypeArguments271=optionalNonWildcardTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SUPER,FOLLOW_SUPER_in_superclassConstructorInvocation23148); if (state.failed) return ret;
            pushFollow(FOLLOW_arguments_in_superclassConstructorInvocation23150);
            arguments270=arguments();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_superclassConstructorInvocation23152); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeSuperclassConstructorInvocationNodeWithUnions(
                                      primary269,
                                      arguments270,
                                      optionalNonWildcardTypeArguments271));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "superclassConstructorInvocation"


    // $ANTLR start "explicitConstructorInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5124:1: explicitConstructorInvocation returns [NodeUnion<? extends ConstructorInvocationNode> ret] : ( splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()] | alternateConstructorInvocation | superclassConstructorInvocation );
    public final NodeUnion<? extends ConstructorInvocationNode> explicitConstructorInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorInvocationNode> ret = null;

        NodeUnion<? extends Node> splice272 = null;

        NodeUnion<? extends AlternateConstructorInvocationNode> alternateConstructorInvocation273 = null;

        NodeUnion<? extends SuperclassConstructorInvocationNode> superclassConstructorInvocation274 = null;



                    ruleStart("explicitConstructorInvocation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5132:5: ( splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()] | alternateConstructorInvocation | superclassConstructorInvocation )
            int alt168=3;
            alt168 = dfa168.predict(input);
            switch (alt168) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5133:9: splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_explicitConstructorInvocation23230);
                    splice272=splice(ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice272 != null) // TODO: fix this with error nodes
                                      ret = splice272.castNodeType(factory, ConstructorInvocationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5139:9: alternateConstructorInvocation
                    {
                    pushFollow(FOLLOW_alternateConstructorInvocation_in_explicitConstructorInvocation23257);
                    alternateConstructorInvocation273=alternateConstructorInvocation();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = alternateConstructorInvocation273;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5144:9: superclassConstructorInvocation
                    {
                    pushFollow(FOLLOW_superclassConstructorInvocation_in_explicitConstructorInvocation23283);
                    superclassConstructorInvocation274=superclassConstructorInvocation();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = superclassConstructorInvocation274;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "explicitConstructorInvocation"


    // $ANTLR start "annotations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5150:1: annotations returns [NodeUnion<? extends AnnotationListNode> ret] : ( splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotation (b= annotation )* ) ) ;
    public final NodeUnion<? extends AnnotationListNode> annotations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationListNode> ret = null;

        BsjAntlrParser.annotation_return a = null;

        BsjAntlrParser.annotation_return b = null;

        NodeUnion<? extends Node> splice275 = null;



                    ruleStart("annotations");
                    List<NodeUnion<? extends AnnotationNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5159:5: ( ( splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotation (b= annotation )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5160:9: ( splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotation (b= annotation )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5160:9: ( splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotation (b= annotation )* ) )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==128) ) {
                int LA170_1 = input.LA(2);

                if ( ((synpred219_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt170=1;
                }
                else if ( (true) ) {
                    alt170=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 170, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA170_0==MONKEYS_AT) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5161:13: splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotations23375);
                    splice275=splice(AnnotationListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice275 != null) // TODO: fix this with error nodes
                                          ret = splice275.castNodeType(factory, AnnotationListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5167:13: (a= annotation (b= annotation )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5167:13: (a= annotation (b= annotation )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5168:17: a= annotation (b= annotation )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends AnnotationNode>>();
                                      
                    }
                    pushFollow(FOLLOW_annotation_in_annotations23446);
                    a=annotation();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "annotation", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5183:11: (b= annotation )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==128) && ((configuration.getCodeSplicingSupported()))) {
                            alt169=1;
                        }
                        else if ( (LA169_0==MONKEYS_AT) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5184:21: b= annotation
                    	    {
                    	    pushFollow(FOLLOW_annotation_in_annotations23494);
                    	    b=annotation();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "annotation", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotations"


    // $ANTLR start "optionalAnnotations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5204:1: optionalAnnotations returns [NodeUnion<? extends AnnotationListNode> ret] : ( ( annotations ) | () );
    public final NodeUnion<? extends AnnotationListNode> optionalAnnotations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationListNode> ret = null;

        NodeUnion<? extends AnnotationListNode> annotations276 = null;



                    ruleStart("optionalAnnotations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5212:5: ( ( annotations ) | () )
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==MONKEYS_AT||LA171_0==128) ) {
                alt171=1;
            }
            else if ( (LA171_0==EOF) ) {
                alt171=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 171, 0, input);

                throw nvae;
            }
            switch (alt171) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5213:9: ( annotations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5213:9: ( annotations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5214:13: annotations
                    {
                    pushFollow(FOLLOW_annotations_in_optionalAnnotations23641);
                    annotations276=annotations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = annotations276;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5220:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5220:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5221:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAnnotationListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalAnnotations"

    public static class annotation_return extends ParserRuleReturnScope {
        public NodeUnion<? extends AnnotationNode> ret;
    };

    // $ANTLR start "annotation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5234:1: annotation returns [NodeUnion<? extends AnnotationNode> ret] : ( splice[AnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' unparameterizedType ( ( '(' ( optionalElementValuePairs | elementValue )? ')' ) | ) );
    public final BsjAntlrParser.annotation_return annotation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.annotation_return retval = new BsjAntlrParser.annotation_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice277 = null;

        NodeUnion<? extends AnnotationElementListNode> optionalElementValuePairs278 = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType279 = null;

        BsjAntlrParser.elementValue_return elementValue280 = null;



                    ruleStart("annotation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5242:5: ( splice[AnnotationNode.class, Arrays.<Class<? extends Node>>asList()] | '@' unparameterizedType ( ( '(' ( optionalElementValuePairs | elementValue )? ')' ) | ) )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt174=1;
            }
            else if ( (LA174_0==MONKEYS_AT) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5243:9: splice[AnnotationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotation23780);
                    splice277=splice(AnnotationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice277 != null) // TODO: fix this with error nodes
                                      retval.ret = splice277.castNodeType(factory, AnnotationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5249:9: '@' unparameterizedType ( ( '(' ( optionalElementValuePairs | elementValue )? ')' ) | )
                    {
                    match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_annotation23807); if (state.failed) return retval;
                    pushFollow(FOLLOW_unparameterizedType_in_annotation23809);
                    unparameterizedType279=unparameterizedType();

                    state._fsp--;
                    if (state.failed) return retval;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5250:9: ( ( '(' ( optionalElementValuePairs | elementValue )? ')' ) | )
                    int alt173=2;
                    int LA173_0 = input.LA(1);

                    if ( (LA173_0==LPAREN) ) {
                        alt173=1;
                    }
                    else if ( (LA173_0==EOF||LA173_0==EXTENDS||LA173_0==IDENTIFIER||LA173_0==ABSTRACT||LA173_0==BOOLEAN||LA173_0==BYTE||(LA173_0>=CHAR && LA173_0<=CLASS)||LA173_0==DOUBLE||(LA173_0>=ENUM && LA173_0<=FINAL)||LA173_0==FLOAT||LA173_0==IMPLEMENTS||(LA173_0>=INT && LA173_0<=PUBLIC)||(LA173_0>=SHORT && LA173_0<=STRICTFP)||LA173_0==SYNCHRONIZED||LA173_0==TRANSIENT||(LA173_0>=VOID && LA173_0<=VOLATILE)||(LA173_0>=RPAREN && LA173_0<=RBRACE)||(LA173_0>=SEMI && LA173_0<=COMMA)||LA173_0==MONKEYS_AT||LA173_0==LT||LA173_0==128) ) {
                        alt173=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 173, 0, input);

                        throw nvae;
                    }
                    switch (alt173) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5251:13: ( '(' ( optionalElementValuePairs | elementValue )? ')' )
                            {
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5251:13: ( '(' ( optionalElementValuePairs | elementValue )? ')' )
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5252:17: '(' ( optionalElementValuePairs | elementValue )? ')'
                            {
                            match(input,LPAREN,FOLLOW_LPAREN_in_annotation23851); if (state.failed) return retval;
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5253:17: ( optionalElementValuePairs | elementValue )?
                            int alt172=3;
                            alt172 = dfa172.predict(input);
                            switch (alt172) {
                                case 1 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5254:21: optionalElementValuePairs
                                    {
                                    pushFollow(FOLLOW_optionalElementValuePairs_in_annotation23894);
                                    optionalElementValuePairs278=optionalElementValuePairs();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if (  true  ) {

                                                              retval.ret = factory.makeNormalNodeUnion(factory.makeNormalAnnotationNodeWithUnions(
                                                                              optionalElementValuePairs278,
                                                                              (unparameterizedType279!=null?unparameterizedType279.ret:null)));
                                                          
                                    }

                                    }
                                    break;
                                case 2 :
                                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5261:21: elementValue
                                    {
                                    pushFollow(FOLLOW_elementValue_in_annotation23956);
                                    elementValue280=elementValue();

                                    state._fsp--;
                                    if (state.failed) return retval;
                                    if (  true  ) {

                                                              retval.ret = factory.makeNormalNodeUnion(factory.makeSingleElementAnnotationNodeWithUnions(
                                                                              (elementValue280!=null?elementValue280.ret:null),
                                                                              (unparameterizedType279!=null?unparameterizedType279.ret:null)));
                                                          
                                    }

                                    }
                                    break;

                            }

                            match(input,RPAREN,FOLLOW_RPAREN_in_annotation24016); if (state.failed) return retval;

                            }


                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5271:13: 
                            {
                            if (  true  ) {

                                              retval.ret = factory.makeNormalNodeUnion(factory.makeNormalAnnotationNodeWithUnions(
                                                              factory.makeNormalNodeUnion(factory.makeAnnotationElementListNode()),
                                                              (unparameterizedType279!=null?unparameterizedType279.ret:null)));
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "annotation"


    // $ANTLR start "elementValuePairs"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5284:1: elementValuePairs returns [NodeUnion<? extends AnnotationElementListNode> ret] : ( splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValuePair ( ',' b= elementValuePair )* ) ) ;
    public final NodeUnion<? extends AnnotationElementListNode> elementValuePairs() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationElementListNode> ret = null;

        BsjAntlrParser.elementValuePair_return a = null;

        BsjAntlrParser.elementValuePair_return b = null;

        NodeUnion<? extends Node> splice281 = null;



                    ruleStart("elementValuePairs");
                    List<NodeUnion<? extends AnnotationElementNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5293:5: ( ( splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValuePair ( ',' b= elementValuePair )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5294:9: ( splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValuePair ( ',' b= elementValuePair )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5294:9: ( splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValuePair ( ',' b= elementValuePair )* ) )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==128) ) {
                int LA176_1 = input.LA(2);

                if ( ((synpred226_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt176=1;
                }
                else if ( (true) ) {
                    alt176=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 176, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA176_0==IDENTIFIER) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5295:13: splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_elementValuePairs24160);
                    splice281=splice(AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice281 != null) // TODO: fix this with error nodes
                                          ret = splice281.castNodeType(factory, AnnotationElementListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5301:13: (a= elementValuePair ( ',' b= elementValuePair )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5301:13: (a= elementValuePair ( ',' b= elementValuePair )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5302:17: a= elementValuePair ( ',' b= elementValuePair )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends AnnotationElementNode>>();
                                      
                    }
                    pushFollow(FOLLOW_elementValuePair_in_elementValuePairs24231);
                    a=elementValuePair();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "elementValuePair", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5317:11: ( ',' b= elementValuePair )*
                    loop175:
                    do {
                        int alt175=2;
                        int LA175_0 = input.LA(1);

                        if ( (LA175_0==COMMA) ) {
                            alt175=1;
                        }


                        switch (alt175) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5318:13: ',' b= elementValuePair
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_elementValuePairs24269); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_elementValuePair_in_elementValuePairs24293);
                    	    b=elementValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "elementValuePair", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop175;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationElementListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "elementValuePairs"


    // $ANTLR start "optionalElementValuePairs"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5339:1: optionalElementValuePairs returns [NodeUnion<? extends AnnotationElementListNode> ret] : ( ( elementValuePairs ) | () );
    public final NodeUnion<? extends AnnotationElementListNode> optionalElementValuePairs() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationElementListNode> ret = null;

        NodeUnion<? extends AnnotationElementListNode> elementValuePairs282 = null;



                    ruleStart("optionalElementValuePairs");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5347:5: ( ( elementValuePairs ) | () )
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==IDENTIFIER||LA177_0==128) ) {
                alt177=1;
            }
            else if ( (LA177_0==EOF||LA177_0==RPAREN) ) {
                alt177=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }
            switch (alt177) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5348:9: ( elementValuePairs )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5348:9: ( elementValuePairs )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5349:13: elementValuePairs
                    {
                    pushFollow(FOLLOW_elementValuePairs_in_optionalElementValuePairs24440);
                    elementValuePairs282=elementValuePairs();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = elementValuePairs282;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5355:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5355:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5356:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAnnotationElementListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalElementValuePairs"

    public static class elementValuePair_return extends ParserRuleReturnScope {
        public NodeUnion<? extends AnnotationElementNode> ret;
    };

    // $ANTLR start "elementValuePair"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5370:1: elementValuePair returns [NodeUnion<? extends AnnotationElementNode> ret] : ( splice[AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier '=' elementValue );
    public final BsjAntlrParser.elementValuePair_return elementValuePair() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.elementValuePair_return retval = new BsjAntlrParser.elementValuePair_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice283 = null;

        BsjAntlrParser.elementValue_return elementValue284 = null;



                    ruleStart("elementValuePair");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5378:5: ( splice[AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] | id= identifier '=' elementValue )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA178_1 = input.LA(2);

                if ( ((synpred229_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt178=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt178=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 178, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA178_0==IDENTIFIER) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5379:9: splice[AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_elementValuePair24580);
                    splice283=splice(AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice283 != null) // TODO: fix this with error nodes
                                      retval.ret = splice283.castNodeType(factory, AnnotationElementNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5385:9: id= identifier '=' elementValue
                    {
                    pushFollow(FOLLOW_identifier_in_elementValuePair24609);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,EQ,FOLLOW_EQ_in_elementValuePair24611); if (state.failed) return retval;
                    pushFollow(FOLLOW_elementValue_in_elementValuePair24613);
                    elementValue284=elementValue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeAnnotationElementNodeWithUnions((id!=null?id.ret:null), (elementValue284!=null?elementValue284.ret:null)));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "elementValuePair"

    public static class elementValue_return extends ParserRuleReturnScope {
        public NodeUnion<? extends AnnotationValueNode> ret;
    };

    // $ANTLR start "elementValue"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5400:1: elementValue returns [NodeUnion<? extends AnnotationValueNode> ret] : ( splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)] | conditionalExpression | annotation | elementValueArrayInitializer );
    public final BsjAntlrParser.elementValue_return elementValue() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.elementValue_return retval = new BsjAntlrParser.elementValue_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice285 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> conditionalExpression286 = null;

        BsjAntlrParser.annotation_return annotation287 = null;

        NodeUnion<? extends AnnotationArrayValueNode> elementValueArrayInitializer288 = null;



                    ruleStart("elementValue");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5408:5: ( splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)] | conditionalExpression | annotation | elementValueArrayInitializer )
            int alt179=4;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5409:9: splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_elementValue24703);
                    splice285=splice(AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice285 != null) // TODO: fix this with error nodes
                                      retval.ret = splice285.castNodeType(factory, AnnotationValueNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5415:9: conditionalExpression
                    {
                    pushFollow(FOLLOW_conditionalExpression_in_elementValue24730);
                    conditionalExpression286=conditionalExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeAnnotationExpressionValueNodeWithUnions(conditionalExpression286));
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5420:9: annotation
                    {
                    pushFollow(FOLLOW_annotation_in_elementValue24759);
                    annotation287=annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeAnnotationAnnotationValueNodeWithUnions((annotation287!=null?annotation287.ret:null)));
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5425:9: elementValueArrayInitializer
                    {
                    pushFollow(FOLLOW_elementValueArrayInitializer_in_elementValue24788);
                    elementValueArrayInitializer288=elementValueArrayInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = elementValueArrayInitializer288;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "elementValue"


    // $ANTLR start "elementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5432:1: elementValues returns [NodeUnion<? extends AnnotationValueListNode> ret] : ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValue ( ',' b= elementValue )* ) ( ',' )? ) ;
    public final NodeUnion<? extends AnnotationValueListNode> elementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationValueListNode> ret = null;

        BsjAntlrParser.elementValue_return a = null;

        BsjAntlrParser.elementValue_return b = null;

        NodeUnion<? extends Node> splice289 = null;



                    ruleStart("elementValues");
                    List<NodeUnion<? extends AnnotationValueNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5441:5: ( ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValue ( ',' b= elementValue )* ) ( ',' )? ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5442:9: ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValue ( ',' b= elementValue )* ) ( ',' )? )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5442:9: ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValue ( ',' b= elementValue )* ) ( ',' )? )
            int alt182=2;
            alt182 = dfa182.predict(input);
            switch (alt182) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5443:13: splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_elementValues24881);
                    splice289=splice(AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice289 != null) // TODO: fix this with error nodes
                                          ret = splice289.castNodeType(factory, AnnotationValueListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5449:13: (a= elementValue ( ',' b= elementValue )* ) ( ',' )?
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5449:13: (a= elementValue ( ',' b= elementValue )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5450:17: a= elementValue ( ',' b= elementValue )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends AnnotationValueNode>>();
                                      
                    }
                    pushFollow(FOLLOW_elementValue_in_elementValues24952);
                    a=elementValue();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "elementValue", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5465:11: ( ',' b= elementValue )*
                    loop180:
                    do {
                        int alt180=2;
                        int LA180_0 = input.LA(1);

                        if ( (LA180_0==COMMA) ) {
                            int LA180_1 = input.LA(2);

                            if ( (LA180_1==CODELITERAL_START||(LA180_1>=SUPER && LA180_1<=IDENTIFIER)||LA180_1==BOOLEAN||LA180_1==BYTE||LA180_1==CHAR||LA180_1==DOUBLE||LA180_1==FLOAT||LA180_1==INT||LA180_1==LONG||LA180_1==SHORT||LA180_1==VOID||LA180_1==LPAREN||LA180_1==LBRACE||(LA180_1>=BANG && LA180_1<=TILDE)||(LA180_1>=PLUSPLUS && LA180_1<=SUB)||LA180_1==MONKEYS_AT||LA180_1==128) ) {
                                alt180=1;
                            }


                        }


                        switch (alt180) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5466:13: ',' b= elementValue
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_elementValues24990); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_elementValue_in_elementValues25014);
                    	    b=elementValue();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "elementValue", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop180;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationValueListNodeWithUnions(list));
                      		        
                    }

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5484:9: ( ',' )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==COMMA) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_elementValues25079); if (state.failed) return ret;

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "elementValues"


    // $ANTLR start "optionalElementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5488:1: optionalElementValues returns [NodeUnion<? extends AnnotationValueListNode> ret] : ( ( elementValues ) | () );
    public final NodeUnion<? extends AnnotationValueListNode> optionalElementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationValueListNode> ret = null;

        NodeUnion<? extends AnnotationValueListNode> elementValues290 = null;



                    ruleStart("optionalElementValues");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5496:5: ( ( elementValues ) | () )
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==CODELITERAL_START||(LA183_0>=SUPER && LA183_0<=IDENTIFIER)||LA183_0==BOOLEAN||LA183_0==BYTE||LA183_0==CHAR||LA183_0==DOUBLE||LA183_0==FLOAT||LA183_0==INT||LA183_0==LONG||LA183_0==SHORT||LA183_0==VOID||LA183_0==LPAREN||LA183_0==LBRACE||(LA183_0>=BANG && LA183_0<=TILDE)||(LA183_0>=PLUSPLUS && LA183_0<=SUB)||LA183_0==MONKEYS_AT||LA183_0==128) ) {
                alt183=1;
            }
            else if ( (LA183_0==RBRACE) ) {
                alt183=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }
            switch (alt183) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5497:9: ( elementValues )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5497:9: ( elementValues )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5498:13: elementValues
                    {
                    pushFollow(FOLLOW_elementValues_in_optionalElementValues25172);
                    elementValues290=elementValues();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = elementValues290;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5504:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5504:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5505:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAnnotationValueListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalElementValues"


    // $ANTLR start "elementValueArrayInitializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5521:1: elementValueArrayInitializer returns [NodeUnion<? extends AnnotationArrayValueNode> ret] : ( splice[AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalElementValues '}' );
    public final NodeUnion<? extends AnnotationArrayValueNode> elementValueArrayInitializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationArrayValueNode> ret = null;

        NodeUnion<? extends Node> splice291 = null;

        NodeUnion<? extends AnnotationValueListNode> optionalElementValues292 = null;



                    ruleStart("elementValueArrayInitializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5529:5: ( splice[AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalElementValues '}' )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt184=1;
            }
            else if ( (LA184_0==LBRACE) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5530:9: splice[AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_elementValueArrayInitializer25321);
                    splice291=splice(AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice291 != null) // TODO: fix this with error nodes
                                      ret = splice291.castNodeType(factory, AnnotationArrayValueNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5536:9: '{' optionalElementValues '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_elementValueArrayInitializer25348); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalElementValues_in_elementValueArrayInitializer25358);
                    optionalElementValues292=optionalElementValues();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_elementValueArrayInitializer25368); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeAnnotationArrayValueNodeWithUnions(optionalElementValues292));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "elementValueArrayInitializer"


    // $ANTLR start "annotationTypeDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5544:1: annotationTypeDeclaration returns [NodeUnion<? extends AnnotationDeclarationNode> ret] : ( splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationModifiers '@' 'interface' id= identifier annotationTypeBody );
    public final NodeUnion<? extends AnnotationDeclarationNode> annotationTypeDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice293 = null;

        NodeUnion<? extends AnnotationModifiersNode> annotationModifiers294 = null;

        NodeUnion<? extends AnnotationBodyNode> annotationTypeBody295 = null;

        NodeUnion<JavadocNode> javadoc296 = null;



                    ruleStart("annotationTypeDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5555:5: ( splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationModifiers '@' 'interface' id= identifier annotationTypeBody )
            int alt185=2;
            alt185 = dfa185.predict(input);
            switch (alt185) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5556:9: splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotationTypeDeclaration25451);
                    splice293=splice(AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice293 != null) // TODO: fix this with error nodes
                                      ret = splice293.castNodeType(factory, AnnotationDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5562:9: javadoc annotationModifiers '@' 'interface' id= identifier annotationTypeBody
                    {
                    pushFollow(FOLLOW_javadoc_in_annotationTypeDeclaration25478);
                    javadoc296=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_annotationModifiers_in_annotationTypeDeclaration25480);
                    annotationModifiers294=annotationModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_annotationTypeDeclaration25482); if (state.failed) return ret;
                    match(input,INTERFACE,FOLLOW_INTERFACE_in_annotationTypeDeclaration25492); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_annotationTypeDeclaration25504);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_annotationTypeBody_in_annotationTypeDeclaration25514);
                    annotationTypeBody295=annotationTypeBody();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeAnnotationDeclarationNodeWithUnions(
                                          annotationModifiers294,
                                          annotationTypeBody295,
                                          (id!=null?id.ret:null),
                                          javadoc296));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationTypeDeclaration"


    // $ANTLR start "annotationTypeBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5575:1: annotationTypeBody returns [NodeUnion<? extends AnnotationBodyNode> ret] : ( splice[AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalAnnotationTypeElementDeclarations '}' );
    public final NodeUnion<? extends AnnotationBodyNode> annotationTypeBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationBodyNode> ret = null;

        NodeUnion<? extends Node> splice297 = null;

        NodeUnion<? extends AnnotationMemberListNode> optionalAnnotationTypeElementDeclarations298 = null;



                    ruleStart("annotationTypeBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5583:5: ( splice[AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalAnnotationTypeElementDeclarations '}' )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt186=1;
            }
            else if ( (LA186_0==LBRACE) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5584:9: splice[AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotationTypeBody25595);
                    splice297=splice(AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice297 != null) // TODO: fix this with error nodes
                                      ret = splice297.castNodeType(factory, AnnotationBodyNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5590:9: '{' optionalAnnotationTypeElementDeclarations '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_annotationTypeBody25622); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalAnnotationTypeElementDeclarations_in_annotationTypeBody25632);
                    optionalAnnotationTypeElementDeclarations298=optionalAnnotationTypeElementDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,RBRACE,FOLLOW_RBRACE_in_annotationTypeBody25642); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeAnnotationBodyNodeWithUnions(
                                              optionalAnnotationTypeElementDeclarations298));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationTypeBody"


    // $ANTLR start "annotationTypeElementDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5599:1: annotationTypeElementDeclarations returns [NodeUnion<? extends AnnotationMemberListNode> ret] : ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* ) ) ;
    public final NodeUnion<? extends AnnotationMemberListNode> annotationTypeElementDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMemberListNode> ret = null;

        BsjAntlrParser.annotationTypeElementDeclaration_return a = null;

        BsjAntlrParser.annotationTypeElementDeclaration_return b = null;

        NodeUnion<? extends Node> splice299 = null;



                    ruleStart("annotationTypeElementDeclarations");
                    List<NodeUnion<? extends AnnotationMemberNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5608:5: ( ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5609:9: ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5609:9: ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* ) )
            int alt188=2;
            alt188 = dfa188.predict(input);
            switch (alt188) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5610:13: splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotationTypeElementDeclarations25738);
                    splice299=splice(AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice299 != null) // TODO: fix this with error nodes
                                          ret = splice299.castNodeType(factory, AnnotationMemberListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5616:13: (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5616:13: (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5617:17: a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends AnnotationMemberNode>>();
                                      
                    }
                    pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations25809);
                    a=annotationTypeElementDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "annotationTypeElementDeclaration", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5632:11: (b= annotationTypeElementDeclaration )*
                    loop187:
                    do {
                        int alt187=2;
                        int LA187_0 = input.LA(1);

                        if ( (LA187_0==IDENTIFIER||LA187_0==METAPROGRAM_START||LA187_0==ABSTRACT||LA187_0==BOOLEAN||LA187_0==BYTE||(LA187_0>=CHAR && LA187_0<=CLASS)||LA187_0==DOUBLE||(LA187_0>=ENUM && LA187_0<=FINAL)||LA187_0==FLOAT||(LA187_0>=INT && LA187_0<=NATIVE)||(LA187_0>=PRIVATE && LA187_0<=PUBLIC)||(LA187_0>=SHORT && LA187_0<=STRICTFP)||LA187_0==SYNCHRONIZED||LA187_0==TRANSIENT||LA187_0==VOLATILE||LA187_0==SEMI||LA187_0==MONKEYS_AT||LA187_0==128) ) {
                            alt187=1;
                        }


                        switch (alt187) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5633:21: b= annotationTypeElementDeclaration
                    	    {
                    	    pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations25857);
                    	    b=annotationTypeElementDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "annotationTypeElementDeclaration", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop187;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeAnnotationMemberListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationTypeElementDeclarations"


    // $ANTLR start "optionalAnnotationTypeElementDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5653:1: optionalAnnotationTypeElementDeclarations returns [NodeUnion<? extends AnnotationMemberListNode> ret] : ( ( annotationTypeElementDeclarations ) | () );
    public final NodeUnion<? extends AnnotationMemberListNode> optionalAnnotationTypeElementDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMemberListNode> ret = null;

        NodeUnion<? extends AnnotationMemberListNode> annotationTypeElementDeclarations300 = null;



                    ruleStart("optionalAnnotationTypeElementDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5661:5: ( ( annotationTypeElementDeclarations ) | () )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==IDENTIFIER||LA189_0==METAPROGRAM_START||LA189_0==ABSTRACT||LA189_0==BOOLEAN||LA189_0==BYTE||(LA189_0>=CHAR && LA189_0<=CLASS)||LA189_0==DOUBLE||(LA189_0>=ENUM && LA189_0<=FINAL)||LA189_0==FLOAT||(LA189_0>=INT && LA189_0<=NATIVE)||(LA189_0>=PRIVATE && LA189_0<=PUBLIC)||(LA189_0>=SHORT && LA189_0<=STRICTFP)||LA189_0==SYNCHRONIZED||LA189_0==TRANSIENT||LA189_0==VOLATILE||LA189_0==SEMI||LA189_0==MONKEYS_AT||LA189_0==128) ) {
                alt189=1;
            }
            else if ( (LA189_0==RBRACE) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5662:9: ( annotationTypeElementDeclarations )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5662:9: ( annotationTypeElementDeclarations )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5663:13: annotationTypeElementDeclarations
                    {
                    pushFollow(FOLLOW_annotationTypeElementDeclarations_in_optionalAnnotationTypeElementDeclarations26004);
                    annotationTypeElementDeclarations300=annotationTypeElementDeclarations();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = annotationTypeElementDeclarations300;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5669:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5669:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5670:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAnnotationMemberListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalAnnotationTypeElementDeclarations"

    public static class annotationTypeElementDeclaration_return extends ParserRuleReturnScope {
        public NodeUnion<? extends AnnotationMemberNode> ret;
    };

    // $ANTLR start "annotationTypeElementDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5677:1: annotationTypeElementDeclaration returns [NodeUnion<? extends AnnotationMemberNode> ret] : ( annotationMethodDeclaration | constantDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | noOp | {...}? => annotationMemberBsjMetaprogramAnchor );
    public final BsjAntlrParser.annotationTypeElementDeclaration_return annotationTypeElementDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.annotationTypeElementDeclaration_return retval = new BsjAntlrParser.annotationTypeElementDeclaration_return();
        retval.start = input.LT(1);

        NodeUnion<? extends AnnotationMethodDeclarationNode> annotationMethodDeclaration301 = null;

        NodeUnion<? extends ConstantDeclarationNode> constantDeclaration302 = null;

        NodeUnion<? extends ClassDeclarationNode> normalClassDeclaration303 = null;

        NodeUnion<? extends InterfaceDeclarationNode> normalInterfaceDeclaration304 = null;

        NodeUnion<? extends EnumDeclarationNode> enumDeclaration305 = null;

        NodeUnion<? extends AnnotationDeclarationNode> annotationTypeDeclaration306 = null;

        NodeUnion<? extends NoOperationNode> noOp307 = null;

        NodeUnion<? extends AnnotationMemberMetaprogramAnchorNode> annotationMemberBsjMetaprogramAnchor308 = null;



                    ruleStart("annotationTypeElementDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5685:5: ( annotationMethodDeclaration | constantDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | noOp | {...}? => annotationMemberBsjMetaprogramAnchor )
            int alt190=8;
            alt190 = dfa190.predict(input);
            switch (alt190) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5686:9: annotationMethodDeclaration
                    {
                    pushFollow(FOLLOW_annotationMethodDeclaration_in_annotationTypeElementDeclaration26140);
                    annotationMethodDeclaration301=annotationMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = annotationMethodDeclaration301;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5691:9: constantDeclaration
                    {
                    pushFollow(FOLLOW_constantDeclaration_in_annotationTypeElementDeclaration26169);
                    constantDeclaration302=constantDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = constantDeclaration302;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5696:9: normalClassDeclaration
                    {
                    pushFollow(FOLLOW_normalClassDeclaration_in_annotationTypeElementDeclaration26198);
                    normalClassDeclaration303=normalClassDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = normalClassDeclaration303;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5701:9: normalInterfaceDeclaration
                    {
                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementDeclaration26227);
                    normalInterfaceDeclaration304=normalInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = normalInterfaceDeclaration304;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5706:9: enumDeclaration
                    {
                    pushFollow(FOLLOW_enumDeclaration_in_annotationTypeElementDeclaration26256);
                    enumDeclaration305=enumDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = enumDeclaration305;
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5711:9: annotationTypeDeclaration
                    {
                    pushFollow(FOLLOW_annotationTypeDeclaration_in_annotationTypeElementDeclaration26285);
                    annotationTypeDeclaration306=annotationTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = annotationTypeDeclaration306;
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5716:9: noOp
                    {
                    pushFollow(FOLLOW_noOp_in_annotationTypeElementDeclaration26314);
                    noOp307=noOp();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = noOp307;
                              
                    }

                    }
                    break;
                case 8 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5721:9: {...}? => annotationMemberBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "annotationTypeElementDeclaration", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_annotationMemberBsjMetaprogramAnchor_in_annotationTypeElementDeclaration26343);
                    annotationMemberBsjMetaprogramAnchor308=annotationMemberBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = annotationMemberBsjMetaprogramAnchor308;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "annotationTypeElementDeclaration"


    // $ANTLR start "annotationMethodDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5727:1: annotationMethodDeclaration returns [NodeUnion<? extends AnnotationMethodDeclarationNode> ret] : ( splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationMethodModifiers type id= identifier '(' ')' ( 'default' elementValue )? ';' );
    public final NodeUnion<? extends AnnotationMethodDeclarationNode> annotationMethodDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMethodDeclarationNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends Node> splice309 = null;

        NodeUnion<? extends AnnotationMethodModifiersNode> annotationMethodModifiers310 = null;

        NodeUnion<? extends TypeNode> type311 = null;

        BsjAntlrParser.elementValue_return elementValue312 = null;

        NodeUnion<JavadocNode> javadoc313 = null;



                    ruleStart("annotationMethodDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5735:5: ( splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationMethodModifiers type id= identifier '(' ')' ( 'default' elementValue )? ';' )
            int alt192=2;
            alt192 = dfa192.predict(input);
            switch (alt192) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5736:9: splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_annotationMethodDeclaration26424);
                    splice309=splice(AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice309 != null) // TODO: fix this with error nodes
                                      ret = splice309.castNodeType(factory, AnnotationMethodDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5742:9: javadoc annotationMethodModifiers type id= identifier '(' ')' ( 'default' elementValue )? ';'
                    {
                    pushFollow(FOLLOW_javadoc_in_annotationMethodDeclaration26451);
                    javadoc313=javadoc();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_annotationMethodModifiers_in_annotationMethodDeclaration26453);
                    annotationMethodModifiers310=annotationMethodModifiers();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_type_in_annotationMethodDeclaration26463);
                    type311=type();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_annotationMethodDeclaration26475);
                    id=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,LPAREN,FOLLOW_LPAREN_in_annotationMethodDeclaration26485); if (state.failed) return ret;
                    match(input,RPAREN,FOLLOW_RPAREN_in_annotationMethodDeclaration26487); if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5746:9: ( 'default' elementValue )?
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==DEFAULT) ) {
                        alt191=1;
                    }
                    switch (alt191) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5747:13: 'default' elementValue
                            {
                            match(input,DEFAULT,FOLLOW_DEFAULT_in_annotationMethodDeclaration26511); if (state.failed) return ret;
                            pushFollow(FOLLOW_elementValue_in_annotationMethodDeclaration26526);
                            elementValue312=elementValue();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    match(input,SEMI,FOLLOW_SEMI_in_annotationMethodDeclaration26547); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeAnnotationMethodDeclarationNodeWithUnions(
                                      annotationMethodModifiers310,
                                      type311,
                                      (id!=null?id.ret:null),
                                      (elementValue312!=null?elementValue312.ret:null),
                                      javadoc313));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "annotationMethodDeclaration"


    // $ANTLR start "block"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5761:1: block returns [NodeUnion<? extends BlockStatementListNode> ret] : '{' optionalBlockStatementList '}' ;
    public final NodeUnion<? extends BlockStatementListNode> block() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementListNode> ret = null;

        NodeUnion<? extends BlockStatementListNode> optionalBlockStatementList314 = null;



                    ruleStart("block");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5769:5: ( '{' optionalBlockStatementList '}' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5770:9: '{' optionalBlockStatementList '}'
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_block26628); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalBlockStatementList_in_block26638);
            optionalBlockStatementList314=optionalBlockStatementList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RBRACE,FOLLOW_RBRACE_in_block26648); if (state.failed) return ret;
            if (  true  ) {

                          ret = optionalBlockStatementList314;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "block"


    // $ANTLR start "blockStatementList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5778:1: blockStatementList returns [NodeUnion<? extends BlockStatementListNode> ret] : ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= blockStatement (b= blockStatement )* ) ) ;
    public final NodeUnion<? extends BlockStatementListNode> blockStatementList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementListNode> ret = null;

        BsjAntlrParser.blockStatement_return a = null;

        BsjAntlrParser.blockStatement_return b = null;

        NodeUnion<? extends Node> splice315 = null;



                    ruleStart("blockStatementList");
                    List<NodeUnion<? extends BlockStatementNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5787:5: ( ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= blockStatement (b= blockStatement )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5788:9: ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= blockStatement (b= blockStatement )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5788:9: ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= blockStatement (b= blockStatement )* ) )
            int alt194=2;
            alt194 = dfa194.predict(input);
            switch (alt194) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5789:13: splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_blockStatementList26740);
                    splice315=splice(BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice315 != null) // TODO: fix this with error nodes
                                          ret = splice315.castNodeType(factory, BlockStatementListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5795:13: (a= blockStatement (b= blockStatement )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5795:13: (a= blockStatement (b= blockStatement )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5796:17: a= blockStatement (b= blockStatement )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends BlockStatementNode>>();
                                      
                    }
                    pushFollow(FOLLOW_blockStatement_in_blockStatementList26811);
                    a=blockStatement();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "blockStatement", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5811:11: (b= blockStatement )*
                    loop193:
                    do {
                        int alt193=2;
                        alt193 = dfa193.predict(input);
                        switch (alt193) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5812:21: b= blockStatement
                    	    {
                    	    pushFollow(FOLLOW_blockStatement_in_blockStatementList26859);
                    	    b=blockStatement();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "blockStatement", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop193;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeBlockStatementListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "blockStatementList"


    // $ANTLR start "optionalBlockStatementList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5832:1: optionalBlockStatementList returns [NodeUnion<? extends BlockStatementListNode> ret] : ( ( blockStatementList ) | () );
    public final NodeUnion<? extends BlockStatementListNode> optionalBlockStatementList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementListNode> ret = null;

        NodeUnion<? extends BlockStatementListNode> blockStatementList316 = null;



                    ruleStart("optionalBlockStatementList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5840:5: ( ( blockStatementList ) | () )
            int alt195=2;
            alt195 = dfa195.predict(input);
            switch (alt195) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5841:9: ( blockStatementList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5841:9: ( blockStatementList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5842:13: blockStatementList
                    {
                    pushFollow(FOLLOW_blockStatementList_in_optionalBlockStatementList27006);
                    blockStatementList316=blockStatementList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = blockStatementList316;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5848:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5848:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5849:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeBlockStatementListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalBlockStatementList"

    public static class blockStatement_return extends ParserRuleReturnScope {
        public NodeUnion<? extends BlockStatementNode> ret;
    };

    // $ANTLR start "blockStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5857:1: blockStatement returns [NodeUnion<? extends BlockStatementNode> ret] : ( splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)] | ( localVariableHeader )=> localVariableDeclarationStatement | ( typeHeader )=> localClassDeclaration | statement | {...}? => blockStatementBsjMetaprogramAnchor );
    public final BsjAntlrParser.blockStatement_return blockStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.blockStatement_return retval = new BsjAntlrParser.blockStatement_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice317 = null;

        NodeUnion<? extends LocalVariableDeclarationNode> localVariableDeclarationStatement318 = null;

        NodeUnion<? extends LocalClassDeclarationNode> localClassDeclaration319 = null;

        NodeUnion<? extends StatementNode> statement320 = null;

        NodeUnion<? extends BlockStatementMetaprogramAnchorNode> blockStatementBsjMetaprogramAnchor321 = null;



                    ruleStart("blockStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5865:5: ( splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)] | ( localVariableHeader )=> localVariableDeclarationStatement | ( typeHeader )=> localClassDeclaration | statement | {...}? => blockStatementBsjMetaprogramAnchor )
            int alt196=5;
            alt196 = dfa196.predict(input);
            switch (alt196) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5866:9: splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_blockStatement27143);
                    splice317=splice(BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice317 != null) // TODO: fix this with error nodes
                                      retval.ret = splice317.castNodeType(factory, BlockStatementNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5872:9: ( localVariableHeader )=> localVariableDeclarationStatement
                    {
                    pushFollow(FOLLOW_localVariableDeclarationStatement_in_blockStatement27174);
                    localVariableDeclarationStatement318=localVariableDeclarationStatement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = localVariableDeclarationStatement318;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5877:9: ( typeHeader )=> localClassDeclaration
                    {
                    pushFollow(FOLLOW_localClassDeclaration_in_blockStatement27207);
                    localClassDeclaration319=localClassDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = localClassDeclaration319;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5882:9: statement
                    {
                    pushFollow(FOLLOW_statement_in_blockStatement27236);
                    statement320=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = statement320;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5887:9: {...}? => blockStatementBsjMetaprogramAnchor
                    {
                    if ( !((configuration.getMetaprogramsSupported())) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "blockStatement", "configuration.getMetaprogramsSupported()");
                    }
                    pushFollow(FOLLOW_blockStatementBsjMetaprogramAnchor_in_blockStatement27265);
                    blockStatementBsjMetaprogramAnchor321=blockStatementBsjMetaprogramAnchor();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = blockStatementBsjMetaprogramAnchor321;
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "blockStatement"


    // $ANTLR start "localVariableDeclarationStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5896:1: localVariableDeclarationStatement returns [NodeUnion<? extends LocalVariableDeclarationNode> ret] : ( splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration ';' );
    public final NodeUnion<? extends LocalVariableDeclarationNode> localVariableDeclarationStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalVariableDeclarationNode> ret = null;

        NodeUnion<? extends Node> splice322 = null;

        NodeUnion<? extends LocalVariableDeclarationNode> localVariableDeclaration323 = null;



                    ruleStart("localVariableDeclarationStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5904:5: ( splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration ';' )
            int alt197=2;
            alt197 = dfa197.predict(input);
            switch (alt197) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5905:9: splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_localVariableDeclarationStatement27354);
                    splice322=splice(LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice322 != null) // TODO: fix this with error nodes
                                      ret = splice322.castNodeType(factory, LocalVariableDeclarationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5911:9: localVariableDeclaration ';'
                    {
                    pushFollow(FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement27381);
                    localVariableDeclaration323=localVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,SEMI,FOLLOW_SEMI_in_localVariableDeclarationStatement27383); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = localVariableDeclaration323;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "localVariableDeclarationStatement"


    // $ANTLR start "localVariableDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5921:1: localVariableDeclaration returns [NodeUnion<? extends LocalVariableDeclarationNode> ret] : variableModifiers type variableDeclarators ;
    public final NodeUnion<? extends LocalVariableDeclarationNode> localVariableDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalVariableDeclarationNode> ret = null;

        NodeUnion<? extends VariableModifiersNode> variableModifiers324 = null;

        NodeUnion<? extends TypeNode> type325 = null;

        NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators326 = null;



                    ruleStart("localVariableDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5929:5: ( variableModifiers type variableDeclarators )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5930:9: variableModifiers type variableDeclarators
            {
            pushFollow(FOLLOW_variableModifiers_in_localVariableDeclaration27468);
            variableModifiers324=variableModifiers();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_type_in_localVariableDeclaration27470);
            type325=type();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_variableDeclarators_in_localVariableDeclaration27480);
            variableDeclarators326=variableDeclarators();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeLocalVariableDeclarationNodeWithUnions(
                                      variableModifiers324,
                                      type325,
                                      variableDeclarators326));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "localVariableDeclaration"


    // $ANTLR start "statement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5940:1: statement returns [NodeUnion<? extends StatementNode> ret] : ( splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()] | ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement ) );
    public final NodeUnion<? extends StatementNode> statement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StatementNode> ret = null;

        NodeUnion<? extends Node> splice327 = null;

        NodeUnion<? extends BlockNode> blockAsStatement328 = null;

        NodeUnion<? extends AssertStatementNode> assertStatement329 = null;

        NodeUnion<? extends IfNode> ifStatement330 = null;

        NodeUnion<? extends StatementNode> forStatement331 = null;

        NodeUnion<? extends WhileLoopNode> whileStatement332 = null;

        NodeUnion<? extends DoWhileLoopNode> doWhileStatement333 = null;

        NodeUnion<? extends TryNode> tryStatement334 = null;

        NodeUnion<? extends SwitchNode> switchStatement335 = null;

        NodeUnion<? extends SynchronizedNode> synchronizedStatement336 = null;

        NodeUnion<? extends ReturnNode> returnStatement337 = null;

        NodeUnion<? extends ThrowNode> throwStatement338 = null;

        NodeUnion<? extends BreakNode> breakStatement339 = null;

        NodeUnion<? extends ContinueNode> continueStatement340 = null;

        NodeUnion<? extends ExpressionStatementNode> expressionStatement341 = null;

        NodeUnion<? extends LabeledStatementNode> labeledStatement342 = null;

        NodeUnion<? extends NoOperationNode> noOpStatement343 = null;



                    ruleStart("statement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5948:5: ( splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()] | ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement ) )
            int alt199=2;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5949:9: splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_statement27558);
                    splice327=splice(StatementNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice327 != null) // TODO: fix this with error nodes
                                      ret = splice327.castNodeType(factory, StatementNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5955:9: ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5955:9: ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement )
                    int alt198=16;
                    alt198 = dfa198.predict(input);
                    switch (alt198) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5956:13: blockAsStatement
                            {
                            pushFollow(FOLLOW_blockAsStatement_in_statement27599);
                            blockAsStatement328=blockAsStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = blockAsStatement328;
                                          
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5961:13: assertStatement
                            {
                            pushFollow(FOLLOW_assertStatement_in_statement27637);
                            assertStatement329=assertStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = assertStatement329;
                                          
                            }

                            }
                            break;
                        case 3 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5966:13: ifStatement
                            {
                            pushFollow(FOLLOW_ifStatement_in_statement27675);
                            ifStatement330=ifStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = ifStatement330;
                                          
                            }

                            }
                            break;
                        case 4 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5971:13: forStatement
                            {
                            pushFollow(FOLLOW_forStatement_in_statement27713);
                            forStatement331=forStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = forStatement331;
                                          
                            }

                            }
                            break;
                        case 5 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5976:13: whileStatement
                            {
                            pushFollow(FOLLOW_whileStatement_in_statement27751);
                            whileStatement332=whileStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = whileStatement332;
                                          
                            }

                            }
                            break;
                        case 6 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5981:13: doWhileStatement
                            {
                            pushFollow(FOLLOW_doWhileStatement_in_statement27789);
                            doWhileStatement333=doWhileStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = doWhileStatement333;
                                          
                            }

                            }
                            break;
                        case 7 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5986:13: tryStatement
                            {
                            pushFollow(FOLLOW_tryStatement_in_statement27827);
                            tryStatement334=tryStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = tryStatement334;
                                          
                            }

                            }
                            break;
                        case 8 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5991:13: switchStatement
                            {
                            pushFollow(FOLLOW_switchStatement_in_statement27865);
                            switchStatement335=switchStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = switchStatement335;
                                          
                            }

                            }
                            break;
                        case 9 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5996:13: synchronizedStatement
                            {
                            pushFollow(FOLLOW_synchronizedStatement_in_statement27903);
                            synchronizedStatement336=synchronizedStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = synchronizedStatement336;
                                          
                            }

                            }
                            break;
                        case 10 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6001:13: returnStatement
                            {
                            pushFollow(FOLLOW_returnStatement_in_statement27941);
                            returnStatement337=returnStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = returnStatement337;
                                          
                            }

                            }
                            break;
                        case 11 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6006:13: throwStatement
                            {
                            pushFollow(FOLLOW_throwStatement_in_statement27979);
                            throwStatement338=throwStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = throwStatement338;
                                          
                            }

                            }
                            break;
                        case 12 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6011:13: breakStatement
                            {
                            pushFollow(FOLLOW_breakStatement_in_statement28017);
                            breakStatement339=breakStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = breakStatement339;
                                          
                            }

                            }
                            break;
                        case 13 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6016:13: continueStatement
                            {
                            pushFollow(FOLLOW_continueStatement_in_statement28055);
                            continueStatement340=continueStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = continueStatement340;
                                          
                            }

                            }
                            break;
                        case 14 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6021:13: expressionStatement
                            {
                            pushFollow(FOLLOW_expressionStatement_in_statement28093);
                            expressionStatement341=expressionStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = expressionStatement341;
                                          
                            }

                            }
                            break;
                        case 15 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6026:13: labeledStatement
                            {
                            pushFollow(FOLLOW_labeledStatement_in_statement28131);
                            labeledStatement342=labeledStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = labeledStatement342;
                                          
                            }

                            }
                            break;
                        case 16 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6031:13: noOpStatement
                            {
                            pushFollow(FOLLOW_noOpStatement_in_statement28169);
                            noOpStatement343=noOpStatement();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = noOpStatement343;
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "statement"


    // $ANTLR start "blockAsStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6039:1: blockAsStatement returns [NodeUnion<? extends BlockNode> ret] : optionalMetaAnnotationList block ;
    public final NodeUnion<? extends BlockNode> blockAsStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockNode> ret = null;

        NodeUnion<? extends BlockStatementListNode> block344 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList345 = null;



                    ruleStart("blockAsStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6047:5: ( optionalMetaAnnotationList block )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6048:9: optionalMetaAnnotationList block
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_blockAsStatement28262);
            optionalMetaAnnotationList345=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_block_in_blockAsStatement28272);
            block344=block();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeBlockNodeWithUnions(block344, optionalMetaAnnotationList345));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "blockAsStatement"


    // $ANTLR start "assertStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6055:1: assertStatement returns [NodeUnion<? extends AssertStatementNode> ret] : optionalMetaAnnotationList 'assert' e1= expression ( ':' e2= expression )? ';' ;
    public final NodeUnion<? extends AssertStatementNode> assertStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AssertStatementNode> ret = null;

        BsjAntlrParser.expression_return e1 = null;

        BsjAntlrParser.expression_return e2 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList346 = null;



                    ruleStart("assertStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6063:5: ( optionalMetaAnnotationList 'assert' e1= expression ( ':' e2= expression )? ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6064:9: optionalMetaAnnotationList 'assert' e1= expression ( ':' e2= expression )? ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_assertStatement28350);
            optionalMetaAnnotationList346=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,ASSERT,FOLLOW_ASSERT_in_assertStatement28360); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_assertStatement28364);
            e1=expression();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6066:9: ( ':' e2= expression )?
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==COLON) ) {
                alt200=1;
            }
            switch (alt200) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6067:13: ':' e2= expression
                    {
                    match(input,COLON,FOLLOW_COLON_in_assertStatement28389); if (state.failed) return ret;
                    pushFollow(FOLLOW_expression_in_assertStatement28393);
                    e2=expression();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_assertStatement28414); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeAssertStatementNodeWithUnions(
                              (e1!=null?e1.ret:null),
                              (e2!=null?e2.ret:null),
                              optionalMetaAnnotationList346));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "assertStatement"


    // $ANTLR start "ifStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6078:1: ifStatement returns [NodeUnion<? extends IfNode> ret] : optionalMetaAnnotationList 'if' parExpression s1= statement ( 'else' s2= statement )? ;
    public final NodeUnion<? extends IfNode> ifStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IfNode> ret = null;

        NodeUnion<? extends StatementNode> s1 = null;

        NodeUnion<? extends StatementNode> s2 = null;

        NodeUnion<? extends ExpressionNode> parExpression347 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList348 = null;



                    ruleStart("ifStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6086:5: ( optionalMetaAnnotationList 'if' parExpression s1= statement ( 'else' s2= statement )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6087:9: optionalMetaAnnotationList 'if' parExpression s1= statement ( 'else' s2= statement )?
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_ifStatement28503);
            optionalMetaAnnotationList348=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,IF,FOLLOW_IF_in_ifStatement28513); if (state.failed) return ret;
            pushFollow(FOLLOW_parExpression_in_ifStatement28515);
            parExpression347=parExpression();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_ifStatement28519);
            s1=statement();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6089:9: ( 'else' s2= statement )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==ELSE) ) {
                int LA201_1 = input.LA(2);

                if ( (synpred277_BsjAntlr()) ) {
                    alt201=1;
                }
            }
            switch (alt201) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6090:13: 'else' s2= statement
                    {
                    match(input,ELSE,FOLLOW_ELSE_in_ifStatement28544); if (state.failed) return ret;
                    pushFollow(FOLLOW_statement_in_ifStatement28548);
                    s2=statement();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeIfNodeWithUnions(
                              parExpression347,
                              s1,
                              s2,
                              optionalMetaAnnotationList348));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "ifStatement"


    // $ANTLR start "forStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6101:1: forStatement returns [NodeUnion<? extends StatementNode> ret] : ( enhancedForStatement | basicForStatement ) ;
    public final NodeUnion<? extends StatementNode> forStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StatementNode> ret = null;

        NodeUnion<? extends EnhancedForLoopNode> enhancedForStatement349 = null;

        NodeUnion<? extends ForLoopNode> basicForStatement350 = null;



                    ruleStart("forStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6109:5: ( ( enhancedForStatement | basicForStatement ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6110:9: ( enhancedForStatement | basicForStatement )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6110:9: ( enhancedForStatement | basicForStatement )
            int alt202=2;
            switch ( input.LA(1) ) {
            case 128:
                {
                int LA202_1 = input.LA(2);

                if ( (((synpred278_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred278_BsjAntlr())) ) {
                    alt202=1;
                }
                else if ( (true) ) {
                    alt202=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 202, 1, input);

                    throw nvae;
                }
                }
                break;
            case MONKEYS_AT:
                {
                int LA202_2 = input.LA(2);

                if ( (synpred278_BsjAntlr()) ) {
                    alt202=1;
                }
                else if ( (true) ) {
                    alt202=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 202, 2, input);

                    throw nvae;
                }
                }
                break;
            case FOR:
                {
                int LA202_3 = input.LA(2);

                if ( (synpred278_BsjAntlr()) ) {
                    alt202=1;
                }
                else if ( (true) ) {
                    alt202=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 202, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }

            switch (alt202) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6111:13: enhancedForStatement
                    {
                    pushFollow(FOLLOW_enhancedForStatement_in_forStatement28661);
                    enhancedForStatement349=enhancedForStatement();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = enhancedForStatement349;
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6116:13: basicForStatement
                    {
                    pushFollow(FOLLOW_basicForStatement_in_forStatement28699);
                    basicForStatement350=basicForStatement();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = basicForStatement350;
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "forStatement"


    // $ANTLR start "enhancedForStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6124:1: enhancedForStatement returns [NodeUnion<? extends EnhancedForLoopNode> ret] : optionalMetaAnnotationList 'for' '(' variableModifiers type id= identifier ':' expression ')' statement ;
    public final NodeUnion<? extends EnhancedForLoopNode> enhancedForStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnhancedForLoopNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends VariableModifiersNode> variableModifiers351 = null;

        NodeUnion<? extends TypeNode> type352 = null;

        BsjAntlrParser.expression_return expression353 = null;

        NodeUnion<? extends StatementNode> statement354 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList355 = null;



                    ruleStart("enhancedForStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6132:5: ( optionalMetaAnnotationList 'for' '(' variableModifiers type id= identifier ':' expression ')' statement )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6133:9: optionalMetaAnnotationList 'for' '(' variableModifiers type id= identifier ':' expression ')' statement
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_enhancedForStatement28792);
            optionalMetaAnnotationList355=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,FOR,FOLLOW_FOR_in_enhancedForStatement28802); if (state.failed) return ret;
            match(input,LPAREN,FOLLOW_LPAREN_in_enhancedForStatement28803); if (state.failed) return ret;
            pushFollow(FOLLOW_variableModifiers_in_enhancedForStatement28805);
            variableModifiers351=variableModifiers();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_type_in_enhancedForStatement28807);
            type352=type();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_enhancedForStatement28811);
            id=identifier();

            state._fsp--;
            if (state.failed) return ret;
            match(input,COLON,FOLLOW_COLON_in_enhancedForStatement28813); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_enhancedForStatement28815);
            expression353=expression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_enhancedForStatement28817); if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_enhancedForStatement28819);
            statement354=statement();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeEnhancedForLoopNodeWithUnions(
                                  factory.makeNormalNodeUnion(
                                      factory.makeVariableNodeWithUnions(
                                              variableModifiers351, 
                                              type352,
                                              (id!=null?id.ret:null))),
                                  (expression353!=null?expression353.ret:null),
                                  statement354,
                                  optionalMetaAnnotationList355));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "enhancedForStatement"


    // $ANTLR start "basicForStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6148:1: basicForStatement returns [NodeUnion<? extends ForLoopNode> ret] : optionalMetaAnnotationList 'for' '(' ( forInit )? ';' ( expression )? ';' optionalStatementExpressionList ')' statement ;
    public final NodeUnion<? extends ForLoopNode> basicForStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ForLoopNode> ret = null;

        NodeUnion<? extends ForInitializerNode> forInit356 = null;

        BsjAntlrParser.expression_return expression357 = null;

        NodeUnion<? extends StatementExpressionListNode> optionalStatementExpressionList358 = null;

        NodeUnion<? extends StatementNode> statement359 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList360 = null;



                    ruleStart("basicForStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6156:5: ( optionalMetaAnnotationList 'for' '(' ( forInit )? ';' ( expression )? ';' optionalStatementExpressionList ')' statement )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6157:9: optionalMetaAnnotationList 'for' '(' ( forInit )? ';' ( expression )? ';' optionalStatementExpressionList ')' statement
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_basicForStatement28905);
            optionalMetaAnnotationList360=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,FOR,FOLLOW_FOR_in_basicForStatement28915); if (state.failed) return ret;
            match(input,LPAREN,FOLLOW_LPAREN_in_basicForStatement28925); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6160:9: ( forInit )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==CODELITERAL_START||(LA203_0>=SUPER && LA203_0<=IDENTIFIER)||LA203_0==ABSTRACT||LA203_0==BOOLEAN||LA203_0==BYTE||LA203_0==CHAR||LA203_0==DOUBLE||LA203_0==FINAL||LA203_0==FLOAT||LA203_0==INT||(LA203_0>=LONG && LA203_0<=NATIVE)||(LA203_0>=PRIVATE && LA203_0<=PUBLIC)||(LA203_0>=SHORT && LA203_0<=STRICTFP)||LA203_0==SYNCHRONIZED||LA203_0==TRANSIENT||(LA203_0>=VOID && LA203_0<=VOLATILE)||LA203_0==LPAREN||(LA203_0>=BANG && LA203_0<=TILDE)||(LA203_0>=PLUSPLUS && LA203_0<=SUB)||LA203_0==MONKEYS_AT||LA203_0==128) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: forInit
                    {
                    pushFollow(FOLLOW_forInit_in_basicForStatement28936);
                    forInit356=forInit();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_basicForStatement28947); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6162:9: ( expression )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {
                alt204=1;
            }
            else if ( (LA204_0==CODELITERAL_START||(LA204_0>=SUPER && LA204_0<=IDENTIFIER)||LA204_0==BOOLEAN||LA204_0==BYTE||LA204_0==CHAR||LA204_0==DOUBLE||LA204_0==FLOAT||LA204_0==INT||LA204_0==LONG||LA204_0==SHORT||LA204_0==VOID||LA204_0==LPAREN||(LA204_0>=BANG && LA204_0<=TILDE)||(LA204_0>=PLUSPLUS && LA204_0<=SUB)) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: expression
                    {
                    pushFollow(FOLLOW_expression_in_basicForStatement28958);
                    expression357=expression();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_basicForStatement28969); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalStatementExpressionList_in_basicForStatement28979);
            optionalStatementExpressionList358=optionalStatementExpressionList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_basicForStatement28989); if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_basicForStatement28999);
            statement359=statement();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeForLoopNodeWithUnions(
                                  forInit356, 
                                  (expression357!=null?expression357.ret:null),
                                  optionalStatementExpressionList358,
                                  statement359,
                                  optionalMetaAnnotationList360));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "basicForStatement"


    // $ANTLR start "whileStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6177:1: whileStatement returns [NodeUnion<? extends WhileLoopNode> ret] : optionalMetaAnnotationList 'while' parExpression s= statement ;
    public final NodeUnion<? extends WhileLoopNode> whileStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends WhileLoopNode> ret = null;

        NodeUnion<? extends StatementNode> s = null;

        NodeUnion<? extends ExpressionNode> parExpression361 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList362 = null;



                    ruleStart("whileStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6185:5: ( optionalMetaAnnotationList 'while' parExpression s= statement )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6186:9: optionalMetaAnnotationList 'while' parExpression s= statement
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_whileStatement29094);
            optionalMetaAnnotationList362=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,WHILE,FOLLOW_WHILE_in_whileStatement29104); if (state.failed) return ret;
            pushFollow(FOLLOW_parExpression_in_whileStatement29106);
            parExpression361=parExpression();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_whileStatement29110);
            s=statement();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeWhileLoopNodeWithUnions(
                              parExpression361,
                              s,
                              optionalMetaAnnotationList362));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "whileStatement"


    // $ANTLR start "doWhileStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6196:1: doWhileStatement returns [NodeUnion<? extends DoWhileLoopNode> ret] : optionalMetaAnnotationList 'do' s= statement 'while' parExpression ';' ;
    public final NodeUnion<? extends DoWhileLoopNode> doWhileStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DoWhileLoopNode> ret = null;

        NodeUnion<? extends StatementNode> s = null;

        NodeUnion<? extends ExpressionNode> parExpression363 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList364 = null;



                    ruleStart("doWhileStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6204:5: ( optionalMetaAnnotationList 'do' s= statement 'while' parExpression ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6205:9: optionalMetaAnnotationList 'do' s= statement 'while' parExpression ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_doWhileStatement29188);
            optionalMetaAnnotationList364=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,DO,FOLLOW_DO_in_doWhileStatement29198); if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_doWhileStatement29202);
            s=statement();

            state._fsp--;
            if (state.failed) return ret;
            match(input,WHILE,FOLLOW_WHILE_in_doWhileStatement29204); if (state.failed) return ret;
            pushFollow(FOLLOW_parExpression_in_doWhileStatement29206);
            parExpression363=parExpression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_doWhileStatement29208); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeDoWhileLoopNodeWithUnions(
                              parExpression363,
                              s,
                              optionalMetaAnnotationList364));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "doWhileStatement"


    // $ANTLR start "tryStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6215:1: tryStatement returns [NodeUnion<? extends TryNode> ret] : optionalMetaAnnotationList 'try' b= block (c= catches 'finally' fb= block | c= catches | 'finally' fb= block ) ;
    public final NodeUnion<? extends TryNode> tryStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TryNode> ret = null;

        NodeUnion<? extends BlockStatementListNode> b = null;

        NodeUnion<? extends CatchListNode> c = null;

        NodeUnion<? extends BlockStatementListNode> fb = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList365 = null;



                    ruleStart("tryStatement");
                    NodeUnion<? extends CatchListNode> catchList = null;
                    NodeUnion<? extends BlockStatementListNode> finallyBlock = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6225:5: ( optionalMetaAnnotationList 'try' b= block (c= catches 'finally' fb= block | c= catches | 'finally' fb= block ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6226:9: optionalMetaAnnotationList 'try' b= block (c= catches 'finally' fb= block | c= catches | 'finally' fb= block )
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_tryStatement29289);
            optionalMetaAnnotationList365=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,TRY,FOLLOW_TRY_in_tryStatement29299); if (state.failed) return ret;
            pushFollow(FOLLOW_block_in_tryStatement29303);
            b=block();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6228:9: (c= catches 'finally' fb= block | c= catches | 'finally' fb= block )
            int alt205=3;
            switch ( input.LA(1) ) {
            case 128:
                {
                int LA205_1 = input.LA(2);

                if ( (((synpred281_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred281_BsjAntlr())) ) {
                    alt205=1;
                }
                else if ( ((synpred282_BsjAntlr()||(synpred282_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {
                    alt205=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 205, 1, input);

                    throw nvae;
                }
                }
                break;
            case CATCH:
                {
                int LA205_2 = input.LA(2);

                if ( (synpred281_BsjAntlr()) ) {
                    alt205=1;
                }
                else if ( (synpred282_BsjAntlr()) ) {
                    alt205=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 205, 2, input);

                    throw nvae;
                }
                }
                break;
            case FINALLY:
                {
                alt205=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 205, 0, input);

                throw nvae;
            }

            switch (alt205) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6229:13: c= catches 'finally' fb= block
                    {
                    pushFollow(FOLLOW_catches_in_tryStatement29329);
                    c=catches();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,FINALLY,FOLLOW_FINALLY_in_tryStatement29331); if (state.failed) return ret;
                    pushFollow(FOLLOW_block_in_tryStatement29335);
                    fb=block();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      catchList = c;
                                      finallyBlock = fb;
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6235:13: c= catches
                    {
                    pushFollow(FOLLOW_catches_in_tryStatement29378);
                    c=catches();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      catchList = c;
                                      finallyBlock = null;
                                  
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6241:13: 'finally' fb= block
                    {
                    match(input,FINALLY,FOLLOW_FINALLY_in_tryStatement29431); if (state.failed) return ret;
                    pushFollow(FOLLOW_block_in_tryStatement29435);
                    fb=block();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      catchList = factory.makeNormalNodeUnion(factory.makeCatchListNode());
                                      finallyBlock = fb;
                                  
                    }

                    }
                    break;

            }

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeTryNodeWithUnions(
                                  b,
                                  catchList,
                                  finallyBlock,
                                  optionalMetaAnnotationList365));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "tryStatement"


    // $ANTLR start "switchStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6256:1: switchStatement returns [NodeUnion<? extends SwitchNode> ret] : optionalMetaAnnotationList 'switch' '(' expression ')' switchBlock ;
    public final NodeUnion<? extends SwitchNode> switchStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SwitchNode> ret = null;

        BsjAntlrParser.expression_return expression366 = null;

        NodeUnion<? extends CaseListNode> switchBlock367 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList368 = null;



                    ruleStart("switchStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6264:5: ( optionalMetaAnnotationList 'switch' '(' expression ')' switchBlock )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6265:9: optionalMetaAnnotationList 'switch' '(' expression ')' switchBlock
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_switchStatement29557);
            optionalMetaAnnotationList368=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SWITCH,FOLLOW_SWITCH_in_switchStatement29567); if (state.failed) return ret;
            match(input,LPAREN,FOLLOW_LPAREN_in_switchStatement29577); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_switchStatement29587);
            expression366=expression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_switchStatement29597); if (state.failed) return ret;
            pushFollow(FOLLOW_switchBlock_in_switchStatement29607);
            switchBlock367=switchBlock();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeSwitchNodeWithUnions(
                                  (expression366!=null?expression366.ret:null),
                                  switchBlock367,
                                  optionalMetaAnnotationList368));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "switchStatement"


    // $ANTLR start "synchronizedStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6279:1: synchronizedStatement returns [NodeUnion<? extends SynchronizedNode> ret] : optionalMetaAnnotationList 'synchronized' parExpression block ;
    public final NodeUnion<? extends SynchronizedNode> synchronizedStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SynchronizedNode> ret = null;

        NodeUnion<? extends ExpressionNode> parExpression369 = null;

        NodeUnion<? extends BlockStatementListNode> block370 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList371 = null;



                    ruleStart("synchronizedStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6287:5: ( optionalMetaAnnotationList 'synchronized' parExpression block )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6288:9: optionalMetaAnnotationList 'synchronized' parExpression block
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_synchronizedStatement29685);
            optionalMetaAnnotationList371=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SYNCHRONIZED,FOLLOW_SYNCHRONIZED_in_synchronizedStatement29695); if (state.failed) return ret;
            pushFollow(FOLLOW_parExpression_in_synchronizedStatement29697);
            parExpression369=parExpression();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_block_in_synchronizedStatement29699);
            block370=block();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeSynchronizedNodeWithUnions(
                              parExpression369,
                              block370,
                              optionalMetaAnnotationList371));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "synchronizedStatement"


    // $ANTLR start "returnStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6298:1: returnStatement returns [NodeUnion<? extends ReturnNode> ret] : optionalMetaAnnotationList 'return' ( expression )? ';' ;
    public final NodeUnion<? extends ReturnNode> returnStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReturnNode> ret = null;

        BsjAntlrParser.expression_return expression372 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList373 = null;



                    ruleStart("returnStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6306:5: ( optionalMetaAnnotationList 'return' ( expression )? ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6307:9: optionalMetaAnnotationList 'return' ( expression )? ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_returnStatement29777);
            optionalMetaAnnotationList373=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RETURN,FOLLOW_RETURN_in_returnStatement29787); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6309:9: ( expression )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {
                alt206=1;
            }
            else if ( (LA206_0==CODELITERAL_START||(LA206_0>=SUPER && LA206_0<=IDENTIFIER)||LA206_0==BOOLEAN||LA206_0==BYTE||LA206_0==CHAR||LA206_0==DOUBLE||LA206_0==FLOAT||LA206_0==INT||LA206_0==LONG||LA206_0==SHORT||LA206_0==VOID||LA206_0==LPAREN||(LA206_0>=BANG && LA206_0<=TILDE)||(LA206_0>=PLUSPLUS && LA206_0<=SUB)) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: expression
                    {
                    pushFollow(FOLLOW_expression_in_returnStatement29798);
                    expression372=expression();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_returnStatement29809); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeReturnNodeWithUnions(
                                  (expression372!=null?expression372.ret:null),
                                  optionalMetaAnnotationList373));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "returnStatement"


    // $ANTLR start "throwStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6318:1: throwStatement returns [NodeUnion<? extends ThrowNode> ret] : optionalMetaAnnotationList 'throw' expression ';' ;
    public final NodeUnion<? extends ThrowNode> throwStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ThrowNode> ret = null;

        BsjAntlrParser.expression_return expression374 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList375 = null;



                    ruleStart("throwStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6326:5: ( optionalMetaAnnotationList 'throw' expression ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6327:9: optionalMetaAnnotationList 'throw' expression ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_throwStatement29887);
            optionalMetaAnnotationList375=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,THROW,FOLLOW_THROW_in_throwStatement29897); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_throwStatement29899);
            expression374=expression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_throwStatement29901); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeThrowNodeWithUnions(
                                  (expression374!=null?expression374.ret:null), optionalMetaAnnotationList375));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "throwStatement"


    // $ANTLR start "breakStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6335:1: breakStatement returns [NodeUnion<? extends BreakNode> ret] : optionalMetaAnnotationList 'break' ( identifier )? ';' ;
    public final NodeUnion<? extends BreakNode> breakStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BreakNode> ret = null;

        BsjAntlrParser.identifier_return identifier376 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList377 = null;



                    ruleStart("breakStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6343:5: ( optionalMetaAnnotationList 'break' ( identifier )? ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6344:9: optionalMetaAnnotationList 'break' ( identifier )? ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_breakStatement29979);
            optionalMetaAnnotationList377=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,BREAK,FOLLOW_BREAK_in_breakStatement29989); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6345:17: ( identifier )?
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt207=1;
            }
            else if ( (LA207_0==IDENTIFIER) ) {
                alt207=1;
            }
            switch (alt207) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_breakStatement29991);
                    identifier376=identifier();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_breakStatement29994); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeBreakNodeWithUnions(
                                  (identifier376!=null?identifier376.ret:null),
                                  optionalMetaAnnotationList377));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "breakStatement"


    // $ANTLR start "continueStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6353:1: continueStatement returns [NodeUnion<? extends ContinueNode> ret] : optionalMetaAnnotationList 'continue' ( identifier )? ';' ;
    public final NodeUnion<? extends ContinueNode> continueStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ContinueNode> ret = null;

        BsjAntlrParser.identifier_return identifier378 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList379 = null;



                    ruleStart("continueStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6361:5: ( optionalMetaAnnotationList 'continue' ( identifier )? ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6362:9: optionalMetaAnnotationList 'continue' ( identifier )? ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_continueStatement30072);
            optionalMetaAnnotationList379=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,CONTINUE,FOLLOW_CONTINUE_in_continueStatement30082); if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6363:20: ( identifier )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt208=1;
            }
            else if ( (LA208_0==IDENTIFIER) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_continueStatement30084);
                    identifier378=identifier();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_continueStatement30087); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeContinueNodeWithUnions(
                                  (identifier378!=null?identifier378.ret:null),
                                  optionalMetaAnnotationList379));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "continueStatement"


    // $ANTLR start "expressionStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6371:1: expressionStatement returns [NodeUnion<? extends ExpressionStatementNode> ret] : optionalMetaAnnotationList statementExpression ';' ;
    public final NodeUnion<? extends ExpressionStatementNode> expressionStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionStatementNode> ret = null;

        BsjAntlrParser.statementExpression_return statementExpression380 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList381 = null;



                    ruleStart("expressionStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6379:5: ( optionalMetaAnnotationList statementExpression ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6380:9: optionalMetaAnnotationList statementExpression ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_expressionStatement30165);
            optionalMetaAnnotationList381=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_statementExpression_in_expressionStatement30175);
            statementExpression380=statementExpression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_expressionStatement30178); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeExpressionStatementNodeWithUnions(
                                  (statementExpression380!=null?statementExpression380.ret:null),
                                  optionalMetaAnnotationList381));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "expressionStatement"


    // $ANTLR start "labeledStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6389:1: labeledStatement returns [NodeUnion<? extends LabeledStatementNode> ret] : optionalMetaAnnotationList identifier ':' statement ;
    public final NodeUnion<? extends LabeledStatementNode> labeledStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LabeledStatementNode> ret = null;

        BsjAntlrParser.identifier_return identifier382 = null;

        NodeUnion<? extends StatementNode> statement383 = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList384 = null;



                    ruleStart("labeledStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6397:5: ( optionalMetaAnnotationList identifier ':' statement )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6398:9: optionalMetaAnnotationList identifier ':' statement
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_labeledStatement30265);
            optionalMetaAnnotationList384=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_labeledStatement30275);
            identifier382=identifier();

            state._fsp--;
            if (state.failed) return ret;
            match(input,COLON,FOLLOW_COLON_in_labeledStatement30277); if (state.failed) return ret;
            pushFollow(FOLLOW_statement_in_labeledStatement30279);
            statement383=statement();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeLabeledStatementNodeWithUnions(
                              (identifier382!=null?identifier382.ret:null),
                              statement383,
                              optionalMetaAnnotationList384));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "labeledStatement"


    // $ANTLR start "noOpStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6408:1: noOpStatement returns [NodeUnion<? extends NoOperationNode> ret] : optionalMetaAnnotationList ';' ;
    public final NodeUnion<? extends NoOperationNode> noOpStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NoOperationNode> ret = null;

        NodeUnion<? extends MetaAnnotationListNode> optionalMetaAnnotationList385 = null;



                    ruleStart("noOpStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6416:5: ( optionalMetaAnnotationList ';' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6417:9: optionalMetaAnnotationList ';'
            {
            pushFollow(FOLLOW_optionalMetaAnnotationList_in_noOpStatement30357);
            optionalMetaAnnotationList385=optionalMetaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,SEMI,FOLLOW_SEMI_in_noOpStatement30367); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeNoOperationNodeWithUnions(optionalMetaAnnotationList385));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "noOpStatement"


    // $ANTLR start "catches"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6424:1: catches returns [NodeUnion<? extends CatchListNode> ret] : ( splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= catchClause (b= catchClause )* ) ) ;
    public final NodeUnion<? extends CatchListNode> catches() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CatchListNode> ret = null;

        BsjAntlrParser.catchClause_return a = null;

        BsjAntlrParser.catchClause_return b = null;

        NodeUnion<? extends Node> splice386 = null;



                    ruleStart("catches");
                    List<NodeUnion<? extends CatchNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6433:5: ( ( splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= catchClause (b= catchClause )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6434:9: ( splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= catchClause (b= catchClause )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6434:9: ( splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= catchClause (b= catchClause )* ) )
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==128) ) {
                int LA210_1 = input.LA(2);

                if ( ((synpred286_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt210=1;
                }
                else if ( (true) ) {
                    alt210=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 210, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA210_0==CATCH) ) {
                alt210=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }
            switch (alt210) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6435:13: splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_catches30459);
                    splice386=splice(CatchListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice386 != null) // TODO: fix this with error nodes
                                          ret = splice386.castNodeType(factory, CatchListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6441:13: (a= catchClause (b= catchClause )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6441:13: (a= catchClause (b= catchClause )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6442:17: a= catchClause (b= catchClause )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends CatchNode>>();
                                      
                    }
                    pushFollow(FOLLOW_catchClause_in_catches30530);
                    a=catchClause();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "catchClause", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6457:11: (b= catchClause )*
                    loop209:
                    do {
                        int alt209=2;
                        alt209 = dfa209.predict(input);
                        switch (alt209) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6458:21: b= catchClause
                    	    {
                    	    pushFollow(FOLLOW_catchClause_in_catches30578);
                    	    b=catchClause();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "catchClause", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop209;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeCatchListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "catches"


    // $ANTLR start "optionalCatches"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6478:1: optionalCatches returns [NodeUnion<? extends CatchListNode> ret] : ( ( catches ) | () );
    public final NodeUnion<? extends CatchListNode> optionalCatches() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CatchListNode> ret = null;

        NodeUnion<? extends CatchListNode> catches387 = null;



                    ruleStart("optionalCatches");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6486:5: ( ( catches ) | () )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==CATCH||LA211_0==128) ) {
                alt211=1;
            }
            else if ( (LA211_0==EOF) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6487:9: ( catches )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6487:9: ( catches )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6488:13: catches
                    {
                    pushFollow(FOLLOW_catches_in_optionalCatches30725);
                    catches387=catches();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = catches387;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6494:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6494:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6495:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeCatchListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalCatches"

    public static class catchClause_return extends ParserRuleReturnScope {
        public NodeUnion<? extends CatchNode> ret;
    };

    // $ANTLR start "catchClause"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6502:1: catchClause returns [NodeUnion<? extends CatchNode> ret] : ( splice[CatchNode.class, Arrays.<Class<? extends Node>>asList()] | 'catch' '(' formalParameter ')' block );
    public final BsjAntlrParser.catchClause_return catchClause() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.catchClause_return retval = new BsjAntlrParser.catchClause_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice388 = null;

        NodeUnion<? extends BlockStatementListNode> block389 = null;

        NodeUnion<? extends VariableNode> formalParameter390 = null;



                    ruleStart("catchClause");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6510:5: ( splice[CatchNode.class, Arrays.<Class<? extends Node>>asList()] | 'catch' '(' formalParameter ')' block )
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( (LA212_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt212=1;
            }
            else if ( (LA212_0==CATCH) ) {
                alt212=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }
            switch (alt212) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6511:9: splice[CatchNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_catchClause30861);
                    splice388=splice(CatchNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice388 != null) // TODO: fix this with error nodes
                                      retval.ret = splice388.castNodeType(factory, CatchNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6517:9: 'catch' '(' formalParameter ')' block
                    {
                    match(input,CATCH,FOLLOW_CATCH_in_catchClause30888); if (state.failed) return retval;
                    match(input,LPAREN,FOLLOW_LPAREN_in_catchClause30890); if (state.failed) return retval;
                    pushFollow(FOLLOW_formalParameter_in_catchClause30892);
                    formalParameter390=formalParameter();

                    state._fsp--;
                    if (state.failed) return retval;
                    match(input,RPAREN,FOLLOW_RPAREN_in_catchClause30894); if (state.failed) return retval;
                    pushFollow(FOLLOW_block_in_catchClause30904);
                    block389=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeCatchNodeWithUnions(
                                          block389,
                                          formalParameter390));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "catchClause"


    // $ANTLR start "switchBlock"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6526:1: switchBlock returns [NodeUnion<? extends CaseListNode> ret] : '{' optionalSwitchBlockStatementGroups '}' ;
    public final NodeUnion<? extends CaseListNode> switchBlock() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CaseListNode> ret = null;

        NodeUnion<? extends CaseListNode> optionalSwitchBlockStatementGroups391 = null;



                    ruleStart("switchBlock");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6534:5: ( '{' optionalSwitchBlockStatementGroups '}' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6535:9: '{' optionalSwitchBlockStatementGroups '}'
            {
            match(input,LBRACE,FOLLOW_LBRACE_in_switchBlock30982); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalSwitchBlockStatementGroups_in_switchBlock30992);
            optionalSwitchBlockStatementGroups391=optionalSwitchBlockStatementGroups();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RBRACE,FOLLOW_RBRACE_in_switchBlock31002); if (state.failed) return ret;
            if (  true  ) {

                          ret = optionalSwitchBlockStatementGroups391;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "switchBlock"


    // $ANTLR start "switchBlockStatementGroups"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6543:1: switchBlockStatementGroups returns [NodeUnion<? extends CaseListNode> ret] : ( splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* ) ) ;
    public final NodeUnion<? extends CaseListNode> switchBlockStatementGroups() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CaseListNode> ret = null;

        BsjAntlrParser.switchBlockStatementGroup_return a = null;

        BsjAntlrParser.switchBlockStatementGroup_return b = null;

        NodeUnion<? extends Node> splice392 = null;



                    ruleStart("switchBlockStatementGroups");
                    List<NodeUnion<? extends CaseNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6552:5: ( ( splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6553:9: ( splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6553:9: ( splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* ) )
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==128) ) {
                int LA214_1 = input.LA(2);

                if ( ((synpred290_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt214=1;
                }
                else if ( (true) ) {
                    alt214=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 214, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA214_0==CASE||LA214_0==DEFAULT) ) {
                alt214=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }
            switch (alt214) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6554:13: splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_switchBlockStatementGroups31094);
                    splice392=splice(CaseListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice392 != null) // TODO: fix this with error nodes
                                          ret = splice392.castNodeType(factory, CaseListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6560:13: (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6560:13: (a= switchBlockStatementGroup (b= switchBlockStatementGroup )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6561:17: a= switchBlockStatementGroup (b= switchBlockStatementGroup )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends CaseNode>>();
                                      
                    }
                    pushFollow(FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups31165);
                    a=switchBlockStatementGroup();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "switchBlockStatementGroup", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6576:11: (b= switchBlockStatementGroup )*
                    loop213:
                    do {
                        int alt213=2;
                        int LA213_0 = input.LA(1);

                        if ( (LA213_0==128) && ((configuration.getCodeSplicingSupported()))) {
                            alt213=1;
                        }
                        else if ( (LA213_0==CASE||LA213_0==DEFAULT) ) {
                            alt213=1;
                        }


                        switch (alt213) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6577:21: b= switchBlockStatementGroup
                    	    {
                    	    pushFollow(FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups31213);
                    	    b=switchBlockStatementGroup();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "switchBlockStatementGroup", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop213;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeCaseListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "switchBlockStatementGroups"


    // $ANTLR start "optionalSwitchBlockStatementGroups"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6597:1: optionalSwitchBlockStatementGroups returns [NodeUnion<? extends CaseListNode> ret] : ( ( switchBlockStatementGroups ) | () );
    public final NodeUnion<? extends CaseListNode> optionalSwitchBlockStatementGroups() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CaseListNode> ret = null;

        NodeUnion<? extends CaseListNode> switchBlockStatementGroups393 = null;



                    ruleStart("optionalSwitchBlockStatementGroups");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6605:5: ( ( switchBlockStatementGroups ) | () )
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==CASE||LA215_0==DEFAULT||LA215_0==128) ) {
                alt215=1;
            }
            else if ( (LA215_0==RBRACE) ) {
                alt215=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 215, 0, input);

                throw nvae;
            }
            switch (alt215) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6606:9: ( switchBlockStatementGroups )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6606:9: ( switchBlockStatementGroups )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6607:13: switchBlockStatementGroups
                    {
                    pushFollow(FOLLOW_switchBlockStatementGroups_in_optionalSwitchBlockStatementGroups31360);
                    switchBlockStatementGroups393=switchBlockStatementGroups();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = switchBlockStatementGroups393;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6613:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6613:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6614:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeCaseListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalSwitchBlockStatementGroups"

    public static class switchBlockStatementGroup_return extends ParserRuleReturnScope {
        public NodeUnion<? extends CaseNode> ret;
    };

    // $ANTLR start "switchBlockStatementGroup"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6621:1: switchBlockStatementGroup returns [NodeUnion<? extends CaseNode> ret] : ( splice[CaseNode.class, Arrays.<Class<? extends Node>>asList()] | switchLabel optionalBlockStatementList );
    public final BsjAntlrParser.switchBlockStatementGroup_return switchBlockStatementGroup() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.switchBlockStatementGroup_return retval = new BsjAntlrParser.switchBlockStatementGroup_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice394 = null;

        NodeUnion<? extends ExpressionNode> switchLabel395 = null;

        NodeUnion<? extends BlockStatementListNode> optionalBlockStatementList396 = null;



                    ruleStart("switchBlockStatementGroup");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6629:5: ( splice[CaseNode.class, Arrays.<Class<? extends Node>>asList()] | switchLabel optionalBlockStatementList )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt216=1;
            }
            else if ( (LA216_0==CASE||LA216_0==DEFAULT) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6630:9: splice[CaseNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_switchBlockStatementGroup31493);
                    splice394=splice(CaseNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice394 != null) // TODO: fix this with error nodes
                                      retval.ret = splice394.castNodeType(factory, CaseNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6636:9: switchLabel optionalBlockStatementList
                    {
                    pushFollow(FOLLOW_switchLabel_in_switchBlockStatementGroup31520);
                    switchLabel395=switchLabel();

                    state._fsp--;
                    if (state.failed) return retval;
                    pushFollow(FOLLOW_optionalBlockStatementList_in_switchBlockStatementGroup31530);
                    optionalBlockStatementList396=optionalBlockStatementList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeCaseNodeWithUnions(switchLabel395, optionalBlockStatementList396));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "switchBlockStatementGroup"


    // $ANTLR start "switchLabel"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6643:1: switchLabel returns [NodeUnion<? extends ExpressionNode> ret] : ( 'case' expression ':' | 'default' ':' );
    public final NodeUnion<? extends ExpressionNode> switchLabel() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionNode> ret = null;

        BsjAntlrParser.expression_return expression397 = null;



                    ruleStart("switchLabel");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6651:5: ( 'case' expression ':' | 'default' ':' )
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==CASE) ) {
                alt217=1;
            }
            else if ( (LA217_0==DEFAULT) ) {
                alt217=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }
            switch (alt217) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6652:9: 'case' expression ':'
                    {
                    match(input,CASE,FOLLOW_CASE_in_switchLabel31611); if (state.failed) return ret;
                    pushFollow(FOLLOW_expression_in_switchLabel31613);
                    expression397=expression();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,COLON,FOLLOW_COLON_in_switchLabel31615); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = (expression397!=null?expression397.ret:null);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6657:9: 'default' ':'
                    {
                    match(input,DEFAULT,FOLLOW_DEFAULT_in_switchLabel31644); if (state.failed) return ret;
                    match(input,COLON,FOLLOW_COLON_in_switchLabel31646); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = null;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "switchLabel"


    // $ANTLR start "formalParameter"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6668:1: formalParameter returns [NodeUnion<? extends VariableNode> ret] : variableModifiers type id= identifier ( arrayTypeCounter )? ;
    public final NodeUnion<? extends VariableNode> formalParameter() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableNode> ret = null;

        BsjAntlrParser.identifier_return id = null;

        NodeUnion<? extends TypeNode> type398 = null;

        int arrayTypeCounter399 = 0;

        NodeUnion<? extends VariableModifiersNode> variableModifiers400 = null;



                    ruleStart("formalParameter");
                    NodeUnion<? extends TypeNode> typeNode = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6677:5: ( variableModifiers type id= identifier ( arrayTypeCounter )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6678:9: variableModifiers type id= identifier ( arrayTypeCounter )?
            {
            pushFollow(FOLLOW_variableModifiers_in_formalParameter31732);
            variableModifiers400=variableModifiers();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_type_in_formalParameter31742);
            type398=type();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          typeNode = type398;
                      
            }
            pushFollow(FOLLOW_identifier_in_formalParameter31764);
            id=identifier();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6684:9: ( arrayTypeCounter )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==LBRACKET) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6685:13: arrayTypeCounter
                    {
                    pushFollow(FOLLOW_arrayTypeCounter_in_formalParameter31788);
                    arrayTypeCounter399=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      typeNode = wrapArrayLevels(typeNode, arrayTypeCounter399);
                                  
                    }

                    }
                    break;

            }

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeVariableNodeWithUnions(
                              variableModifiers400, 
                              typeNode,
                              (id!=null?id.ret:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "formalParameter"


    // $ANTLR start "forInit"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6700:1: forInit returns [NodeUnion<? extends ForInitializerNode> ret] : ( splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration | statementExpressionList );
    public final NodeUnion<? extends ForInitializerNode> forInit() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ForInitializerNode> ret = null;

        NodeUnion<? extends Node> splice401 = null;

        NodeUnion<? extends LocalVariableDeclarationNode> localVariableDeclaration402 = null;

        NodeUnion<? extends StatementExpressionListNode> statementExpressionList403 = null;



                    ruleStart("forInit");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6708:5: ( splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration | statementExpressionList )
            int alt219=3;
            alt219 = dfa219.predict(input);
            switch (alt219) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6709:9: splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_forInit31896);
                    splice401=splice(ForInitializerNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice401 != null) // TODO: fix this with error nodes
                                      ret = splice401.castNodeType(factory, ForInitializerNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6715:9: localVariableDeclaration
                    {
                    pushFollow(FOLLOW_localVariableDeclaration_in_forInit31923);
                    localVariableDeclaration402=localVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeForInitializerDeclarationNodeWithUnions(
                                          localVariableDeclaration402));
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6721:9: statementExpressionList
                    {
                    pushFollow(FOLLOW_statementExpressionList_in_forInit31952);
                    statementExpressionList403=statementExpressionList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeForInitializerExpressionNodeWithUnions(statementExpressionList403));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "forInit"


    // $ANTLR start "parExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6727:1: parExpression returns [NodeUnion<? extends ExpressionNode> ret] : '(' expression ')' ;
    public final NodeUnion<? extends ExpressionNode> parExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionNode> ret = null;

        BsjAntlrParser.expression_return expression404 = null;



                    ruleStart("parExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6735:5: ( '(' expression ')' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6736:9: '(' expression ')'
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_parExpression32033); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_parExpression32035);
            expression404=expression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_parExpression32037); if (state.failed) return ret;
            if (  true  ) {

                          ret = (expression404!=null?expression404.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parExpression"


    // $ANTLR start "statementExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6742:1: statementExpressionList returns [NodeUnion<? extends StatementExpressionListNode> ret] : ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= statementExpression ( ',' b= statementExpression )* ) ) ;
    public final NodeUnion<? extends StatementExpressionListNode> statementExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StatementExpressionListNode> ret = null;

        BsjAntlrParser.statementExpression_return a = null;

        BsjAntlrParser.statementExpression_return b = null;

        NodeUnion<? extends Node> splice405 = null;



                    ruleStart("statementExpressionList");
                    List<NodeUnion<? extends StatementExpressionNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6751:5: ( ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= statementExpression ( ',' b= statementExpression )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6752:9: ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= statementExpression ( ',' b= statementExpression )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6752:9: ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= statementExpression ( ',' b= statementExpression )* ) )
            int alt221=2;
            alt221 = dfa221.predict(input);
            switch (alt221) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6753:13: splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_statementExpressionList32129);
                    splice405=splice(StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice405 != null) // TODO: fix this with error nodes
                                          ret = splice405.castNodeType(factory, StatementExpressionListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6759:13: (a= statementExpression ( ',' b= statementExpression )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6759:13: (a= statementExpression ( ',' b= statementExpression )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6760:17: a= statementExpression ( ',' b= statementExpression )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends StatementExpressionNode>>();
                                      
                    }
                    pushFollow(FOLLOW_statementExpression_in_statementExpressionList32200);
                    a=statementExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "statementExpression", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6775:11: ( ',' b= statementExpression )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==COMMA) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6776:13: ',' b= statementExpression
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_statementExpressionList32238); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_statementExpression_in_statementExpressionList32262);
                    	    b=statementExpression();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "statementExpression", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeStatementExpressionListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "statementExpressionList"


    // $ANTLR start "optionalStatementExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6797:1: optionalStatementExpressionList returns [NodeUnion<? extends StatementExpressionListNode> ret] : ( ( statementExpressionList ) | () );
    public final NodeUnion<? extends StatementExpressionListNode> optionalStatementExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StatementExpressionListNode> ret = null;

        NodeUnion<? extends StatementExpressionListNode> statementExpressionList406 = null;



                    ruleStart("optionalStatementExpressionList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6805:5: ( ( statementExpressionList ) | () )
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==CODELITERAL_START||(LA222_0>=SUPER && LA222_0<=IDENTIFIER)||LA222_0==BOOLEAN||LA222_0==BYTE||LA222_0==CHAR||LA222_0==DOUBLE||LA222_0==FLOAT||LA222_0==INT||LA222_0==LONG||LA222_0==SHORT||LA222_0==VOID||LA222_0==LPAREN||(LA222_0>=BANG && LA222_0<=TILDE)||(LA222_0>=PLUSPLUS && LA222_0<=SUB)||LA222_0==128) ) {
                alt222=1;
            }
            else if ( (LA222_0==RPAREN) ) {
                alt222=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 222, 0, input);

                throw nvae;
            }
            switch (alt222) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6806:9: ( statementExpressionList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6806:9: ( statementExpressionList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6807:13: statementExpressionList
                    {
                    pushFollow(FOLLOW_statementExpressionList_in_optionalStatementExpressionList32409);
                    statementExpressionList406=statementExpressionList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = statementExpressionList406;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6813:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6813:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6814:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeStatementExpressionListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalStatementExpressionList"


    // $ANTLR start "expressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6821:1: expressionList returns [NodeUnion<? extends ExpressionListNode> ret] : ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= expression ( ',' b= expression )* ) ) ;
    public final NodeUnion<? extends ExpressionListNode> expressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        BsjAntlrParser.expression_return a = null;

        BsjAntlrParser.expression_return b = null;

        NodeUnion<? extends Node> splice407 = null;



                    ruleStart("expressionList");
                    List<NodeUnion<? extends ExpressionNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6830:5: ( ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= expression ( ',' b= expression )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6831:9: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= expression ( ',' b= expression )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6831:9: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= expression ( ',' b= expression )* ) )
            int alt224=2;
            alt224 = dfa224.predict(input);
            switch (alt224) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6832:13: splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_expressionList32556);
                    splice407=splice(ExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice407 != null) // TODO: fix this with error nodes
                                          ret = splice407.castNodeType(factory, ExpressionListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6838:13: (a= expression ( ',' b= expression )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6838:13: (a= expression ( ',' b= expression )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6839:17: a= expression ( ',' b= expression )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends ExpressionNode>>();
                                      
                    }
                    pushFollow(FOLLOW_expression_in_expressionList32627);
                    a=expression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "expression", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6854:11: ( ',' b= expression )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==COMMA) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6855:13: ',' b= expression
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_expressionList32665); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_expression_in_expressionList32689);
                    	    b=expression();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "expression", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeExpressionListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "expressionList"


    // $ANTLR start "optionalExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6876:1: optionalExpressionList returns [NodeUnion<? extends ExpressionListNode> ret] : ( ( expressionList ) | () );
    public final NodeUnion<? extends ExpressionListNode> optionalExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        NodeUnion<? extends ExpressionListNode> expressionList408 = null;



                    ruleStart("optionalExpressionList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6884:5: ( ( expressionList ) | () )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==CODELITERAL_START||(LA225_0>=SUPER && LA225_0<=IDENTIFIER)||LA225_0==BOOLEAN||LA225_0==BYTE||LA225_0==CHAR||LA225_0==DOUBLE||LA225_0==FLOAT||LA225_0==INT||LA225_0==LONG||LA225_0==SHORT||LA225_0==VOID||LA225_0==LPAREN||(LA225_0>=BANG && LA225_0<=TILDE)||(LA225_0>=PLUSPLUS && LA225_0<=SUB)||LA225_0==128) ) {
                alt225=1;
            }
            else if ( (LA225_0==RPAREN) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6885:9: ( expressionList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6885:9: ( expressionList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6886:13: expressionList
                    {
                    pushFollow(FOLLOW_expressionList_in_optionalExpressionList32836);
                    expressionList408=expressionList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = expressionList408;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6892:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6892:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6893:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeExpressionListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalExpressionList"

    public static class statementExpression_return extends ParserRuleReturnScope {
        public NodeUnion<? extends StatementExpressionNode> ret;
    };

    // $ANTLR start "statementExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6902:1: statementExpression returns [NodeUnion<? extends StatementExpressionNode> ret] : expression {...}?;
    public final BsjAntlrParser.statementExpression_return statementExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.statementExpression_return retval = new BsjAntlrParser.statementExpression_return();
        retval.start = input.LT(1);

        BsjAntlrParser.expression_return expression409 = null;



                    ruleStart("statementExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6910:5: ( expression {...}?)
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6913:9: expression {...}?
            {
            pushFollow(FOLLOW_expression_in_statementExpression33012);
            expression409=expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( !((
                        ((expression409!=null?expression409.ret:null) != null && (expression409!=null?expression409.ret:null).getType().equals(NodeUnion.Type.NORMAL) &&
                                    (expression409!=null?expression409.ret:null).getNormalNode() instanceof StatementExpressionNode)
                        // TODO: permit splices of statement expressions!
                    )) ) {
                if (state.backtracking>0) {state.failed=true; return retval;}
                throw new FailedPredicateException(input, "statementExpression", "\n            ($expression.ret != null && $expression.ret.getType().equals(NodeUnion.Type.NORMAL) &&\n                        $expression.ret.getNormalNode() instanceof StatementExpressionNode)\n            // TODO: permit splices of statement expressions!\n        ");
            }
            if (  true  ) {

                          retval.ret = factory.makeNormalNodeUnion((StatementExpressionNode)((expression409!=null?expression409.ret:null).getNormalNode()));
                      
            }

            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "statementExpression"

    public static class expression_return extends ParserRuleReturnScope {
        public NodeUnion<? extends ExpressionNode> ret;
    };

    // $ANTLR start "expression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6924:1: expression returns [NodeUnion<? extends ExpressionNode> ret] : assignmentExpression ;
    public final BsjAntlrParser.expression_return expression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.expression_return retval = new BsjAntlrParser.expression_return();
        retval.start = input.LT(1);

        NodeUnion<? extends ExpressionNode> assignmentExpression410 = null;



                    ruleStart("expression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6932:5: ( assignmentExpression )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6933:9: assignmentExpression
            {
            pushFollow(FOLLOW_assignmentExpression_in_expression33100);
            assignmentExpression410=assignmentExpression();

            state._fsp--;
            if (state.failed) return retval;
            if (  true  ) {

                          retval.ret = assignmentExpression410;
                      
            }

            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "expression"


    // $ANTLR start "assignmentExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6939:1: assignmentExpression returns [NodeUnion<? extends ExpressionNode> ret] : ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] | conditionalExpression ) ( assignmentOperator e= expression )? ;
    public final NodeUnion<? extends ExpressionNode> assignmentExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionNode> ret = null;

        BsjAntlrParser.expression_return e = null;

        NodeUnion<? extends Node> splice411 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> conditionalExpression412 = null;

        AssignmentOperator assignmentOperator413 = null;



                    ruleStart("assignmentExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6947:5: ( ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] | conditionalExpression ) ( assignmentOperator e= expression )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6948:9: ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] | conditionalExpression ) ( assignmentOperator e= expression )?
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6948:9: ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] | conditionalExpression )
            int alt226=2;
            alt226 = dfa226.predict(input);
            switch (alt226) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6949:13: splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_assignmentExpression33195);
                    splice411=splice(ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class));

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice411 != null) // TODO: fix this with error nodes
                                          ret = splice411.castNodeType(factory, ExpressionNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6955:13: conditionalExpression
                    {
                    pushFollow(FOLLOW_conditionalExpression_in_assignmentExpression33234);
                    conditionalExpression412=conditionalExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = conditionalExpression412;
                                  
                    }

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6960:9: ( assignmentOperator e= expression )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==EQ||(LA227_0>=PLUSEQ && LA227_0<=PERCENTEQ)||(LA227_0>=GT && LA227_0<=LT)) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6961:13: assignmentOperator e= expression
                    {
                    pushFollow(FOLLOW_assignmentOperator_in_assignmentExpression33282);
                    assignmentOperator413=assignmentOperator();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_expression_in_assignmentExpression33298);
                    e=expression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeAssignmentNodeWithUnions(
                                              ret,
                                              assignmentOperator413,
                                              (e!=null?e.ret:null)));
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "assignmentExpression"


    // $ANTLR start "assignmentOperator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6972:1: assignmentOperator returns [AssignmentOperator ret] : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' );
    public final AssignmentOperator assignmentOperator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        AssignmentOperator ret = null;


                    ruleStart("assignmentOperator");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6980:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' )
            int alt228=12;
            alt228 = dfa228.predict(input);
            switch (alt228) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6981:9: '='
                    {
                    match(input,EQ,FOLLOW_EQ_in_assignmentOperator33394); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6986:9: '+='
                    {
                    match(input,PLUSEQ,FOLLOW_PLUSEQ_in_assignmentOperator33423); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.PLUS_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6991:9: '-='
                    {
                    match(input,SUBEQ,FOLLOW_SUBEQ_in_assignmentOperator33460); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.MINUS_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6996:9: '*='
                    {
                    match(input,STAREQ,FOLLOW_STAREQ_in_assignmentOperator33493); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.MULTIPLY_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7001:9: '/='
                    {
                    match(input,SLASHEQ,FOLLOW_SLASHEQ_in_assignmentOperator33530); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.DIVIDE_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7006:9: '&='
                    {
                    match(input,AMPEQ,FOLLOW_AMPEQ_in_assignmentOperator33567); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.AND_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7011:9: '|='
                    {
                    match(input,BAREQ,FOLLOW_BAREQ_in_assignmentOperator33596); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.OR_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 8 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7016:9: '^='
                    {
                    match(input,CARETEQ,FOLLOW_CARETEQ_in_assignmentOperator33633); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.XOR_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 9 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7021:9: '%='
                    {
                    match(input,PERCENTEQ,FOLLOW_PERCENTEQ_in_assignmentOperator33670); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.MODULUS_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 10 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7026:9: '<' '<' '='
                    {
                    match(input,LT,FOLLOW_LT_in_assignmentOperator33707); if (state.failed) return ret;
                    match(input,LT,FOLLOW_LT_in_assignmentOperator33709); if (state.failed) return ret;
                    match(input,EQ,FOLLOW_EQ_in_assignmentOperator33711); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.LEFT_SHIFT_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 11 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7031:9: '>' '>' '>' '='
                    {
                    match(input,GT,FOLLOW_GT_in_assignmentOperator33745); if (state.failed) return ret;
                    match(input,GT,FOLLOW_GT_in_assignmentOperator33747); if (state.failed) return ret;
                    match(input,GT,FOLLOW_GT_in_assignmentOperator33749); if (state.failed) return ret;
                    match(input,EQ,FOLLOW_EQ_in_assignmentOperator33751); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.UNSIGNED_RIGHT_SHIFT_ASSIGNMENT;
                              
                    }

                    }
                    break;
                case 12 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7036:9: '>' '>' '='
                    {
                    match(input,GT,FOLLOW_GT_in_assignmentOperator33788); if (state.failed) return ret;
                    match(input,GT,FOLLOW_GT_in_assignmentOperator33790); if (state.failed) return ret;
                    match(input,EQ,FOLLOW_EQ_in_assignmentOperator33792); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = AssignmentOperator.RIGHT_SHIFT_ASSIGNMENT;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "assignmentOperator"


    // $ANTLR start "conditionalExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7042:1: conditionalExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : conditionalOrExpression ( '?' e1= expression ':' e2= conditionalExpression )? ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> conditionalExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        BsjAntlrParser.expression_return e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> conditionalOrExpression414 = null;



                    ruleStart("conditionalExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7050:5: ( conditionalOrExpression ( '?' e1= expression ':' e2= conditionalExpression )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7051:9: conditionalOrExpression ( '?' e1= expression ':' e2= conditionalExpression )?
            {
            pushFollow(FOLLOW_conditionalOrExpression_in_conditionalExpression33882);
            conditionalOrExpression414=conditionalOrExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = conditionalOrExpression414;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7055:9: ( '?' e1= expression ':' e2= conditionalExpression )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==QUES) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7056:13: '?' e1= expression ':' e2= conditionalExpression
                    {
                    match(input,QUES,FOLLOW_QUES_in_conditionalExpression33916); if (state.failed) return ret;
                    pushFollow(FOLLOW_expression_in_conditionalExpression33920);
                    e1=expression();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,COLON,FOLLOW_COLON_in_conditionalExpression33922); if (state.failed) return ret;
                    pushFollow(FOLLOW_conditionalExpression_in_conditionalExpression33926);
                    e2=conditionalExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeConditionalExpressionNodeWithUnions(
                                          ret, 
                                          (e1!=null?e1.ret:null), 
                                          e2));
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "conditionalExpression"


    // $ANTLR start "conditionalOrExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7066:1: conditionalOrExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= conditionalAndExpression ( ( '||' ) e2= conditionalAndExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> conditionalOrExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("conditionalOrExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7075:5: (e1= conditionalAndExpression ( ( '||' ) e2= conditionalAndExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7076:9: e1= conditionalAndExpression ( ( '||' ) e2= conditionalAndExpression )*
            {
            pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression34024);
            e1=conditionalAndExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7080:9: ( ( '||' ) e2= conditionalAndExpression )*
            loop230:
            do {
                int alt230=2;
                int LA230_0 = input.LA(1);

                if ( (LA230_0==BARBAR) ) {
                    alt230=1;
                }


                switch (alt230) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7081:13: ( '||' ) e2= conditionalAndExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7081:13: ( '||' )
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7082:17: '||'
            	    {
            	    match(input,BARBAR,FOLLOW_BARBAR_in_conditionalOrExpression34080); if (state.failed) return ret;
            	    if (  true  ) {

            	                          op = BinaryOperator.CONDITIONAL_OR;
            	                      
            	    }

            	    }

            	    pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression34128);
            	    e2=conditionalAndExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop230;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "conditionalOrExpression"


    // $ANTLR start "conditionalAndExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7095:1: conditionalAndExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= inclusiveOrExpression ( ( '&&' ) e2= inclusiveOrExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> conditionalAndExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("conditionalAndExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7104:5: (e1= inclusiveOrExpression ( ( '&&' ) e2= inclusiveOrExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7105:9: e1= inclusiveOrExpression ( ( '&&' ) e2= inclusiveOrExpression )*
            {
            pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression34239);
            e1=inclusiveOrExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7109:9: ( ( '&&' ) e2= inclusiveOrExpression )*
            loop231:
            do {
                int alt231=2;
                int LA231_0 = input.LA(1);

                if ( (LA231_0==AMPAMP) ) {
                    alt231=1;
                }


                switch (alt231) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7110:13: ( '&&' ) e2= inclusiveOrExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7110:13: ( '&&' )
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7111:17: '&&'
            	    {
            	    match(input,AMPAMP,FOLLOW_AMPAMP_in_conditionalAndExpression34295); if (state.failed) return ret;
            	    if (  true  ) {

            	                          op = BinaryOperator.CONDITIONAL_AND;
            	                      
            	    }

            	    }

            	    pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression34343);
            	    e2=inclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop231;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "conditionalAndExpression"


    // $ANTLR start "inclusiveOrExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7124:1: inclusiveOrExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= exclusiveOrExpression ( ( '|' ) e2= exclusiveOrExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> inclusiveOrExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("inclusiveOrExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7133:5: (e1= exclusiveOrExpression ( ( '|' ) e2= exclusiveOrExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7134:9: e1= exclusiveOrExpression ( ( '|' ) e2= exclusiveOrExpression )*
            {
            pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression34454);
            e1=exclusiveOrExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7138:9: ( ( '|' ) e2= exclusiveOrExpression )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==BAR) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7139:13: ( '|' ) e2= exclusiveOrExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7139:13: ( '|' )
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7140:17: '|'
            	    {
            	    match(input,BAR,FOLLOW_BAR_in_inclusiveOrExpression34510); if (state.failed) return ret;
            	    if (  true  ) {

            	                          op = BinaryOperator.LOGICAL_OR;
            	                      
            	    }

            	    }

            	    pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression34558);
            	    e2=exclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "inclusiveOrExpression"


    // $ANTLR start "exclusiveOrExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7153:1: exclusiveOrExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= andExpression ( ( '^' ) e2= andExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> exclusiveOrExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("exclusiveOrExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7162:5: (e1= andExpression ( ( '^' ) e2= andExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7163:9: e1= andExpression ( ( '^' ) e2= andExpression )*
            {
            pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression34669);
            e1=andExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7167:9: ( ( '^' ) e2= andExpression )*
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==CARET) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7168:13: ( '^' ) e2= andExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7168:13: ( '^' )
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7169:17: '^'
            	    {
            	    match(input,CARET,FOLLOW_CARET_in_exclusiveOrExpression34725); if (state.failed) return ret;
            	    if (  true  ) {

            	                          op = BinaryOperator.XOR;
            	                      
            	    }

            	    }

            	    pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression34773);
            	    e2=andExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "exclusiveOrExpression"


    // $ANTLR start "andExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7182:1: andExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= equalityExpression ( ( '&' ) e2= equalityExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> andExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("andExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7191:5: (e1= equalityExpression ( ( '&' ) e2= equalityExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7192:9: e1= equalityExpression ( ( '&' ) e2= equalityExpression )*
            {
            pushFollow(FOLLOW_equalityExpression_in_andExpression34884);
            e1=equalityExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7196:9: ( ( '&' ) e2= equalityExpression )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==AMP) ) {
                    alt234=1;
                }


                switch (alt234) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7197:13: ( '&' ) e2= equalityExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7197:13: ( '&' )
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7198:17: '&'
            	    {
            	    match(input,AMP,FOLLOW_AMP_in_andExpression34940); if (state.failed) return ret;
            	    if (  true  ) {

            	                          op = BinaryOperator.LOGICAL_AND;
            	                      
            	    }

            	    }

            	    pushFollow(FOLLOW_equalityExpression_in_andExpression34988);
            	    e2=equalityExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "andExpression"


    // $ANTLR start "equalityExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7211:1: equalityExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= instanceOfExpression ( ( '==' | '!=' ) e2= instanceOfExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> equalityExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("equalityExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7220:5: (e1= instanceOfExpression ( ( '==' | '!=' ) e2= instanceOfExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7221:9: e1= instanceOfExpression ( ( '==' | '!=' ) e2= instanceOfExpression )*
            {
            pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression35099);
            e1=instanceOfExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7225:9: ( ( '==' | '!=' ) e2= instanceOfExpression )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==EQEQ||LA236_0==BANGEQ) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7226:13: ( '==' | '!=' ) e2= instanceOfExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7226:13: ( '==' | '!=' )
            	    int alt235=2;
            	    int LA235_0 = input.LA(1);

            	    if ( (LA235_0==EQEQ) ) {
            	        alt235=1;
            	    }
            	    else if ( (LA235_0==BANGEQ) ) {
            	        alt235=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return ret;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 235, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt235) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7227:17: '=='
            	            {
            	            match(input,EQEQ,FOLLOW_EQEQ_in_equalityExpression35155); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.EQUAL;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7232:17: '!='
            	            {
            	            match(input,BANGEQ,FOLLOW_BANGEQ_in_equalityExpression35205); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.NOT_EQUAL;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression35253);
            	    e2=instanceOfExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "equalityExpression"


    // $ANTLR start "instanceOfExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7245:1: instanceOfExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : relationalExpression ( 'instanceof' type )? ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> instanceOfExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> relationalExpression415 = null;

        NodeUnion<? extends TypeNode> type416 = null;



                    ruleStart("instanceOfExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7253:5: ( relationalExpression ( 'instanceof' type )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7254:9: relationalExpression ( 'instanceof' type )?
            {
            pushFollow(FOLLOW_relationalExpression_in_instanceOfExpression35362);
            relationalExpression415=relationalExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = relationalExpression415;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7258:9: ( 'instanceof' type )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==INSTANCEOF) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7259:13: 'instanceof' type
                    {
                    match(input,INSTANCEOF,FOLLOW_INSTANCEOF_in_instanceOfExpression35404); if (state.failed) return ret;
                    pushFollow(FOLLOW_type_in_instanceOfExpression35406);
                    type416=type();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeInstanceOfNodeWithUnions(
                                          relationalExpression415, 
                                          type416));
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "instanceOfExpression"


    // $ANTLR start "relationalExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7268:1: relationalExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= shiftExpression ( ( '<' '=' | '>' '=' | '<' | '>' ) e2= shiftExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> relationalExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("relationalExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7277:5: (e1= shiftExpression ( ( '<' '=' | '>' '=' | '<' | '>' ) e2= shiftExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7278:9: e1= shiftExpression ( ( '<' '=' | '>' '=' | '<' | '>' ) e2= shiftExpression )*
            {
            pushFollow(FOLLOW_shiftExpression_in_relationalExpression35512);
            e1=shiftExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7282:9: ( ( '<' '=' | '>' '=' | '<' | '>' ) e2= shiftExpression )*
            loop239:
            do {
                int alt239=2;
                int LA239_0 = input.LA(1);

                if ( (LA239_0==LT) ) {
                    int LA239_2 = input.LA(2);

                    if ( (LA239_2==CODELITERAL_START||(LA239_2>=SUPER && LA239_2<=IDENTIFIER)||LA239_2==BOOLEAN||LA239_2==BYTE||LA239_2==CHAR||LA239_2==DOUBLE||LA239_2==FLOAT||LA239_2==INT||LA239_2==LONG||LA239_2==SHORT||LA239_2==VOID||LA239_2==LPAREN||(LA239_2>=EQ && LA239_2<=TILDE)||(LA239_2>=PLUSPLUS && LA239_2<=SUB)||LA239_2==128) ) {
                        alt239=1;
                    }


                }
                else if ( (LA239_0==GT) ) {
                    int LA239_3 = input.LA(2);

                    if ( (LA239_3==CODELITERAL_START||(LA239_3>=SUPER && LA239_3<=IDENTIFIER)||LA239_3==BOOLEAN||LA239_3==BYTE||LA239_3==CHAR||LA239_3==DOUBLE||LA239_3==FLOAT||LA239_3==INT||LA239_3==LONG||LA239_3==SHORT||LA239_3==VOID||LA239_3==LPAREN||(LA239_3>=EQ && LA239_3<=TILDE)||(LA239_3>=PLUSPLUS && LA239_3<=SUB)||LA239_3==128) ) {
                        alt239=1;
                    }


                }


                switch (alt239) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7283:13: ( '<' '=' | '>' '=' | '<' | '>' ) e2= shiftExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7283:13: ( '<' '=' | '>' '=' | '<' | '>' )
            	    int alt238=4;
            	    int LA238_0 = input.LA(1);

            	    if ( (LA238_0==LT) ) {
            	        int LA238_1 = input.LA(2);

            	        if ( (LA238_1==EQ) ) {
            	            alt238=1;
            	        }
            	        else if ( (LA238_1==CODELITERAL_START||(LA238_1>=SUPER && LA238_1<=IDENTIFIER)||LA238_1==BOOLEAN||LA238_1==BYTE||LA238_1==CHAR||LA238_1==DOUBLE||LA238_1==FLOAT||LA238_1==INT||LA238_1==LONG||LA238_1==SHORT||LA238_1==VOID||LA238_1==LPAREN||(LA238_1>=BANG && LA238_1<=TILDE)||(LA238_1>=PLUSPLUS && LA238_1<=SUB)||LA238_1==128) ) {
            	            alt238=3;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return ret;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 238, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else if ( (LA238_0==GT) ) {
            	        int LA238_2 = input.LA(2);

            	        if ( (LA238_2==EQ) ) {
            	            alt238=2;
            	        }
            	        else if ( (LA238_2==CODELITERAL_START||(LA238_2>=SUPER && LA238_2<=IDENTIFIER)||LA238_2==BOOLEAN||LA238_2==BYTE||LA238_2==CHAR||LA238_2==DOUBLE||LA238_2==FLOAT||LA238_2==INT||LA238_2==LONG||LA238_2==SHORT||LA238_2==VOID||LA238_2==LPAREN||(LA238_2>=BANG && LA238_2<=TILDE)||(LA238_2>=PLUSPLUS && LA238_2<=SUB)||LA238_2==128) ) {
            	            alt238=4;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return ret;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 238, 2, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return ret;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 238, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt238) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7284:17: '<' '='
            	            {
            	            match(input,LT,FOLLOW_LT_in_relationalExpression35568); if (state.failed) return ret;
            	            match(input,EQ,FOLLOW_EQ_in_relationalExpression35570); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.LESS_THAN_EQUAL;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7289:17: '>' '='
            	            {
            	            match(input,GT,FOLLOW_GT_in_relationalExpression35620); if (state.failed) return ret;
            	            match(input,EQ,FOLLOW_EQ_in_relationalExpression35622); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.GREATER_THAN_EQUAL;
            	                              
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7294:17: '<'
            	            {
            	            match(input,LT,FOLLOW_LT_in_relationalExpression35672); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.LESS_THAN;
            	                              
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7299:17: '>'
            	            {
            	            match(input,GT,FOLLOW_GT_in_relationalExpression35722); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.GREATER_THAN;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_shiftExpression_in_relationalExpression35770);
            	    e2=shiftExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop239;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "relationalExpression"


    // $ANTLR start "shiftExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7312:1: shiftExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= additiveExpression ( ( '<' '<' | '>' '>' '>' | '>' '>' ) e2= additiveExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> shiftExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("shiftExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7321:5: (e1= additiveExpression ( ( '<' '<' | '>' '>' '>' | '>' '>' ) e2= additiveExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7322:9: e1= additiveExpression ( ( '<' '<' | '>' '>' '>' | '>' '>' ) e2= additiveExpression )*
            {
            pushFollow(FOLLOW_additiveExpression_in_shiftExpression35881);
            e1=additiveExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7326:9: ( ( '<' '<' | '>' '>' '>' | '>' '>' ) e2= additiveExpression )*
            loop241:
            do {
                int alt241=2;
                int LA241_0 = input.LA(1);

                if ( (LA241_0==LT) ) {
                    int LA241_1 = input.LA(2);

                    if ( (LA241_1==LT) ) {
                        int LA241_4 = input.LA(3);

                        if ( (LA241_4==CODELITERAL_START||(LA241_4>=SUPER && LA241_4<=IDENTIFIER)||LA241_4==BOOLEAN||LA241_4==BYTE||LA241_4==CHAR||LA241_4==DOUBLE||LA241_4==FLOAT||LA241_4==INT||LA241_4==LONG||LA241_4==SHORT||LA241_4==VOID||LA241_4==LPAREN||(LA241_4>=BANG && LA241_4<=TILDE)||(LA241_4>=PLUSPLUS && LA241_4<=SUB)||LA241_4==128) ) {
                            alt241=1;
                        }


                    }


                }
                else if ( (LA241_0==GT) ) {
                    int LA241_2 = input.LA(2);

                    if ( (LA241_2==GT) ) {
                        int LA241_5 = input.LA(3);

                        if ( (LA241_5==GT) ) {
                            int LA241_7 = input.LA(4);

                            if ( (LA241_7==CODELITERAL_START||(LA241_7>=SUPER && LA241_7<=IDENTIFIER)||LA241_7==BOOLEAN||LA241_7==BYTE||LA241_7==CHAR||LA241_7==DOUBLE||LA241_7==FLOAT||LA241_7==INT||LA241_7==LONG||LA241_7==SHORT||LA241_7==VOID||LA241_7==LPAREN||(LA241_7>=BANG && LA241_7<=TILDE)||(LA241_7>=PLUSPLUS && LA241_7<=SUB)||LA241_7==128) ) {
                                alt241=1;
                            }


                        }
                        else if ( (LA241_5==CODELITERAL_START||(LA241_5>=SUPER && LA241_5<=IDENTIFIER)||LA241_5==BOOLEAN||LA241_5==BYTE||LA241_5==CHAR||LA241_5==DOUBLE||LA241_5==FLOAT||LA241_5==INT||LA241_5==LONG||LA241_5==SHORT||LA241_5==VOID||LA241_5==LPAREN||(LA241_5>=BANG && LA241_5<=TILDE)||(LA241_5>=PLUSPLUS && LA241_5<=SUB)||LA241_5==128) ) {
                            alt241=1;
                        }


                    }


                }


                switch (alt241) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7327:13: ( '<' '<' | '>' '>' '>' | '>' '>' ) e2= additiveExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7327:13: ( '<' '<' | '>' '>' '>' | '>' '>' )
            	    int alt240=3;
            	    int LA240_0 = input.LA(1);

            	    if ( (LA240_0==LT) ) {
            	        alt240=1;
            	    }
            	    else if ( (LA240_0==GT) ) {
            	        int LA240_2 = input.LA(2);

            	        if ( (LA240_2==GT) ) {
            	            int LA240_3 = input.LA(3);

            	            if ( (LA240_3==GT) ) {
            	                alt240=2;
            	            }
            	            else if ( (LA240_3==CODELITERAL_START||(LA240_3>=SUPER && LA240_3<=IDENTIFIER)||LA240_3==BOOLEAN||LA240_3==BYTE||LA240_3==CHAR||LA240_3==DOUBLE||LA240_3==FLOAT||LA240_3==INT||LA240_3==LONG||LA240_3==SHORT||LA240_3==VOID||LA240_3==LPAREN||(LA240_3>=BANG && LA240_3<=TILDE)||(LA240_3>=PLUSPLUS && LA240_3<=SUB)||LA240_3==128) ) {
            	                alt240=3;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return ret;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 240, 3, input);

            	                throw nvae;
            	            }
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return ret;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 240, 2, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return ret;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 240, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt240) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7328:17: '<' '<'
            	            {
            	            match(input,LT,FOLLOW_LT_in_shiftExpression35937); if (state.failed) return ret;
            	            match(input,LT,FOLLOW_LT_in_shiftExpression35939); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.LEFT_SHIFT;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7333:17: '>' '>' '>'
            	            {
            	            match(input,GT,FOLLOW_GT_in_shiftExpression35989); if (state.failed) return ret;
            	            match(input,GT,FOLLOW_GT_in_shiftExpression35991); if (state.failed) return ret;
            	            match(input,GT,FOLLOW_GT_in_shiftExpression35993); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.UNSIGNED_RIGHT_SHIFT;
            	                              
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7338:17: '>' '>'
            	            {
            	            match(input,GT,FOLLOW_GT_in_shiftExpression36043); if (state.failed) return ret;
            	            match(input,GT,FOLLOW_GT_in_shiftExpression36045); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.RIGHT_SHIFT;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_additiveExpression_in_shiftExpression36093);
            	    e2=additiveExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop241;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "shiftExpression"


    // $ANTLR start "additiveExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7351:1: additiveExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= multiplicativeExpression ( ( '+' | '-' ) e2= multiplicativeExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> additiveExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("additiveExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7360:5: (e1= multiplicativeExpression ( ( '+' | '-' ) e2= multiplicativeExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7361:9: e1= multiplicativeExpression ( ( '+' | '-' ) e2= multiplicativeExpression )*
            {
            pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression36204);
            e1=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7365:9: ( ( '+' | '-' ) e2= multiplicativeExpression )*
            loop243:
            do {
                int alt243=2;
                int LA243_0 = input.LA(1);

                if ( ((LA243_0>=PLUS && LA243_0<=SUB)) ) {
                    alt243=1;
                }


                switch (alt243) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7366:13: ( '+' | '-' ) e2= multiplicativeExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7366:13: ( '+' | '-' )
            	    int alt242=2;
            	    int LA242_0 = input.LA(1);

            	    if ( (LA242_0==PLUS) ) {
            	        alt242=1;
            	    }
            	    else if ( (LA242_0==SUB) ) {
            	        alt242=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return ret;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 242, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt242) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7367:17: '+'
            	            {
            	            match(input,PLUS,FOLLOW_PLUS_in_additiveExpression36260); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.PLUS;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7372:17: '-'
            	            {
            	            match(input,SUB,FOLLOW_SUB_in_additiveExpression36310); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.MINUS;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression36358);
            	    e2=multiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop243;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "additiveExpression"


    // $ANTLR start "multiplicativeExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7385:1: multiplicativeExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : e1= unaryExpression ( ( '*' | '/' | '%' ) e2= unaryExpression )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> multiplicativeExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e1 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e2 = null;



                    ruleStart("multiplicativeExpression");
                    BinaryOperator op = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7394:5: (e1= unaryExpression ( ( '*' | '/' | '%' ) e2= unaryExpression )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7395:9: e1= unaryExpression ( ( '*' | '/' | '%' ) e2= unaryExpression )*
            {
            pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression36469);
            e1=unaryExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = e1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7399:9: ( ( '*' | '/' | '%' ) e2= unaryExpression )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( ((LA245_0>=STAR && LA245_0<=SLASH)||LA245_0==PERCENT) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7400:13: ( '*' | '/' | '%' ) e2= unaryExpression
            	    {
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7400:13: ( '*' | '/' | '%' )
            	    int alt244=3;
            	    switch ( input.LA(1) ) {
            	    case STAR:
            	        {
            	        alt244=1;
            	        }
            	        break;
            	    case SLASH:
            	        {
            	        alt244=2;
            	        }
            	        break;
            	    case PERCENT:
            	        {
            	        alt244=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return ret;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 244, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt244) {
            	        case 1 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7401:17: '*'
            	            {
            	            match(input,STAR,FOLLOW_STAR_in_multiplicativeExpression36525); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.MULTIPLY;
            	                              
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7406:17: '/'
            	            {
            	            match(input,SLASH,FOLLOW_SLASH_in_multiplicativeExpression36575); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.DIVIDE;
            	                              
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7411:17: '%'
            	            {
            	            match(input,PERCENT,FOLLOW_PERCENT_in_multiplicativeExpression36625); if (state.failed) return ret;
            	            if (  true  ) {

            	                                  op = BinaryOperator.MODULUS;
            	                              
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression36673);
            	    e2=unaryExpression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeBinaryExpressionNodeWithUnions(ret, e2, op));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "multiplicativeExpression"


    // $ANTLR start "unaryExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7424:1: unaryExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : ( '+' e= unaryExpression | '-' intLiteral[true] | '-' longLiteral[true] | '-' e= unaryExpression | '++' e= unaryExpression | '--' e= unaryExpression | unaryExpressionNotPlusMinus );
    public final NodeUnion<? extends NonAssignmentExpressionNode> unaryExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> e = null;

        NodeUnion<? extends IntLiteralNode> intLiteral417 = null;

        NodeUnion<? extends LongLiteralNode> longLiteral418 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> unaryExpressionNotPlusMinus419 = null;



                    ruleStart("unaryExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7436:5: ( '+' e= unaryExpression | '-' intLiteral[true] | '-' longLiteral[true] | '-' e= unaryExpression | '++' e= unaryExpression | '--' e= unaryExpression | unaryExpressionNotPlusMinus )
            int alt246=7;
            alt246 = dfa246.predict(input);
            switch (alt246) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7437:9: '+' e= unaryExpression
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_unaryExpression36784); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression36789);
                    e=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryExpressionNodeWithUnions(
                                      e,
                                      UnaryOperator.UNARY_PLUS));
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7444:9: '-' intLiteral[true]
                    {
                    match(input,SUB,FOLLOW_SUB_in_unaryExpression36823); if (state.failed) return ret;
                    pushFollow(FOLLOW_intLiteral_in_unaryExpression36825);
                    intLiteral417=intLiteral(true);

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = intLiteral417;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7449:9: '-' longLiteral[true]
                    {
                    match(input,SUB,FOLLOW_SUB_in_unaryExpression36855); if (state.failed) return ret;
                    pushFollow(FOLLOW_longLiteral_in_unaryExpression36857);
                    longLiteral418=longLiteral(true);

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = longLiteral418;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7454:9: '-' e= unaryExpression
                    {
                    match(input,SUB,FOLLOW_SUB_in_unaryExpression36888); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression36892);
                    e=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryExpressionNodeWithUnions(
                                      e,
                                      UnaryOperator.UNARY_MINUS));
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7461:9: '++' e= unaryExpression
                    {
                    match(input,PLUSPLUS,FOLLOW_PLUSPLUS_in_unaryExpression36929); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression36933);
                    e=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryStatementExpressionNodeWithUnions(
                                      e,
                                      UnaryStatementOperator.PREFIX_INCREMENT));
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7468:9: '--' e= unaryExpression
                    {
                    match(input,SUBSUB,FOLLOW_SUBSUB_in_unaryExpression36962); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression36966);
                    e=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryStatementExpressionNodeWithUnions(
                                      e,
                                      UnaryStatementOperator.PREFIX_DECREMENT));
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7475:9: unaryExpressionNotPlusMinus
                    {
                    pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression37003);
                    unaryExpressionNotPlusMinus419=unaryExpressionNotPlusMinus();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = unaryExpressionNotPlusMinus419;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "unaryExpression"


    // $ANTLR start "unaryExpressionNotPlusMinus"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7481:1: unaryExpressionNotPlusMinus returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : ( '~' unaryExpression | '!' unaryExpression | castExpression | postfixExpression );
    public final NodeUnion<? extends NonAssignmentExpressionNode> unaryExpressionNotPlusMinus() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> unaryExpression420 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> unaryExpression421 = null;

        NodeUnion<? extends TypeCastNode> castExpression422 = null;

        NodeUnion<? extends NonAssignmentExpressionNode> postfixExpression423 = null;



                    ruleStart("unaryExpressionNotPlusMinus");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7489:5: ( '~' unaryExpression | '!' unaryExpression | castExpression | postfixExpression )
            int alt247=4;
            alt247 = dfa247.predict(input);
            switch (alt247) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7490:9: '~' unaryExpression
                    {
                    match(input,TILDE,FOLLOW_TILDE_in_unaryExpressionNotPlusMinus37084); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus37086);
                    unaryExpression420=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryExpressionNodeWithUnions(
                                      unaryExpression420,
                                      UnaryOperator.BITWISE_COMPLEMENT));
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7497:9: '!' unaryExpression
                    {
                    match(input,BANG,FOLLOW_BANG_in_unaryExpressionNotPlusMinus37123); if (state.failed) return ret;
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus37125);
                    unaryExpression421=unaryExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnaryExpressionNodeWithUnions(
                                      unaryExpression421,
                                      UnaryOperator.LOGICAL_COMPLEMENT));
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7504:9: castExpression
                    {
                    pushFollow(FOLLOW_castExpression_in_unaryExpressionNotPlusMinus37162);
                    castExpression422=castExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = castExpression422;
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7509:9: postfixExpression
                    {
                    pushFollow(FOLLOW_postfixExpression_in_unaryExpressionNotPlusMinus37191);
                    postfixExpression423=postfixExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = postfixExpression423;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "unaryExpressionNotPlusMinus"


    // $ANTLR start "castExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7515:1: castExpression returns [NodeUnion<? extends TypeCastNode> ret] : '(' type ')' unaryExpressionNotPlusMinus ;
    public final NodeUnion<? extends TypeCastNode> castExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeCastNode> ret = null;

        NodeUnion<? extends NonAssignmentExpressionNode> unaryExpressionNotPlusMinus424 = null;

        NodeUnion<? extends TypeNode> type425 = null;



                    ruleStart("castExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7523:5: ( '(' type ')' unaryExpressionNotPlusMinus )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7524:9: '(' type ')' unaryExpressionNotPlusMinus
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_castExpression37272); if (state.failed) return ret;
            pushFollow(FOLLOW_type_in_castExpression37274);
            type425=type();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_castExpression37276); if (state.failed) return ret;
            pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_castExpression37278);
            unaryExpressionNotPlusMinus424=unaryExpressionNotPlusMinus();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeTypeCastNodeWithUnions(
                              unaryExpressionNotPlusMinus424,
                              type425));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "castExpression"


    // $ANTLR start "postfixExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7532:1: postfixExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] | primary ) ( '++' | '--' )* ;
    public final NodeUnion<? extends NonAssignmentExpressionNode> postfixExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NonAssignmentExpressionNode> ret = null;

        NodeUnion<? extends Node> splice426 = null;

        NodeUnion<? extends PrimaryExpressionNode> primary427 = null;



                    ruleStart("postfixExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7540:5: ( ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] | primary ) ( '++' | '--' )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7541:9: ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] | primary ) ( '++' | '--' )*
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7541:9: ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] | primary )
            int alt248=2;
            alt248 = dfa248.predict(input);
            switch (alt248) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7542:13: splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_postfixExpression37370);
                    splice426=splice(NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class));

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice426 != null) // TODO: fix this with error nodes
                                          ret = splice426.castNodeType(factory, NonAssignmentExpressionNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7548:13: primary
                    {
                    pushFollow(FOLLOW_primary_in_postfixExpression37409);
                    primary427=primary();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = primary427;
                                  
                    }

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7553:9: ( '++' | '--' )*
            loop249:
            do {
                int alt249=3;
                int LA249_0 = input.LA(1);

                if ( (LA249_0==PLUSPLUS) ) {
                    alt249=1;
                }
                else if ( (LA249_0==SUBSUB) ) {
                    alt249=2;
                }


                switch (alt249) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7554:13: '++'
            	    {
            	    match(input,PLUSPLUS,FOLLOW_PLUSPLUS_in_postfixExpression37457); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeUnaryStatementExpressionNodeWithUnions(
            	                              ret, UnaryStatementOperator.POSTFIX_INCREMENT));
            	                  
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7560:13: '--'
            	    {
            	    match(input,SUBSUB,FOLLOW_SUBSUB_in_postfixExpression37495); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeUnaryStatementExpressionNodeWithUnions(
            	                              ret, UnaryStatementOperator.POSTFIX_DECREMENT));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "postfixExpression"

    protected static class primary_scope {
        NodeUnion<? extends PrimaryExpressionNode> result;
    }
    protected Stack primary_stack = new Stack();


    // $ANTLR start "primary"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7568:1: primary returns [NodeUnion<? extends PrimaryExpressionNode> ret] : ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] | arrayCreator | restrictedPrimary ) ( primarySuffix )* ;
    public final NodeUnion<? extends PrimaryExpressionNode> primary() throws RecognitionException {
        Rule_stack.push(new Rule_scope());
        primary_stack.push(new primary_scope());
        NodeUnion<? extends PrimaryExpressionNode> ret = null;

        NodeUnion<? extends Node> splice428 = null;

        NodeUnion<? extends ArrayCreationNode> arrayCreator429 = null;

        NodeUnion<? extends RestrictedPrimaryExpressionNode> restrictedPrimary430 = null;

        NodeUnion<? extends RestrictedPrimaryExpressionNode> primarySuffix431 = null;



                    ruleStart("primary");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7581:5: ( ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] | arrayCreator | restrictedPrimary ) ( primarySuffix )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7582:9: ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] | arrayCreator | restrictedPrimary ) ( primarySuffix )*
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7582:9: ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] | arrayCreator | restrictedPrimary )
            int alt250=3;
            alt250 = dfa250.predict(input);
            switch (alt250) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7583:13: splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_primary37632);
                    splice428=splice(PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class));

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice428 != null) // TODO: fix this with error nodes
                                          ret = splice428.castNodeType(factory, PrimaryExpressionNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7589:13: arrayCreator
                    {
                    pushFollow(FOLLOW_arrayCreator_in_primary37671);
                    arrayCreator429=arrayCreator();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ((primary_scope)primary_stack.peek()).result = arrayCreator429;
                                  
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7594:13: restrictedPrimary
                    {
                    pushFollow(FOLLOW_restrictedPrimary_in_primary37709);
                    restrictedPrimary430=restrictedPrimary();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ((primary_scope)primary_stack.peek()).result = restrictedPrimary430;
                                  
                    }

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7599:9: ( primarySuffix )*
            loop251:
            do {
                int alt251=2;
                alt251 = dfa251.predict(input);
                switch (alt251) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7600:13: primarySuffix
            	    {
            	    pushFollow(FOLLOW_primarySuffix_in_primary37757);
            	    primarySuffix431=primarySuffix();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ((primary_scope)primary_stack.peek()).result = primarySuffix431;
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);

            if (  true  ) {

                          ret = ((primary_scope)primary_stack.peek()).result;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();
            primary_stack.pop();
        }
        return ret;
    }
    // $ANTLR end "primary"


    // $ANTLR start "restrictedPrimary"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7610:1: restrictedPrimary returns [NodeUnion<? extends RestrictedPrimaryExpressionNode> ret] : ( splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)] | ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName ) ( arrayAccess[ret] )? );
    public final NodeUnion<? extends RestrictedPrimaryExpressionNode> restrictedPrimary() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends RestrictedPrimaryExpressionNode> ret = null;

        NodeUnion<? extends Node> splice432 = null;

        NodeUnion<? extends LiteralNode<?>> lexicalLiteral433 = null;

        NodeUnion<? extends ClassLiteralNode> primitiveClassLiteral434 = null;

        NodeUnion<? extends ClassLiteralNode> declaredClassLiteral435 = null;

        NodeUnion<? extends ClassLiteralNode> voidClassLiteral436 = null;

        NodeUnion<? extends ThisNode> thisClause437 = null;

        NodeUnion<? extends ParenthesizedExpressionNode> parenthesizedExpression438 = null;

        NodeUnion<? extends UnqualifiedClassInstantiationNode> unqualifiedClassInstantiation439 = null;

        NodeUnion<? extends SuperMethodInvocationNode> superMethodInvocation440 = null;

        NodeUnion<? extends SuperFieldAccessNode> superFieldAccess441 = null;

        NodeUnion<? extends MethodInvocationNode> methodInvocationByName442 = null;

        NodeUnion<? extends MethodInvocationNode> typeQualifiedTypeArgumentMethodInvocation443 = null;

        NodeUnion<? extends VariableAccessNode> variableAccessByName444 = null;

        NodeUnion<? extends ArrayAccessNode> arrayAccess445 = null;



                    ruleStart("restrictedPrimary");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7618:5: ( splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)] | ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName ) ( arrayAccess[ret] )? )
            int alt254=2;
            alt254 = dfa254.predict(input);
            switch (alt254) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7619:9: splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_restrictedPrimary37860);
                    splice432=splice(RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class));

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice432 != null) // TODO: fix this with error nodes
                                      ret = splice432.castNodeType(factory, RestrictedPrimaryExpressionNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7625:9: ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName ) ( arrayAccess[ret] )?
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7625:9: ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName )
                    int alt252=12;
                    alt252 = dfa252.predict(input);
                    switch (alt252) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7626:13: lexicalLiteral
                            {
                            pushFollow(FOLLOW_lexicalLiteral_in_restrictedPrimary37901);
                            lexicalLiteral433=lexicalLiteral();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = lexicalLiteral433;
                                          
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7631:13: primitiveClassLiteral
                            {
                            pushFollow(FOLLOW_primitiveClassLiteral_in_restrictedPrimary37939);
                            primitiveClassLiteral434=primitiveClassLiteral();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = primitiveClassLiteral434;
                                          
                            }

                            }
                            break;
                        case 3 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7636:13: declaredClassLiteral
                            {
                            pushFollow(FOLLOW_declaredClassLiteral_in_restrictedPrimary37977);
                            declaredClassLiteral435=declaredClassLiteral();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = declaredClassLiteral435;
                                          
                            }

                            }
                            break;
                        case 4 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7641:13: voidClassLiteral
                            {
                            pushFollow(FOLLOW_voidClassLiteral_in_restrictedPrimary38015);
                            voidClassLiteral436=voidClassLiteral();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = voidClassLiteral436;
                                          
                            }

                            }
                            break;
                        case 5 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7646:13: thisClause
                            {
                            pushFollow(FOLLOW_thisClause_in_restrictedPrimary38053);
                            thisClause437=thisClause();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = thisClause437;
                                          
                            }

                            }
                            break;
                        case 6 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7651:13: parenthesizedExpression
                            {
                            pushFollow(FOLLOW_parenthesizedExpression_in_restrictedPrimary38091);
                            parenthesizedExpression438=parenthesizedExpression();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = parenthesizedExpression438;
                                          
                            }

                            }
                            break;
                        case 7 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7656:13: unqualifiedClassInstantiation
                            {
                            pushFollow(FOLLOW_unqualifiedClassInstantiation_in_restrictedPrimary38129);
                            unqualifiedClassInstantiation439=unqualifiedClassInstantiation();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = unqualifiedClassInstantiation439;
                                          
                            }

                            }
                            break;
                        case 8 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7661:13: superMethodInvocation
                            {
                            pushFollow(FOLLOW_superMethodInvocation_in_restrictedPrimary38167);
                            superMethodInvocation440=superMethodInvocation();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = superMethodInvocation440;
                                          
                            }

                            }
                            break;
                        case 9 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7666:13: superFieldAccess
                            {
                            pushFollow(FOLLOW_superFieldAccess_in_restrictedPrimary38205);
                            superFieldAccess441=superFieldAccess();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = superFieldAccess441;
                                          
                            }

                            }
                            break;
                        case 10 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7671:13: methodInvocationByName
                            {
                            pushFollow(FOLLOW_methodInvocationByName_in_restrictedPrimary38243);
                            methodInvocationByName442=methodInvocationByName();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = methodInvocationByName442;
                                          
                            }

                            }
                            break;
                        case 11 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7676:13: typeQualifiedTypeArgumentMethodInvocation
                            {
                            pushFollow(FOLLOW_typeQualifiedTypeArgumentMethodInvocation_in_restrictedPrimary38281);
                            typeQualifiedTypeArgumentMethodInvocation443=typeQualifiedTypeArgumentMethodInvocation();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = typeQualifiedTypeArgumentMethodInvocation443;
                                          
                            }

                            }
                            break;
                        case 12 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7681:13: variableAccessByName
                            {
                            pushFollow(FOLLOW_variableAccessByName_in_restrictedPrimary38319);
                            variableAccessByName444=variableAccessByName();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = variableAccessByName444;
                                          
                            }

                            }
                            break;

                    }

                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7687:9: ( arrayAccess[ret] )?
                    int alt253=2;
                    int LA253_0 = input.LA(1);

                    if ( (LA253_0==LBRACKET) ) {
                        alt253=1;
                    }
                    switch (alt253) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7688:13: arrayAccess[ret]
                            {
                            pushFollow(FOLLOW_arrayAccess_in_restrictedPrimary38368);
                            arrayAccess445=arrayAccess(ret);

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = arrayAccess445;
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "restrictedPrimary"


    // $ANTLR start "primarySuffix"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7697:1: primarySuffix returns [NodeUnion<? extends RestrictedPrimaryExpressionNode> ret] : ( qualifiedClassInstantiationPrimarySuffix | typeArgumentMethodInvocationSuffix | fieldAccessPrimarySuffix ) ( arrayAccess[ret] )? ;
    public final NodeUnion<? extends RestrictedPrimaryExpressionNode> primarySuffix() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends RestrictedPrimaryExpressionNode> ret = null;

        NodeUnion<? extends QualifiedClassInstantiationNode> qualifiedClassInstantiationPrimarySuffix446 = null;

        NodeUnion<? extends RestrictedPrimaryExpressionNode> typeArgumentMethodInvocationSuffix447 = null;

        NodeUnion<? extends RestrictedPrimaryExpressionNode> fieldAccessPrimarySuffix448 = null;

        NodeUnion<? extends ArrayAccessNode> arrayAccess449 = null;



                    ruleStart("primarySuffix");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7705:5: ( ( qualifiedClassInstantiationPrimarySuffix | typeArgumentMethodInvocationSuffix | fieldAccessPrimarySuffix ) ( arrayAccess[ret] )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7706:9: ( qualifiedClassInstantiationPrimarySuffix | typeArgumentMethodInvocationSuffix | fieldAccessPrimarySuffix ) ( arrayAccess[ret] )?
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7706:9: ( qualifiedClassInstantiationPrimarySuffix | typeArgumentMethodInvocationSuffix | fieldAccessPrimarySuffix )
            int alt255=3;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==DOT) ) {
                int LA255_1 = input.LA(2);

                if ( (synpred366_BsjAntlr()) ) {
                    alt255=1;
                }
                else if ( (synpred367_BsjAntlr()) ) {
                    alt255=2;
                }
                else if ( (true) ) {
                    alt255=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 255, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7708:13: qualifiedClassInstantiationPrimarySuffix
                    {
                    pushFollow(FOLLOW_qualifiedClassInstantiationPrimarySuffix_in_primarySuffix38495);
                    qualifiedClassInstantiationPrimarySuffix446=qualifiedClassInstantiationPrimarySuffix();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = qualifiedClassInstantiationPrimarySuffix446;
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7714:13: typeArgumentMethodInvocationSuffix
                    {
                    pushFollow(FOLLOW_typeArgumentMethodInvocationSuffix_in_primarySuffix38546);
                    typeArgumentMethodInvocationSuffix447=typeArgumentMethodInvocationSuffix();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = typeArgumentMethodInvocationSuffix447;
                                  
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7720:13: fieldAccessPrimarySuffix
                    {
                    pushFollow(FOLLOW_fieldAccessPrimarySuffix_in_primarySuffix38597);
                    fieldAccessPrimarySuffix448=fieldAccessPrimarySuffix();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = fieldAccessPrimarySuffix448;
                                  
                    }

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7725:9: ( arrayAccess[ret] )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==LBRACKET) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7726:13: arrayAccess[ret]
                    {
                    pushFollow(FOLLOW_arrayAccess_in_primarySuffix38645);
                    arrayAccess449=arrayAccess(ret);

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = arrayAccess449;
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "primarySuffix"


    // $ANTLR start "thisClause"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7733:1: thisClause returns [NodeUnion<? extends ThisNode> ret] : ( unparameterizedType '.' )? THIS ;
    public final NodeUnion<? extends ThisNode> thisClause() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ThisNode> ret = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType450 = null;



                    ruleStart("thisClause");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7741:5: ( ( unparameterizedType '.' )? THIS )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7742:9: ( unparameterizedType '.' )? THIS
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7742:9: ( unparameterizedType '.' )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt257=1;
            }
            else if ( (LA257_0==IDENTIFIER) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7742:10: unparameterizedType '.'
                    {
                    pushFollow(FOLLOW_unparameterizedType_in_thisClause38740);
                    unparameterizedType450=unparameterizedType();

                    state._fsp--;
                    if (state.failed) return ret;
                    match(input,DOT,FOLLOW_DOT_in_thisClause38742); if (state.failed) return ret;

                    }
                    break;

            }

            match(input,THIS,FOLLOW_THIS_in_thisClause38746); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeThisNodeWithUnions((unparameterizedType450!=null?unparameterizedType450.ret:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "thisClause"


    // $ANTLR start "parenthesizedExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7748:1: parenthesizedExpression returns [NodeUnion<? extends ParenthesizedExpressionNode> ret] : parExpression ;
    public final NodeUnion<? extends ParenthesizedExpressionNode> parenthesizedExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ParenthesizedExpressionNode> ret = null;

        NodeUnion<? extends ExpressionNode> parExpression451 = null;



                    ruleStart("parenthesizedExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7756:5: ( parExpression )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7757:9: parExpression
            {
            pushFollow(FOLLOW_parExpression_in_parenthesizedExpression38824);
            parExpression451=parExpression();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeParenthesizedExpressionNodeWithUnions(parExpression451));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parenthesizedExpression"


    // $ANTLR start "unqualifiedClassInstantiation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7763:1: unqualifiedClassInstantiation returns [NodeUnion<? extends UnqualifiedClassInstantiationNode> ret] : ( splice[UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList()] | NEW optionalTypeArguments classOrInterfaceType arguments ( anonymousClassBody )? );
    public final NodeUnion<? extends UnqualifiedClassInstantiationNode> unqualifiedClassInstantiation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends UnqualifiedClassInstantiationNode> ret = null;

        NodeUnion<? extends Node> splice452 = null;

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType453 = null;

        NodeUnion<? extends TypeArgumentListNode> optionalTypeArguments454 = null;

        NodeUnion<? extends ExpressionListNode> arguments455 = null;

        NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBody456 = null;



                    ruleStart("unqualifiedClassInstantiation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7771:5: ( splice[UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList()] | NEW optionalTypeArguments classOrInterfaceType arguments ( anonymousClassBody )? )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt259=1;
            }
            else if ( (LA259_0==NEW) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7772:9: splice[UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_unqualifiedClassInstantiation38902);
                    splice452=splice(UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice452 != null) // TODO: fix this with error nodes
                                      ret = splice452.castNodeType(factory, UnqualifiedClassInstantiationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7778:9: NEW optionalTypeArguments classOrInterfaceType arguments ( anonymousClassBody )?
                    {
                    match(input,NEW,FOLLOW_NEW_in_unqualifiedClassInstantiation38929); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalTypeArguments_in_unqualifiedClassInstantiation38939);
                    optionalTypeArguments454=optionalTypeArguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_classOrInterfaceType_in_unqualifiedClassInstantiation38949);
                    classOrInterfaceType453=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_arguments_in_unqualifiedClassInstantiation38951);
                    arguments455=arguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7781:9: ( anonymousClassBody )?
                    int alt258=2;
                    int LA258_0 = input.LA(1);

                    if ( (LA258_0==128) && ((configuration.getCodeSplicingSupported()))) {
                        alt258=1;
                    }
                    else if ( (LA258_0==LBRACE) ) {
                        alt258=1;
                    }
                    switch (alt258) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: anonymousClassBody
                            {
                            pushFollow(FOLLOW_anonymousClassBody_in_unqualifiedClassInstantiation38961);
                            anonymousClassBody456=anonymousClassBody();

                            state._fsp--;
                            if (state.failed) return ret;

                            }
                            break;

                    }

                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeUnqualifiedClassInstantiationNodeWithUnions(
                                          (classOrInterfaceType453!=null?classOrInterfaceType453.ret:null),
                                          optionalTypeArguments454,
                                          arguments455,
                                          anonymousClassBody456));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "unqualifiedClassInstantiation"


    // $ANTLR start "superFieldAccess"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7797:1: superFieldAccess returns [NodeUnion<? extends SuperFieldAccessNode> ret] : ( splice[SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList()] | ( unparameterizedType '.' )? SUPER '.' identifier );
    public final NodeUnion<? extends SuperFieldAccessNode> superFieldAccess() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SuperFieldAccessNode> ret = null;

        NodeUnion<? extends Node> splice457 = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType458 = null;

        BsjAntlrParser.identifier_return identifier459 = null;



                    ruleStart("superFieldAccess");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7805:5: ( splice[SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList()] | ( unparameterizedType '.' )? SUPER '.' identifier )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA261_1 = input.LA(2);

                if ( ((synpred372_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt261=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt261=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 261, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA261_0==SUPER||LA261_0==IDENTIFIER) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7806:9: splice[SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_superFieldAccess39046);
                    splice457=splice(SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice457 != null) // TODO: fix this with error nodes
                                      ret = splice457.castNodeType(factory, SuperFieldAccessNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7812:9: ( unparameterizedType '.' )? SUPER '.' identifier
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7812:9: ( unparameterizedType '.' )?
                    int alt260=2;
                    int LA260_0 = input.LA(1);

                    if ( (LA260_0==128) && ((configuration.getCodeSplicingSupported()))) {
                        alt260=1;
                    }
                    else if ( (LA260_0==IDENTIFIER) ) {
                        alt260=1;
                    }
                    switch (alt260) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7812:10: unparameterizedType '.'
                            {
                            pushFollow(FOLLOW_unparameterizedType_in_superFieldAccess39074);
                            unparameterizedType458=unparameterizedType();

                            state._fsp--;
                            if (state.failed) return ret;
                            match(input,DOT,FOLLOW_DOT_in_superFieldAccess39076); if (state.failed) return ret;

                            }
                            break;

                    }

                    match(input,SUPER,FOLLOW_SUPER_in_superFieldAccess39080); if (state.failed) return ret;
                    match(input,DOT,FOLLOW_DOT_in_superFieldAccess39082); if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_superFieldAccess39084);
                    identifier459=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeSuperFieldAccessNodeWithUnions(
                                          (unparameterizedType458!=null?unparameterizedType458.ret:null),
                                          (identifier459!=null?identifier459.ret:null)));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "superFieldAccess"


    // $ANTLR start "methodInvocationByName"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7826:1: methodInvocationByName returns [NodeUnion<? extends MethodInvocationNode> ret] : a= identifier ( '.' b= identifier )* arguments ;
    public final NodeUnion<? extends MethodInvocationNode> methodInvocationByName() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodInvocationNode> ret = null;

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;

        NodeUnion<? extends ExpressionListNode> arguments460 = null;



                    ruleStart("methodInvocationByName");
                    NodeUnion<? extends RestrictedPrimaryExpressionNode> qualifier = 
                            factory.makeNormalNodeUnion(null);
                    NodeUnion<? extends IdentifierNode> ident = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7838:5: (a= identifier ( '.' b= identifier )* arguments )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7839:9: a= identifier ( '.' b= identifier )* arguments
            {
            pushFollow(FOLLOW_identifier_in_methodInvocationByName39170);
            a=identifier();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ident = (a!=null?a.ret:null);
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7843:9: ( '.' b= identifier )*
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==DOT) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7844:13: '.' b= identifier
            	    {
            	    match(input,DOT,FOLLOW_DOT_in_methodInvocationByName39204); if (state.failed) return ret;
            	    pushFollow(FOLLOW_identifier_in_methodInvocationByName39208);
            	    b=identifier();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      qualifier = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(qualifier, ident));
            	                      ident = (b!=null?b.ret:null);
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);

            pushFollow(FOLLOW_arguments_in_methodInvocationByName39243);
            arguments460=arguments();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeMethodInvocationNodeWithUnions(
                                  qualifier,
                                  ident,
                                  arguments460,
                                  factory.makeNormalNodeUnion(factory.makeReferenceTypeListNode())));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "methodInvocationByName"


    // $ANTLR start "superMethodInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7866:1: superMethodInvocation returns [NodeUnion<? extends SuperMethodInvocationNode> ret] : ( splice[SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList()] | ( unparameterizedType '.' )? SUPER '.' optionalNonWildcardTypeArguments identifier arguments );
    public final NodeUnion<? extends SuperMethodInvocationNode> superMethodInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends SuperMethodInvocationNode> ret = null;

        NodeUnion<? extends Node> splice461 = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType462 = null;

        BsjAntlrParser.identifier_return identifier463 = null;

        NodeUnion<? extends ExpressionListNode> arguments464 = null;

        NodeUnion<? extends ReferenceTypeListNode> optionalNonWildcardTypeArguments465 = null;



                    ruleStart("superMethodInvocation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7874:5: ( splice[SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList()] | ( unparameterizedType '.' )? SUPER '.' optionalNonWildcardTypeArguments identifier arguments )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA264_1 = input.LA(2);

                if ( ((synpred375_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt264=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt264=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 264, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA264_0==SUPER||LA264_0==IDENTIFIER) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7875:9: splice[SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_superMethodInvocation39327);
                    splice461=splice(SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice461 != null) // TODO: fix this with error nodes
                                      ret = splice461.castNodeType(factory, SuperMethodInvocationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7881:9: ( unparameterizedType '.' )? SUPER '.' optionalNonWildcardTypeArguments identifier arguments
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7881:9: ( unparameterizedType '.' )?
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==128) && ((configuration.getCodeSplicingSupported()))) {
                        alt263=1;
                    }
                    else if ( (LA263_0==IDENTIFIER) ) {
                        alt263=1;
                    }
                    switch (alt263) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7881:10: unparameterizedType '.'
                            {
                            pushFollow(FOLLOW_unparameterizedType_in_superMethodInvocation39355);
                            unparameterizedType462=unparameterizedType();

                            state._fsp--;
                            if (state.failed) return ret;
                            match(input,DOT,FOLLOW_DOT_in_superMethodInvocation39357); if (state.failed) return ret;

                            }
                            break;

                    }

                    match(input,SUPER,FOLLOW_SUPER_in_superMethodInvocation39369); if (state.failed) return ret;
                    match(input,DOT,FOLLOW_DOT_in_superMethodInvocation39371); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalNonWildcardTypeArguments_in_superMethodInvocation39381);
                    optionalNonWildcardTypeArguments465=optionalNonWildcardTypeArguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_identifier_in_superMethodInvocation39391);
                    identifier463=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    pushFollow(FOLLOW_arguments_in_superMethodInvocation39393);
                    arguments464=arguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeSuperMethodInvocationNodeWithUnions(
                                          (unparameterizedType462!=null?unparameterizedType462.ret:null),
                                          (identifier463!=null?identifier463.ret:null),
                                          arguments464,
                                          optionalNonWildcardTypeArguments465));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "superMethodInvocation"


    // $ANTLR start "typeQualifiedTypeArgumentMethodInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7896:1: typeQualifiedTypeArgumentMethodInvocation returns [NodeUnion<? extends MethodInvocationNode> ret] : a= identifier ( '.' b= identifier )* '.' nonWildcardTypeArguments c= identifier arguments ;
    public final NodeUnion<? extends MethodInvocationNode> typeQualifiedTypeArgumentMethodInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodInvocationNode> ret = null;

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;

        BsjAntlrParser.identifier_return c = null;

        NodeUnion<? extends ExpressionListNode> arguments466 = null;

        NodeUnion<? extends ReferenceTypeListNode> nonWildcardTypeArguments467 = null;



                    ruleStart("typeQualifiedTypeArgumentMethodInvocation");
                    NodeUnion<? extends RestrictedPrimaryExpressionNode> qualifier = 
                            factory.makeNormalNodeUnion(null);
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7906:5: (a= identifier ( '.' b= identifier )* '.' nonWildcardTypeArguments c= identifier arguments )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7907:9: a= identifier ( '.' b= identifier )* '.' nonWildcardTypeArguments c= identifier arguments
            {
            pushFollow(FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39475);
            a=identifier();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          qualifier = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(null, (a!=null?a.ret:null)));
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7911:9: ( '.' b= identifier )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==DOT) ) {
                    int LA265_1 = input.LA(2);

                    if ( (LA265_1==IDENTIFIER||LA265_1==128) ) {
                        alt265=1;
                    }


                }


                switch (alt265) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7912:13: '.' b= identifier
            	    {
            	    match(input,DOT,FOLLOW_DOT_in_typeQualifiedTypeArgumentMethodInvocation39509); if (state.failed) return ret;
            	    pushFollow(FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39513);
            	    b=identifier();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      qualifier = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(qualifier, (b!=null?b.ret:null)));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);

            match(input,DOT,FOLLOW_DOT_in_typeQualifiedTypeArgumentMethodInvocation39548); if (state.failed) return ret;
            pushFollow(FOLLOW_nonWildcardTypeArguments_in_typeQualifiedTypeArgumentMethodInvocation39550);
            nonWildcardTypeArguments467=nonWildcardTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39554);
            c=identifier();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_arguments_in_typeQualifiedTypeArgumentMethodInvocation39556);
            arguments466=arguments();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeMethodInvocationNodeWithUnions(
                                  qualifier,
                                  (c!=null?c.ret:null),
                                  arguments466,
                                  nonWildcardTypeArguments467));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeQualifiedTypeArgumentMethodInvocation"


    // $ANTLR start "qualifiedClassInstantiationPrimarySuffix"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7930:1: qualifiedClassInstantiationPrimarySuffix returns [NodeUnion<? extends QualifiedClassInstantiationNode> ret] : '.' NEW constructorTypeArguments= optionalTypeArguments identifier classTypeArguments= optionalTypeArguments arguments ( anonymousClassBody )? ;
    public final NodeUnion<? extends QualifiedClassInstantiationNode> qualifiedClassInstantiationPrimarySuffix() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends QualifiedClassInstantiationNode> ret = null;

        NodeUnion<? extends TypeArgumentListNode> constructorTypeArguments = null;

        NodeUnion<? extends TypeArgumentListNode> classTypeArguments = null;

        BsjAntlrParser.identifier_return identifier468 = null;

        NodeUnion<? extends ExpressionListNode> arguments469 = null;

        NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBody470 = null;



                    ruleStart("qualifiedClassInstantiationPrimarySuffix");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7938:5: ( '.' NEW constructorTypeArguments= optionalTypeArguments identifier classTypeArguments= optionalTypeArguments arguments ( anonymousClassBody )? )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7939:9: '.' NEW constructorTypeArguments= optionalTypeArguments identifier classTypeArguments= optionalTypeArguments arguments ( anonymousClassBody )?
            {
            match(input,DOT,FOLLOW_DOT_in_qualifiedClassInstantiationPrimarySuffix39637); if (state.failed) return ret;
            match(input,NEW,FOLLOW_NEW_in_qualifiedClassInstantiationPrimarySuffix39639); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalTypeArguments_in_qualifiedClassInstantiationPrimarySuffix39651);
            constructorTypeArguments=optionalTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_qualifiedClassInstantiationPrimarySuffix39661);
            identifier468=identifier();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_optionalTypeArguments_in_qualifiedClassInstantiationPrimarySuffix39673);
            classTypeArguments=optionalTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_arguments_in_qualifiedClassInstantiationPrimarySuffix39683);
            arguments469=arguments();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7944:9: ( anonymousClassBody )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt266=1;
            }
            else if ( (LA266_0==LBRACE) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: anonymousClassBody
                    {
                    pushFollow(FOLLOW_anonymousClassBody_in_qualifiedClassInstantiationPrimarySuffix39693);
                    anonymousClassBody470=anonymousClassBody();

                    state._fsp--;
                    if (state.failed) return ret;

                    }
                    break;

            }

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeQualifiedClassInstantiationNodeWithUnions(
                                  deepCopyUnion(((primary_scope)primary_stack.peek()).result, PrimaryExpressionNode.class),
                                  (identifier468!=null?identifier468.ret:null),
                                  classTypeArguments,
                                  constructorTypeArguments,
                                  arguments469,
                                  anonymousClassBody470));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "qualifiedClassInstantiationPrimarySuffix"


    // $ANTLR start "fieldAccessPrimarySuffix"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7958:1: fieldAccessPrimarySuffix returns [NodeUnion<? extends RestrictedPrimaryExpressionNode> ret] : '.' identifier ;
    public final NodeUnion<? extends RestrictedPrimaryExpressionNode> fieldAccessPrimarySuffix() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends RestrictedPrimaryExpressionNode> ret = null;

        BsjAntlrParser.identifier_return identifier471 = null;



                    ruleStart("fieldAccessPrimarySuffix");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7966:5: ( '.' identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7967:9: '.' identifier
            {
            match(input,DOT,FOLLOW_DOT_in_fieldAccessPrimarySuffix39774); if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_fieldAccessPrimarySuffix39776);
            identifier471=identifier();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(
                                      deepCopyUnion(((primary_scope)primary_stack.peek()).result, PrimaryExpressionNode.class), (identifier471!=null?identifier471.ret:null)));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "fieldAccessPrimarySuffix"


    // $ANTLR start "typeArgumentMethodInvocationSuffix"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7978:1: typeArgumentMethodInvocationSuffix returns [NodeUnion<? extends RestrictedPrimaryExpressionNode> ret] : '.' optionalNonWildcardTypeArguments identifier arguments ;
    public final NodeUnion<? extends RestrictedPrimaryExpressionNode> typeArgumentMethodInvocationSuffix() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends RestrictedPrimaryExpressionNode> ret = null;

        BsjAntlrParser.identifier_return identifier472 = null;

        NodeUnion<? extends ExpressionListNode> arguments473 = null;

        NodeUnion<? extends ReferenceTypeListNode> optionalNonWildcardTypeArguments474 = null;



                    ruleStart("typeArgumentMethodInvocationSuffix");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7986:5: ( '.' optionalNonWildcardTypeArguments identifier arguments )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7987:9: '.' optionalNonWildcardTypeArguments identifier arguments
            {
            match(input,DOT,FOLLOW_DOT_in_typeArgumentMethodInvocationSuffix39858); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalNonWildcardTypeArguments_in_typeArgumentMethodInvocationSuffix39868);
            optionalNonWildcardTypeArguments474=optionalNonWildcardTypeArguments();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_identifier_in_typeArgumentMethodInvocationSuffix39878);
            identifier472=identifier();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_arguments_in_typeArgumentMethodInvocationSuffix39880);
            arguments473=arguments();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeMethodInvocationNodeWithUnions(
                                  deepCopyUnion(((primary_scope)primary_stack.peek()).result, PrimaryExpressionNode.class),
                                  (identifier472!=null?identifier472.ret:null),
                                  arguments473,
                                  optionalNonWildcardTypeArguments474));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "typeArgumentMethodInvocationSuffix"


    // $ANTLR start "variableAccessByName"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7999:1: variableAccessByName returns [NodeUnion<? extends VariableAccessNode> ret] : a= identifier ( '.' b= identifier )* ;
    public final NodeUnion<? extends VariableAccessNode> variableAccessByName() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableAccessNode> ret = null;

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;



                    ruleStart("variableAccessByName");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8007:5: (a= identifier ( '.' b= identifier )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8008:9: a= identifier ( '.' b= identifier )*
            {
            pushFollow(FOLLOW_identifier_in_variableAccessByName39960);
            a=identifier();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(null, (a!=null?a.ret:null)));
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8012:9: ( '.' b= identifier )*
            loop267:
            do {
                int alt267=2;
                alt267 = dfa267.predict(input);
                switch (alt267) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8013:13: '.' b= identifier
            	    {
            	    match(input,DOT,FOLLOW_DOT_in_variableAccessByName39994); if (state.failed) return ret;
            	    pushFollow(FOLLOW_identifier_in_variableAccessByName39998);
            	    b=identifier();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeVariableAccessNodeWithUnions(ret, (b!=null?b.ret:null)));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "variableAccessByName"


    // $ANTLR start "arrayAccess"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8020:1: arrayAccess[NodeUnion<? extends RestrictedPrimaryExpressionNode> in] returns [NodeUnion<? extends ArrayAccessNode> ret] : '[' a= expression ']' ( '[' b= expression ']' )* ;
    public final NodeUnion<? extends ArrayAccessNode> arrayAccess(NodeUnion<? extends RestrictedPrimaryExpressionNode> in) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ArrayAccessNode> ret = null;

        BsjAntlrParser.expression_return a = null;

        BsjAntlrParser.expression_return b = null;



                    ruleStart("arrayAccess");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8028:5: ( '[' a= expression ']' ( '[' b= expression ']' )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8029:9: '[' a= expression ']' ( '[' b= expression ']' )*
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayAccess40096); if (state.failed) return ret;
            pushFollow(FOLLOW_expression_in_arrayAccess40100);
            a=expression();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayAccess40102); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeArrayAccessNodeWithUnions(in, (a!=null?a.ret:null)));
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8033:9: ( '[' b= expression ']' )*
            loop268:
            do {
                int alt268=2;
                int LA268_0 = input.LA(1);

                if ( (LA268_0==LBRACKET) ) {
                    alt268=1;
                }


                switch (alt268) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8034:13: '[' b= expression ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayAccess40136); if (state.failed) return ret;
            	    pushFollow(FOLLOW_expression_in_arrayAccess40140);
            	    b=expression();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayAccess40142); if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeArrayAccessNodeWithUnions(ret, (b!=null?b.ret:null)));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop268;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayAccess"


    // $ANTLR start "declaredClassLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8041:1: declaredClassLiteral returns [NodeUnion<? extends ClassLiteralNode> ret] : unparameterizedType ( arrayTypeCounter )? '.' 'class' ;
    public final NodeUnion<? extends ClassLiteralNode> declaredClassLiteral() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassLiteralNode> ret = null;

        BsjAntlrParser.unparameterizedType_return unparameterizedType475 = null;

        int arrayTypeCounter476 = 0;



                    ruleStart("declaredClassLiteral");
                    NodeUnion<? extends LiteralizableTypeNode> typeNode = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8050:5: ( unparameterizedType ( arrayTypeCounter )? '.' 'class' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8051:9: unparameterizedType ( arrayTypeCounter )? '.' 'class'
            {
            pushFollow(FOLLOW_unparameterizedType_in_declaredClassLiteral40235);
            unparameterizedType475=unparameterizedType();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          typeNode = (unparameterizedType475!=null?unparameterizedType475.ret:null);
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8055:9: ( arrayTypeCounter )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==LBRACKET) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8056:13: arrayTypeCounter
                    {
                    pushFollow(FOLLOW_arrayTypeCounter_in_declaredClassLiteral40269);
                    arrayTypeCounter476=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      typeNode = wrapArrayLevels(typeNode, arrayTypeCounter476);
                                  
                    }

                    }
                    break;

            }

            match(input,DOT,FOLLOW_DOT_in_declaredClassLiteral40304); if (state.failed) return ret;
            match(input,CLASS,FOLLOW_CLASS_in_declaredClassLiteral40306); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeClassLiteralNodeWithUnions(typeNode));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "declaredClassLiteral"


    // $ANTLR start "primitiveClassLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8067:1: primitiveClassLiteral returns [NodeUnion<? extends ClassLiteralNode> ret] : primitiveType ( arrayTypeCounter )? '.' 'class' ;
    public final NodeUnion<? extends ClassLiteralNode> primitiveClassLiteral() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassLiteralNode> ret = null;

        NodeUnion<? extends PrimitiveTypeNode> primitiveType477 = null;

        int arrayTypeCounter478 = 0;



                    ruleStart("primitiveClassLiteral");
                    NodeUnion<? extends LiteralizableTypeNode> typeNode = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8076:5: ( primitiveType ( arrayTypeCounter )? '.' 'class' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8077:9: primitiveType ( arrayTypeCounter )? '.' 'class'
            {
            pushFollow(FOLLOW_primitiveType_in_primitiveClassLiteral40384);
            primitiveType477=primitiveType();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          typeNode = primitiveType477;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8081:9: ( arrayTypeCounter )?
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==LBRACKET) ) {
                alt270=1;
            }
            switch (alt270) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8082:13: arrayTypeCounter
                    {
                    pushFollow(FOLLOW_arrayTypeCounter_in_primitiveClassLiteral40418);
                    arrayTypeCounter478=arrayTypeCounter();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      typeNode = wrapArrayLevels(typeNode, arrayTypeCounter478);
                                  
                    }

                    }
                    break;

            }

            match(input,DOT,FOLLOW_DOT_in_primitiveClassLiteral40453); if (state.failed) return ret;
            match(input,CLASS,FOLLOW_CLASS_in_primitiveClassLiteral40455); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeClassLiteralNodeWithUnions(typeNode));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "primitiveClassLiteral"


    // $ANTLR start "voidClassLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8093:1: voidClassLiteral returns [NodeUnion<? extends ClassLiteralNode> ret] : 'void' '.' 'class' ;
    public final NodeUnion<? extends ClassLiteralNode> voidClassLiteral() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassLiteralNode> ret = null;


                    ruleStart("voidClassLiteral");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8101:5: ( 'void' '.' 'class' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8102:9: 'void' '.' 'class'
            {
            match(input,VOID,FOLLOW_VOID_in_voidClassLiteral40533); if (state.failed) return ret;
            match(input,DOT,FOLLOW_DOT_in_voidClassLiteral40535); if (state.failed) return ret;
            match(input,CLASS,FOLLOW_CLASS_in_voidClassLiteral40537); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeClassLiteralNodeWithUnions(
                                  factory.makeNormalNodeUnion(factory.makeVoidTypeNode())));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "voidClassLiteral"


    // $ANTLR start "arrayCreator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8114:1: arrayCreator returns [NodeUnion<? extends ArrayCreationNode> ret] : ( splice[ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList()] | ( arrayInitializerCreator | arrayInstantiatorCreator ) );
    public final NodeUnion<? extends ArrayCreationNode> arrayCreator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ArrayCreationNode> ret = null;

        NodeUnion<? extends Node> splice479 = null;

        NodeUnion<? extends ArrayInitializerCreationNode> arrayInitializerCreator480 = null;

        NodeUnion<? extends ArrayInstantiatorCreationNode> arrayInstantiatorCreator481 = null;



                    ruleStart("arrayCreator");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8122:5: ( splice[ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList()] | ( arrayInitializerCreator | arrayInstantiatorCreator ) )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt272=1;
            }
            else if ( (LA272_0==NEW) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }
            switch (alt272) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8123:9: splice[ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_arrayCreator40623);
                    splice479=splice(ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice479 != null) // TODO: fix this with error nodes
                                      ret = splice479.castNodeType(factory, ArrayCreationNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8129:9: ( arrayInitializerCreator | arrayInstantiatorCreator )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8129:9: ( arrayInitializerCreator | arrayInstantiatorCreator )
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==NEW) ) {
                        int LA271_1 = input.LA(2);

                        if ( (synpred384_BsjAntlr()) ) {
                            alt271=1;
                        }
                        else if ( (true) ) {
                            alt271=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return ret;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 271, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ret;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 271, 0, input);

                        throw nvae;
                    }
                    switch (alt271) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8130:13: arrayInitializerCreator
                            {
                            pushFollow(FOLLOW_arrayInitializerCreator_in_arrayCreator40664);
                            arrayInitializerCreator480=arrayInitializerCreator();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = arrayInitializerCreator480;
                                          
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8135:13: arrayInstantiatorCreator
                            {
                            pushFollow(FOLLOW_arrayInstantiatorCreator_in_arrayCreator40702);
                            arrayInstantiatorCreator481=arrayInstantiatorCreator();

                            state._fsp--;
                            if (state.failed) return ret;
                            if (  true  ) {

                                              ret = arrayInstantiatorCreator481;
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayCreator"


    // $ANTLR start "arrayInitializerCreator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8143:1: arrayInitializerCreator returns [NodeUnion<? extends ArrayInitializerCreationNode> ret] : NEW createdName '[' ']' ( '[' ']' )* arrayInitializer ;
    public final NodeUnion<? extends ArrayInitializerCreationNode> arrayInitializerCreator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ArrayInitializerCreationNode> ret = null;

        NodeUnion<? extends ArrayInitializerNode> arrayInitializer482 = null;

        NodeUnion<? extends BaseTypeNode> createdName483 = null;



                    ruleStart("arrayInitializerCreator");
                    int levels = 0;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8152:5: ( NEW createdName '[' ']' ( '[' ']' )* arrayInitializer )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8153:9: NEW createdName '[' ']' ( '[' ']' )* arrayInitializer
            {
            match(input,NEW,FOLLOW_NEW_in_arrayInitializerCreator40795); if (state.failed) return ret;
            pushFollow(FOLLOW_createdName_in_arrayInitializerCreator40797);
            createdName483=createdName();

            state._fsp--;
            if (state.failed) return ret;
            match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayInitializerCreator40807); if (state.failed) return ret;
            match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayInitializerCreator40809); if (state.failed) return ret;
            if (  true  ) {

                          levels = 1;
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8158:9: ( '[' ']' )*
            loop273:
            do {
                int alt273=2;
                int LA273_0 = input.LA(1);

                if ( (LA273_0==LBRACKET) ) {
                    alt273=1;
                }


                switch (alt273) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8159:13: '[' ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayInitializerCreator40843); if (state.failed) return ret;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayInitializerCreator40845); if (state.failed) return ret;
            	    if (  true  ) {

            	                      levels++;
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop273;
                }
            } while (true);

            pushFollow(FOLLOW_arrayInitializer_in_arrayInitializerCreator40880);
            arrayInitializer482=arrayInitializer();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeArrayInitializerCreationNodeWithUnions(
                              arrayInitializer482,
                              createdName483,
                              levels));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayInitializerCreator"


    // $ANTLR start "arrayInstantiatorCreator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8173:1: arrayInstantiatorCreator returns [NodeUnion<? extends ArrayInstantiatorCreationNode> ret] : NEW createdName arrayInstantiatorExpressionList ( '[' ']' )* ;
    public final NodeUnion<? extends ArrayInstantiatorCreationNode> arrayInstantiatorCreator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ArrayInstantiatorCreationNode> ret = null;

        NodeUnion<? extends ExpressionListNode> arrayInstantiatorExpressionList484 = null;

        NodeUnion<? extends BaseTypeNode> createdName485 = null;



                    ruleStart("arrayInstantiatorCreator");
                    int levels = 0;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8182:5: ( NEW createdName arrayInstantiatorExpressionList ( '[' ']' )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8183:9: NEW createdName arrayInstantiatorExpressionList ( '[' ']' )*
            {
            match(input,NEW,FOLLOW_NEW_in_arrayInstantiatorCreator40958); if (state.failed) return ret;
            pushFollow(FOLLOW_createdName_in_arrayInstantiatorCreator40960);
            createdName485=createdName();

            state._fsp--;
            if (state.failed) return ret;
            pushFollow(FOLLOW_arrayInstantiatorExpressionList_in_arrayInstantiatorCreator40970);
            arrayInstantiatorExpressionList484=arrayInstantiatorExpressionList();

            state._fsp--;
            if (state.failed) return ret;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8185:9: ( '[' ']' )*
            loop274:
            do {
                int alt274=2;
                int LA274_0 = input.LA(1);

                if ( (LA274_0==LBRACKET) ) {
                    alt274=1;
                }


                switch (alt274) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8186:13: '[' ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayInstantiatorCreator40994); if (state.failed) return ret;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayInstantiatorCreator40996); if (state.failed) return ret;
            	    if (  true  ) {

            	                      levels++;
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop274;
                }
            } while (true);

            if (  true  ) {

                          ret = factory.makeNormalNodeUnion(factory.makeArrayInstantiatorCreationNodeWithUnions(
                              arrayInstantiatorExpressionList484,
                              createdName485,
                              levels));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayInstantiatorCreator"


    // $ANTLR start "arrayInstantiatorExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8199:1: arrayInstantiatorExpressionList returns [NodeUnion<? extends ExpressionListNode> ret] : ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* ) ) ;
    public final NodeUnion<? extends ExpressionListNode> arrayInstantiatorExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        BsjAntlrParser.arrayInstantiatorExpression_return a = null;

        BsjAntlrParser.arrayInstantiatorExpression_return b = null;

        NodeUnion<? extends Node> splice486 = null;



                    ruleStart("arrayInstantiatorExpressionList");
                    List<NodeUnion<? extends ExpressionNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8208:5: ( ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8209:9: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8209:9: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* ) )
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt276=1;
            }
            else if ( (LA276_0==LBRACKET) ) {
                alt276=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 276, 0, input);

                throw nvae;
            }
            switch (alt276) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8210:13: splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_arrayInstantiatorExpressionList41133);
                    splice486=splice(ExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice486 != null) // TODO: fix this with error nodes
                                          ret = splice486.castNodeType(factory, ExpressionListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8216:13: (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8216:13: (a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8217:17: a= arrayInstantiatorExpression (b= arrayInstantiatorExpression )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends ExpressionNode>>();
                                      
                    }
                    pushFollow(FOLLOW_arrayInstantiatorExpression_in_arrayInstantiatorExpressionList41204);
                    a=arrayInstantiatorExpression();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "arrayInstantiatorExpression", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8232:11: (b= arrayInstantiatorExpression )*
                    loop275:
                    do {
                        int alt275=2;
                        int LA275_0 = input.LA(1);

                        if ( (LA275_0==LBRACKET) ) {
                            int LA275_1 = input.LA(2);

                            if ( (LA275_1==CODELITERAL_START||(LA275_1>=SUPER && LA275_1<=IDENTIFIER)||LA275_1==BOOLEAN||LA275_1==BYTE||LA275_1==CHAR||LA275_1==DOUBLE||LA275_1==FLOAT||LA275_1==INT||LA275_1==LONG||LA275_1==SHORT||LA275_1==VOID||LA275_1==LPAREN||(LA275_1>=BANG && LA275_1<=TILDE)||(LA275_1>=PLUSPLUS && LA275_1<=SUB)||LA275_1==128) ) {
                                alt275=1;
                            }


                        }


                        switch (alt275) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8233:21: b= arrayInstantiatorExpression
                    	    {
                    	    pushFollow(FOLLOW_arrayInstantiatorExpression_in_arrayInstantiatorExpressionList41252);
                    	    b=arrayInstantiatorExpression();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "arrayInstantiatorExpression", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop275;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeExpressionListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayInstantiatorExpressionList"


    // $ANTLR start "optionalArrayInstantiatorExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8253:1: optionalArrayInstantiatorExpressionList returns [NodeUnion<? extends ExpressionListNode> ret] : ( ( arrayInstantiatorExpressionList ) | () );
    public final NodeUnion<? extends ExpressionListNode> optionalArrayInstantiatorExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        NodeUnion<? extends ExpressionListNode> arrayInstantiatorExpressionList487 = null;



                    ruleStart("optionalArrayInstantiatorExpressionList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8261:5: ( ( arrayInstantiatorExpressionList ) | () )
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt277=1;
            }
            else if ( (LA277_0==LBRACKET) ) {
                alt277=1;
            }
            else if ( (LA277_0==EOF) ) {
                alt277=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;
            }
            switch (alt277) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8262:9: ( arrayInstantiatorExpressionList )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8262:9: ( arrayInstantiatorExpressionList )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8263:13: arrayInstantiatorExpressionList
                    {
                    pushFollow(FOLLOW_arrayInstantiatorExpressionList_in_optionalArrayInstantiatorExpressionList41399);
                    arrayInstantiatorExpressionList487=arrayInstantiatorExpressionList();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = arrayInstantiatorExpressionList487;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8269:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8269:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8270:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeExpressionListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalArrayInstantiatorExpressionList"

    public static class arrayInstantiatorExpression_return extends ParserRuleReturnScope {
        public NodeUnion<? extends ExpressionNode> ret;
    };

    // $ANTLR start "arrayInstantiatorExpression"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8277:1: arrayInstantiatorExpression returns [NodeUnion<? extends ExpressionNode> ret] : '[' expression ']' ;
    public final BsjAntlrParser.arrayInstantiatorExpression_return arrayInstantiatorExpression() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.arrayInstantiatorExpression_return retval = new BsjAntlrParser.arrayInstantiatorExpression_return();
        retval.start = input.LT(1);

        BsjAntlrParser.expression_return expression488 = null;



                    ruleStart("arrayInstantiatorExpression");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8285:5: ( '[' expression ']' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8286:9: '[' expression ']'
            {
            match(input,LBRACKET,FOLLOW_LBRACKET_in_arrayInstantiatorExpression41532); if (state.failed) return retval;
            pushFollow(FOLLOW_expression_in_arrayInstantiatorExpression41534);
            expression488=expression();

            state._fsp--;
            if (state.failed) return retval;
            match(input,RBRACKET,FOLLOW_RBRACKET_in_arrayInstantiatorExpression41536); if (state.failed) return retval;
            if (  true  ) {

                          retval.ret = (expression488!=null?expression488.ret:null);
                      
            }

            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "arrayInstantiatorExpression"

    public static class variableInitializer_return extends ParserRuleReturnScope {
        public NodeUnion<? extends VariableInitializerNode> ret;
    };

    // $ANTLR start "variableInitializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8292:1: variableInitializer returns [NodeUnion<? extends VariableInitializerNode> ret] : ( splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)] | ( arrayInitializer | expression ) );
    public final BsjAntlrParser.variableInitializer_return variableInitializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.variableInitializer_return retval = new BsjAntlrParser.variableInitializer_return();
        retval.start = input.LT(1);

        NodeUnion<? extends Node> splice489 = null;

        NodeUnion<? extends ArrayInitializerNode> arrayInitializer490 = null;

        BsjAntlrParser.expression_return expression491 = null;



                    ruleStart("variableInitializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8300:5: ( splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)] | ( arrayInitializer | expression ) )
            int alt279=2;
            alt279 = dfa279.predict(input);
            switch (alt279) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8301:9: splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)]
                    {
                    pushFollow(FOLLOW_splice_in_variableInitializer41617);
                    splice489=splice(VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class));

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice489 != null) // TODO: fix this with error nodes
                                      retval.ret = splice489.castNodeType(factory, VariableInitializerNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8307:9: ( arrayInitializer | expression )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8307:9: ( arrayInitializer | expression )
                    int alt278=2;
                    alt278 = dfa278.predict(input);
                    switch (alt278) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8308:13: arrayInitializer
                            {
                            pushFollow(FOLLOW_arrayInitializer_in_variableInitializer41661);
                            arrayInitializer490=arrayInitializer();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              retval.ret = arrayInitializer490;
                                          
                            }

                            }
                            break;
                        case 2 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8313:13: expression
                            {
                            pushFollow(FOLLOW_expression_in_variableInitializer41699);
                            expression491=expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if (  true  ) {

                                              retval.ret = (expression491!=null?expression491.ret:null);
                                          
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "variableInitializer"


    // $ANTLR start "variableInitializers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8321:1: variableInitializers returns [NodeUnion<? extends VariableInitializerListNode> ret] : ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableInitializer ( ',' b= variableInitializer )* ) ) ;
    public final NodeUnion<? extends VariableInitializerListNode> variableInitializers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableInitializerListNode> ret = null;

        BsjAntlrParser.variableInitializer_return a = null;

        BsjAntlrParser.variableInitializer_return b = null;

        NodeUnion<? extends Node> splice492 = null;



                    ruleStart("variableInitializers");
                    List<NodeUnion<? extends VariableInitializerNode>> list = null;
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8330:5: ( ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableInitializer ( ',' b= variableInitializer )* ) ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8331:9: ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableInitializer ( ',' b= variableInitializer )* ) )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8331:9: ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableInitializer ( ',' b= variableInitializer )* ) )
            int alt281=2;
            alt281 = dfa281.predict(input);
            switch (alt281) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8332:13: splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_variableInitializers41806);
                    splice492=splice(VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice492 != null) // TODO: fix this with error nodes
                                          ret = splice492.castNodeType(factory, VariableInitializerListNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8338:13: (a= variableInitializer ( ',' b= variableInitializer )* )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8338:13: (a= variableInitializer ( ',' b= variableInitializer )* )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8339:17: a= variableInitializer ( ',' b= variableInitializer )*
                    {
                    if (  true  ) {

                                          list = new ArrayList<NodeUnion<? extends VariableInitializerNode>>();
                                      
                    }
                    pushFollow(FOLLOW_variableInitializer_in_variableInitializers41877);
                    a=variableInitializer();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                      		            // TODO: fix this with error nodes
                      		            if ((a!=null?a.ret:null) != null && (a!=null?a.ret:null).getNodeValue() != null)
                      		            {
                      		                list.add((a!=null?a.ret:null));
                      		            } else
                      		            {
                      		                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                      		                        getSourceLocation((a!=null?((Token)a.start):null)), "variableInitializer", getSourceLocation((a!=null?((Token)a.stop):null))));
                      		            }
                      		        
                    }
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8354:11: ( ',' b= variableInitializer )*
                    loop280:
                    do {
                        int alt280=2;
                        int LA280_0 = input.LA(1);

                        if ( (LA280_0==COMMA) ) {
                            int LA280_1 = input.LA(2);

                            if ( (LA280_1==CODELITERAL_START||(LA280_1>=SUPER && LA280_1<=IDENTIFIER)||LA280_1==BOOLEAN||LA280_1==BYTE||LA280_1==CHAR||LA280_1==DOUBLE||LA280_1==FLOAT||LA280_1==INT||LA280_1==LONG||LA280_1==SHORT||LA280_1==VOID||LA280_1==LPAREN||LA280_1==LBRACE||(LA280_1>=BANG && LA280_1<=TILDE)||(LA280_1>=PLUSPLUS && LA280_1<=SUB)||LA280_1==128) ) {
                                alt280=1;
                            }


                        }


                        switch (alt280) {
                    	case 1 :
                    	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8355:13: ',' b= variableInitializer
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_variableInitializers41915); if (state.failed) return ret;
                    	    pushFollow(FOLLOW_variableInitializer_in_variableInitializers41939);
                    	    b=variableInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return ret;
                    	    if (  true  ) {

                    	      			            // TODO: fix this with error nodes
                    	      			            if ((b!=null?b.ret:null) != null && (b!=null?b.ret:null).getNodeValue() != null)
                    	      			            {
                    	      			                list.add((b!=null?b.ret:null));
                    	      			            } else
                    	      			            {
                    	      			                reportDiagnostic(new RuleParseFailureDiagnosticImpl(
                    	      			                        getSourceLocation((b!=null?((Token)b.start):null)), "variableInitializer", getSourceLocation((b!=null?((Token)b.stop):null))));
                    	      			            }
                    	      		            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop280;
                        }
                    } while (true);

                    if (  true  ) {

                                          ret = factory.makeNormalNodeUnion(factory.makeVariableInitializerListNodeWithUnions(list));
                      		        
                    }

                    }


                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "variableInitializers"


    // $ANTLR start "optionalVariableInitializers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8376:1: optionalVariableInitializers returns [NodeUnion<? extends VariableInitializerListNode> ret] : ( ( variableInitializers ) | () );
    public final NodeUnion<? extends VariableInitializerListNode> optionalVariableInitializers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableInitializerListNode> ret = null;

        NodeUnion<? extends VariableInitializerListNode> variableInitializers493 = null;



                    ruleStart("optionalVariableInitializers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8384:5: ( ( variableInitializers ) | () )
            int alt282=2;
            int LA282_0 = input.LA(1);

            if ( (LA282_0==CODELITERAL_START||(LA282_0>=SUPER && LA282_0<=IDENTIFIER)||LA282_0==BOOLEAN||LA282_0==BYTE||LA282_0==CHAR||LA282_0==DOUBLE||LA282_0==FLOAT||LA282_0==INT||LA282_0==LONG||LA282_0==SHORT||LA282_0==VOID||LA282_0==LPAREN||LA282_0==LBRACE||(LA282_0>=BANG && LA282_0<=TILDE)||(LA282_0>=PLUSPLUS && LA282_0<=SUB)||LA282_0==128) ) {
                alt282=1;
            }
            else if ( (LA282_0==RBRACE||LA282_0==COMMA) ) {
                alt282=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 282, 0, input);

                throw nvae;
            }
            switch (alt282) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8385:9: ( variableInitializers )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8385:9: ( variableInitializers )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8386:13: variableInitializers
                    {
                    pushFollow(FOLLOW_variableInitializers_in_optionalVariableInitializers42086);
                    variableInitializers493=variableInitializers();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = variableInitializers493;
                                  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8392:9: ()
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8392:9: ()
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8393:13: 
                    {
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeVariableInitializerListNode());
                                  
                    }

                    }


                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalVariableInitializers"


    // $ANTLR start "arrayInitializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8400:1: arrayInitializer returns [NodeUnion<? extends ArrayInitializerNode> ret] : ( splice[ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalVariableInitializers ( ',' )? '}' );
    public final NodeUnion<? extends ArrayInitializerNode> arrayInitializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ArrayInitializerNode> ret = null;

        NodeUnion<? extends Node> splice494 = null;

        NodeUnion<? extends VariableInitializerListNode> optionalVariableInitializers495 = null;



                    ruleStart("arrayInitializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8408:5: ( splice[ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList()] | '{' optionalVariableInitializers ( ',' )? '}' )
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt284=1;
            }
            else if ( (LA284_0==LBRACE) ) {
                alt284=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 284, 0, input);

                throw nvae;
            }
            switch (alt284) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8409:9: splice[ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_arrayInitializer42219);
                    splice494=splice(ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  if (splice494 != null) // TODO: fix this with error nodes
                                      ret = splice494.castNodeType(factory, ArrayInitializerNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8415:9: '{' optionalVariableInitializers ( ',' )? '}'
                    {
                    match(input,LBRACE,FOLLOW_LBRACE_in_arrayInitializer42249); if (state.failed) return ret;
                    pushFollow(FOLLOW_optionalVariableInitializers_in_arrayInitializer42264);
                    optionalVariableInitializers495=optionalVariableInitializers();

                    state._fsp--;
                    if (state.failed) return ret;
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8417:13: ( ',' )?
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==COMMA) ) {
                        alt283=1;
                    }
                    switch (alt283) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: ','
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_arrayInitializer42278); if (state.failed) return ret;

                            }
                            break;

                    }

                    match(input,RBRACE,FOLLOW_RBRACE_in_arrayInitializer42290); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeArrayInitializerNodeWithUnions(optionalVariableInitializers495));
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arrayInitializer"


    // $ANTLR start "createdName"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8424:1: createdName returns [NodeUnion<? extends BaseTypeNode> ret] : ( classOrInterfaceType | primitiveType ) ;
    public final NodeUnion<? extends BaseTypeNode> createdName() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BaseTypeNode> ret = null;

        BsjAntlrParser.classOrInterfaceType_return classOrInterfaceType496 = null;

        NodeUnion<? extends PrimitiveTypeNode> primitiveType497 = null;



                    ruleStart("createdName");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8432:5: ( ( classOrInterfaceType | primitiveType ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8433:9: ( classOrInterfaceType | primitiveType )
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8433:9: ( classOrInterfaceType | primitiveType )
            int alt285=2;
            alt285 = dfa285.predict(input);
            switch (alt285) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8434:13: classOrInterfaceType
                    {
                    pushFollow(FOLLOW_classOrInterfaceType_in_createdName42382);
                    classOrInterfaceType496=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = (classOrInterfaceType496!=null?classOrInterfaceType496.ret:null);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8439:13: primitiveType
                    {
                    pushFollow(FOLLOW_primitiveType_in_createdName42420);
                    primitiveType497=primitiveType();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = primitiveType497;
                                  
                    }

                    }
                    break;

            }


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "createdName"


    // $ANTLR start "optionalNonWildcardTypeArguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8447:1: optionalNonWildcardTypeArguments returns [NodeUnion<? extends ReferenceTypeListNode> ret] : ( nonWildcardTypeArguments | );
    public final NodeUnion<? extends ReferenceTypeListNode> optionalNonWildcardTypeArguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReferenceTypeListNode> ret = null;

        NodeUnion<? extends ReferenceTypeListNode> nonWildcardTypeArguments498 = null;



                    ruleStart("optionalNonWildcardTypeArguments");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8455:5: ( nonWildcardTypeArguments | )
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==LT) ) {
                alt286=1;
            }
            else if ( ((LA286_0>=SUPER && LA286_0<=THIS)||LA286_0==IDENTIFIER||LA286_0==128) ) {
                alt286=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 286, 0, input);

                throw nvae;
            }
            switch (alt286) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8456:9: nonWildcardTypeArguments
                    {
                    pushFollow(FOLLOW_nonWildcardTypeArguments_in_optionalNonWildcardTypeArguments42513);
                    nonWildcardTypeArguments498=nonWildcardTypeArguments();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = nonWildcardTypeArguments498;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8461:9: 
                    {
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeReferenceTypeListNode());
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "optionalNonWildcardTypeArguments"


    // $ANTLR start "nonWildcardTypeArguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8466:1: nonWildcardTypeArguments returns [NodeUnion<? extends ReferenceTypeListNode> ret] : '<' referenceTypeList '>' ;
    public final NodeUnion<? extends ReferenceTypeListNode> nonWildcardTypeArguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReferenceTypeListNode> ret = null;

        NodeUnion<? extends ReferenceTypeListNode> referenceTypeList499 = null;



                    ruleStart("nonWildcardTypeArguments");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8474:5: ( '<' referenceTypeList '>' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8475:9: '<' referenceTypeList '>'
            {
            match(input,LT,FOLLOW_LT_in_nonWildcardTypeArguments42610); if (state.failed) return ret;
            pushFollow(FOLLOW_referenceTypeList_in_nonWildcardTypeArguments42620);
            referenceTypeList499=referenceTypeList();

            state._fsp--;
            if (state.failed) return ret;
            if (  true  ) {

                          ret = referenceTypeList499;
                      
            }
            match(input,GT,FOLLOW_GT_in_nonWildcardTypeArguments42640); if (state.failed) return ret;

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "nonWildcardTypeArguments"


    // $ANTLR start "arguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8483:1: arguments returns [NodeUnion<? extends ExpressionListNode> ret] : '(' optionalExpressionList ')' ;
    public final NodeUnion<? extends ExpressionListNode> arguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        NodeUnion<? extends ExpressionListNode> optionalExpressionList500 = null;



                    ruleStart("arguments");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8491:5: ( '(' optionalExpressionList ')' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8492:9: '(' optionalExpressionList ')'
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_arguments42708); if (state.failed) return ret;
            pushFollow(FOLLOW_optionalExpressionList_in_arguments42718);
            optionalExpressionList500=optionalExpressionList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,RPAREN,FOLLOW_RPAREN_in_arguments42728); if (state.failed) return ret;
            if (  true  ) {

                          ret = optionalExpressionList500;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "arguments"


    // $ANTLR start "name"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8501:1: name returns [NodeUnion<? extends NameNode> ret] : ( splice[NameNode.class, Arrays.<Class<? extends Node>>asList()] | a= identifier ) ( '.' b= identifier )* ;
    public final NodeUnion<? extends NameNode> name() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NameNode> ret = null;

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;

        NodeUnion<? extends Node> splice501 = null;



                    ruleStart("name");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8509:5: ( ( splice[NameNode.class, Arrays.<Class<? extends Node>>asList()] | a= identifier ) ( '.' b= identifier )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8510:9: ( splice[NameNode.class, Arrays.<Class<? extends Node>>asList()] | a= identifier ) ( '.' b= identifier )*
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8510:9: ( splice[NameNode.class, Arrays.<Class<? extends Node>>asList()] | a= identifier )
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==128) && ((configuration.getCodeSplicingSupported()))) {
                int LA287_1 = input.LA(2);

                if ( ((synpred399_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {
                    alt287=1;
                }
                else if ( ((configuration.getCodeSplicingSupported())) ) {
                    alt287=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ret;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 287, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA287_0==IDENTIFIER) ) {
                alt287=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ret;}
                NoViableAltException nvae =
                    new NoViableAltException("", 287, 0, input);

                throw nvae;
            }
            switch (alt287) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8511:13: splice[NameNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_name42821);
                    splice501=splice(NameNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      if (splice501 != null) // TODO: fix this with error nodes
                                          ret = splice501.castNodeType(factory, NameNode.class);
                                  
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8517:13: a= identifier
                    {
                    pushFollow(FOLLOW_identifier_in_name42862);
                    a=identifier();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                      ret = factory.makeNormalNodeUnion(factory.makeSimpleNameNodeWithUnions((a!=null?a.ret:null)));
                                  
                    }

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8522:9: ( '.' b= identifier )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==DOT) ) {
                    int LA288_2 = input.LA(2);

                    if ( (LA288_2==IDENTIFIER||LA288_2==128) ) {
                        alt288=1;
                    }


                }


                switch (alt288) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8523:13: '.' b= identifier
            	    {
            	    match(input,DOT,FOLLOW_DOT_in_name42910); if (state.failed) return ret;
            	    pushFollow(FOLLOW_identifier_in_name42926);
            	    b=identifier();

            	    state._fsp--;
            	    if (state.failed) return ret;
            	    if (  true  ) {

            	                      ret = factory.makeNormalNodeUnion(factory.makeQualifiedNameNodeWithUnions(ret, (b!=null?b.ret:null)));
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "name"

    public static class separatedQualifiedName_return extends ParserRuleReturnScope {
        public NodeUnion<? extends NameNode> name;
        public NodeUnion<? extends IdentifierNode> ident;
    };

    // $ANTLR start "separatedQualifiedName"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8531:1: separatedQualifiedName returns [NodeUnion<? extends NameNode> name, NodeUnion<? extends IdentifierNode> ident] : a= identifier b= identifier (c= identifier )* ;
    public final BsjAntlrParser.separatedQualifiedName_return separatedQualifiedName() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.separatedQualifiedName_return retval = new BsjAntlrParser.separatedQualifiedName_return();
        retval.start = input.LT(1);

        BsjAntlrParser.identifier_return a = null;

        BsjAntlrParser.identifier_return b = null;

        BsjAntlrParser.identifier_return c = null;



                    ruleStart("separatedQualifiedName");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8539:5: (a= identifier b= identifier (c= identifier )* )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8540:9: a= identifier b= identifier (c= identifier )*
            {
            pushFollow(FOLLOW_identifier_in_separatedQualifiedName43021);
            a=identifier();

            state._fsp--;
            if (state.failed) return retval;
            pushFollow(FOLLOW_identifier_in_separatedQualifiedName43025);
            b=identifier();

            state._fsp--;
            if (state.failed) return retval;
            if (  true  ) {

                          retval.name = factory.makeNormalNodeUnion(factory.makeSimpleNameNodeWithUnions((a!=null?a.ret:null)));
                          retval.ident = (b!=null?b.ret:null);                            
                      
            }
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8545:9: (c= identifier )*
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==128) && ((configuration.getCodeSplicingSupported()))) {
                    alt289=1;
                }
                else if ( (LA289_0==IDENTIFIER) ) {
                    alt289=1;
                }


                switch (alt289) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8546:13: c= identifier
            	    {
            	    pushFollow(FOLLOW_identifier_in_separatedQualifiedName43061);
            	    c=identifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if (  true  ) {

            	                      retval.name = factory.makeNormalNodeUnion(factory.makeQualifiedNameNodeWithUnions(retval.name, retval.ident));
            	                      retval.ident = (c!=null?c.ret:null);
            	                  
            	    }

            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "separatedQualifiedName"


    // $ANTLR start "intLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8554:1: intLiteral[boolean isNegative] returns [NodeUnion<? extends IntLiteralNode> ret] : INTLITERAL ;
    public final NodeUnion<? extends IntLiteralNode> intLiteral(boolean isNegative) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IntLiteralNode> ret = null;

        Token INTLITERAL502=null;


                    ruleStart("intLiteral");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8562:5: ( INTLITERAL )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8563:9: INTLITERAL
            {
            INTLITERAL502=(Token)match(input,INTLITERAL,FOLLOW_INTLITERAL_in_intLiteral43157); if (state.failed) return ret;
            if (  true  ) {

                          String s = (INTLITERAL502!=null?INTLITERAL502.getText():null);
                          Integer i = BsjAntlrParserUtils.parseInt(
                                  s,
                                  isNegative,
                                  getSourceLocation(-1),
                                  diagnosticListener,
                                  ((Rule_scope)Rule_stack.peek()).name);
                          ret = factory.makeNormalNodeUnion(factory.makeIntLiteralNode(i));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "intLiteral"


    // $ANTLR start "longLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8576:1: longLiteral[boolean isNegative] returns [NodeUnion<? extends LongLiteralNode> ret] : LONGLITERAL ;
    public final NodeUnion<? extends LongLiteralNode> longLiteral(boolean isNegative) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LongLiteralNode> ret = null;

        Token LONGLITERAL503=null;


                    ruleStart("longLiteral");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8584:5: ( LONGLITERAL )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8585:9: LONGLITERAL
            {
            LONGLITERAL503=(Token)match(input,LONGLITERAL,FOLLOW_LONGLITERAL_in_longLiteral43243); if (state.failed) return ret;
            if (  true  ) {

                          String s = (LONGLITERAL503!=null?LONGLITERAL503.getText():null);
                          Long l = BsjAntlrParserUtils.parseLong(
                                  s,
                                  isNegative,
                                  getSourceLocation(-1),
                                  diagnosticListener,
                                  ((Rule_scope)Rule_stack.peek()).name);
                          ret = factory.makeNormalNodeUnion(factory.makeLongLiteralNode(l));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "longLiteral"


    // $ANTLR start "lexicalLiteral"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8598:1: lexicalLiteral returns [NodeUnion<? extends LiteralNode<?>> ret] : ( intLiteral[false] | longLiteral[false] | FLOATLITERAL | DOUBLELITERAL | CHARLITERAL | STRINGLITERAL | TRUE | FALSE | NULL | codeLiteral );
    public final NodeUnion<? extends LiteralNode<?>> lexicalLiteral() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LiteralNode<?>> ret = null;

        Token FLOATLITERAL506=null;
        Token DOUBLELITERAL507=null;
        Token CHARLITERAL508=null;
        Token STRINGLITERAL509=null;
        NodeUnion<? extends IntLiteralNode> intLiteral504 = null;

        NodeUnion<? extends LongLiteralNode> longLiteral505 = null;

        NodeUnion<? extends RawCodeLiteralNode> codeLiteral510 = null;



                    ruleStart("lexicalLiteral");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8606:5: ( intLiteral[false] | longLiteral[false] | FLOATLITERAL | DOUBLELITERAL | CHARLITERAL | STRINGLITERAL | TRUE | FALSE | NULL | codeLiteral )
            int alt290=10;
            alt290 = dfa290.predict(input);
            switch (alt290) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8607:9: intLiteral[false]
                    {
                    pushFollow(FOLLOW_intLiteral_in_lexicalLiteral43321);
                    intLiteral504=intLiteral(false);

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = intLiteral504;
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8612:9: longLiteral[false]
                    {
                    pushFollow(FOLLOW_longLiteral_in_lexicalLiteral43351);
                    longLiteral505=longLiteral(false);

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = longLiteral505;
                              
                    }

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8617:9: FLOATLITERAL
                    {
                    FLOATLITERAL506=(Token)match(input,FLOATLITERAL,FOLLOW_FLOATLITERAL_in_lexicalLiteral43381); if (state.failed) return ret;
                    if (  true  ) {

                                  String s = (FLOATLITERAL506!=null?FLOATLITERAL506.getText():null);
                                  float f = BsjAntlrParserUtils.parseFloat(
                                          s,
                                          getSourceLocation(-1),
                                          diagnosticListener,
                                          ((Rule_scope)Rule_stack.peek()).name);
                                  ret = factory.makeNormalNodeUnion(factory.makeFloatLiteralNode(f));
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8628:9: DOUBLELITERAL
                    {
                    DOUBLELITERAL507=(Token)match(input,DOUBLELITERAL,FOLLOW_DOUBLELITERAL_in_lexicalLiteral43410); if (state.failed) return ret;
                    if (  true  ) {

                                  String s = (DOUBLELITERAL507!=null?DOUBLELITERAL507.getText():null);
                                  double d = BsjAntlrParserUtils.parseDouble(
                                          s,
                                          getSourceLocation(-1),
                                          diagnosticListener,
                                          ((Rule_scope)Rule_stack.peek()).name);
                                  ret = factory.makeNormalNodeUnion(factory.makeDoubleLiteralNode(d));
                              
                    }

                    }
                    break;
                case 5 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8639:9: CHARLITERAL
                    {
                    CHARLITERAL508=(Token)match(input,CHARLITERAL,FOLLOW_CHARLITERAL_in_lexicalLiteral43439); if (state.failed) return ret;
                    if (  true  ) {

                                  String s = (CHARLITERAL508!=null?CHARLITERAL508.getText():null);
                                  s = s.substring(1,s.length()-1);
                                  s = BsjAntlrParserUtils.unescape(s);
                                  if (s.length()!=1)
                                  {
                                      throw new IllegalStateException("Unescape of \"" + (CHARLITERAL508!=null?CHARLITERAL508.getText():null) + "\" resulted in \"" + s +
                                              "\" (length!=1)");
                                  }
                                  ret = factory.makeNormalNodeUnion(factory.makeCharLiteralNode(s.charAt(0)));
                              
                    }

                    }
                    break;
                case 6 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8652:9: STRINGLITERAL
                    {
                    STRINGLITERAL509=(Token)match(input,STRINGLITERAL,FOLLOW_STRINGLITERAL_in_lexicalLiteral43468); if (state.failed) return ret;
                    if (  true  ) {

                                  String s = (STRINGLITERAL509!=null?STRINGLITERAL509.getText():null);
                                  s = s.substring(1,s.length()-1);
                                  s = BsjAntlrParserUtils.unescape(s);
                                  ret = factory.makeNormalNodeUnion(factory.makeStringLiteralNode(s));
                              
                    }

                    }
                    break;
                case 7 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8660:9: TRUE
                    {
                    match(input,TRUE,FOLLOW_TRUE_in_lexicalLiteral43497); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeBooleanLiteralNode(true));
                              
                    }

                    }
                    break;
                case 8 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8665:9: FALSE
                    {
                    match(input,FALSE,FOLLOW_FALSE_in_lexicalLiteral43526); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeBooleanLiteralNode(false));
                              
                    }

                    }
                    break;
                case 9 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8670:9: NULL
                    {
                    match(input,NULL,FOLLOW_NULL_in_lexicalLiteral43555); if (state.failed) return ret;
                    if (  true  ) {

                                  ret = factory.makeNormalNodeUnion(factory.makeNullLiteralNode());
                              
                    }

                    }
                    break;
                case 10 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8675:9: codeLiteral
                    {
                    pushFollow(FOLLOW_codeLiteral_in_lexicalLiteral43581);
                    codeLiteral510=codeLiteral();

                    state._fsp--;
                    if (state.failed) return ret;
                    if (  true  ) {

                                  ret = codeLiteral510;
                              
                    }

                    }
                    break;

            }
            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "lexicalLiteral"

    public static class identifier_return extends ParserRuleReturnScope {
        public NodeUnion<? extends IdentifierNode> ret;
    };

    // $ANTLR start "identifier"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8681:1: identifier returns [NodeUnion<? extends IdentifierNode> ret] : ( splice[IdentifierNode.class, Arrays.<Class<? extends Node>>asList()] | IDENTIFIER );
    public final BsjAntlrParser.identifier_return identifier() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        BsjAntlrParser.identifier_return retval = new BsjAntlrParser.identifier_return();
        retval.start = input.LT(1);

        Token IDENTIFIER512=null;
        NodeUnion<? extends Node> splice511 = null;



                    ruleStart("identifier");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8689:5: ( splice[IdentifierNode.class, Arrays.<Class<? extends Node>>asList()] | IDENTIFIER )
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt291=1;
            }
            else if ( (LA291_0==IDENTIFIER) ) {
                alt291=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 291, 0, input);

                throw nvae;
            }
            switch (alt291) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8690:9: splice[IdentifierNode.class, Arrays.<Class<? extends Node>>asList()]
                    {
                    pushFollow(FOLLOW_splice_in_identifier43659);
                    splice511=splice(IdentifierNode.class, Arrays.<Class<? extends Node>>asList());

                    state._fsp--;
                    if (state.failed) return retval;
                    if (  true  ) {

                                  if (splice511 != null) // TODO: fix this with error nodes
                                      retval.ret = splice511.castNodeType(factory, IdentifierNode.class);
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8696:9: IDENTIFIER
                    {
                    IDENTIFIER512=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_identifier43686); if (state.failed) return retval;
                    if (  true  ) {

                                  retval.ret = factory.makeNormalNodeUnion(factory.makeIdentifierNode((IDENTIFIER512!=null?IDENTIFIER512.getText():null)));
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "identifier"


    // $ANTLR start "unsplicableIdentifier"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8702:1: unsplicableIdentifier returns [IdentifierNode ret] : IDENTIFIER ;
    public final IdentifierNode unsplicableIdentifier() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        IdentifierNode ret = null;

        Token IDENTIFIER513=null;


                    ruleStart("unsplicableIdentifier");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8710:5: ( IDENTIFIER )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8711:9: IDENTIFIER
            {
            IDENTIFIER513=(Token)match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_unsplicableIdentifier43764); if (state.failed) return ret;
            if (  true  ) {

                          ret = factory.makeIdentifierNode((IDENTIFIER513!=null?IDENTIFIER513.getText():null));
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "unsplicableIdentifier"


    // $ANTLR start "classHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8721:1: classHeader : classModifiers 'class' identifier ;
    public final void classHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8722:5: ( classModifiers 'class' identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8722:9: classModifiers 'class' identifier
            {
            pushFollow(FOLLOW_classModifiers_in_classHeader43806);
            classModifiers();

            state._fsp--;
            if (state.failed) return ;
            match(input,CLASS,FOLLOW_CLASS_in_classHeader43808); if (state.failed) return ;
            pushFollow(FOLLOW_identifier_in_classHeader43810);
            identifier();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "classHeader"


    // $ANTLR start "enumHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8725:1: enumHeader : enumModifiers ( 'enum' | identifier ) identifier ;
    public final void enumHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8726:5: ( enumModifiers ( 'enum' | identifier ) identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8726:9: enumModifiers ( 'enum' | identifier ) identifier
            {
            pushFollow(FOLLOW_enumModifiers_in_enumHeader43830);
            enumModifiers();

            state._fsp--;
            if (state.failed) return ;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8726:23: ( 'enum' | identifier )
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==ENUM) ) {
                alt292=1;
            }
            else if ( (LA292_0==128) && ((configuration.getCodeSplicingSupported()))) {
                alt292=2;
            }
            else if ( (LA292_0==IDENTIFIER) ) {
                alt292=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 292, 0, input);

                throw nvae;
            }
            switch (alt292) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8726:24: 'enum'
                    {
                    match(input,ENUM,FOLLOW_ENUM_in_enumHeader43833); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8726:31: identifier
                    {
                    pushFollow(FOLLOW_identifier_in_enumHeader43835);
                    identifier();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_enumHeader43838);
            identifier();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "enumHeader"


    // $ANTLR start "interfaceHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8729:1: interfaceHeader : interfaceModifiers 'interface' identifier ;
    public final void interfaceHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8730:5: ( interfaceModifiers 'interface' identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8730:9: interfaceModifiers 'interface' identifier
            {
            pushFollow(FOLLOW_interfaceModifiers_in_interfaceHeader43858);
            interfaceModifiers();

            state._fsp--;
            if (state.failed) return ;
            match(input,INTERFACE,FOLLOW_INTERFACE_in_interfaceHeader43860); if (state.failed) return ;
            pushFollow(FOLLOW_identifier_in_interfaceHeader43862);
            identifier();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "interfaceHeader"


    // $ANTLR start "annotationHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8733:1: annotationHeader : annotationModifiers '@' 'interface' identifier ;
    public final void annotationHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8734:5: ( annotationModifiers '@' 'interface' identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8734:9: annotationModifiers '@' 'interface' identifier
            {
            pushFollow(FOLLOW_annotationModifiers_in_annotationHeader43882);
            annotationModifiers();

            state._fsp--;
            if (state.failed) return ;
            match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_annotationHeader43884); if (state.failed) return ;
            match(input,INTERFACE,FOLLOW_INTERFACE_in_annotationHeader43886); if (state.failed) return ;
            pushFollow(FOLLOW_identifier_in_annotationHeader43888);
            identifier();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "annotationHeader"


    // $ANTLR start "typeHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8737:1: typeHeader : ( classModifiers | enumModifiers | interfaceModifiers | annotationModifiers ) ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) identifier ;
    public final void typeHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:5: ( ( classModifiers | enumModifiers | interfaceModifiers | annotationModifiers ) ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) identifier )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:9: ( classModifiers | enumModifiers | interfaceModifiers | annotationModifiers ) ( 'class' | 'enum' | ( ( '@' )? 'interface' ) ) identifier
            {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:9: ( classModifiers | enumModifiers | interfaceModifiers | annotationModifiers )
            int alt293=4;
            alt293 = dfa293.predict(input);
            switch (alt293) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:10: classModifiers
                    {
                    pushFollow(FOLLOW_classModifiers_in_typeHeader43908);
                    classModifiers();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:27: enumModifiers
                    {
                    pushFollow(FOLLOW_enumModifiers_in_typeHeader43912);
                    enumModifiers();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:43: interfaceModifiers
                    {
                    pushFollow(FOLLOW_interfaceModifiers_in_typeHeader43916);
                    interfaceModifiers();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 4 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:64: annotationModifiers
                    {
                    pushFollow(FOLLOW_annotationModifiers_in_typeHeader43920);
                    annotationModifiers();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:85: ( 'class' | 'enum' | ( ( '@' )? 'interface' ) )
            int alt295=3;
            switch ( input.LA(1) ) {
            case CLASS:
                {
                alt295=1;
                }
                break;
            case ENUM:
                {
                alt295=2;
                }
                break;
            case INTERFACE:
            case MONKEYS_AT:
                {
                alt295=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }

            switch (alt295) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:86: 'class'
                    {
                    match(input,CLASS,FOLLOW_CLASS_in_typeHeader43924); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:94: 'enum'
                    {
                    match(input,ENUM,FOLLOW_ENUM_in_typeHeader43926); if (state.failed) return ;

                    }
                    break;
                case 3 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:101: ( ( '@' )? 'interface' )
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:101: ( ( '@' )? 'interface' )
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:102: ( '@' )? 'interface'
                    {
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:102: ( '@' )?
                    int alt294=2;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==MONKEYS_AT) ) {
                        alt294=1;
                    }
                    switch (alt294) {
                        case 1 :
                            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: '@'
                            {
                            match(input,MONKEYS_AT,FOLLOW_MONKEYS_AT_in_typeHeader43929); if (state.failed) return ;

                            }
                            break;

                    }

                    match(input,INTERFACE,FOLLOW_INTERFACE_in_typeHeader43933); if (state.failed) return ;

                    }


                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_typeHeader43937);
            identifier();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "typeHeader"


    // $ANTLR start "methodHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8741:1: methodHeader : methodModifiers ( typeParameters )? ( type | 'void' )? identifier '(' ;
    public final void methodHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:5: ( methodModifiers ( typeParameters )? ( type | 'void' )? identifier '(' )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:9: methodModifiers ( typeParameters )? ( type | 'void' )? identifier '('
            {
            pushFollow(FOLLOW_methodModifiers_in_methodHeader43957);
            methodModifiers();

            state._fsp--;
            if (state.failed) return ;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:25: ( typeParameters )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==LT) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:0:0: typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_methodHeader43959);
                    typeParameters();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:41: ( type | 'void' )?
            int alt297=3;
            alt297 = dfa297.predict(input);
            switch (alt297) {
                case 1 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:42: type
                    {
                    pushFollow(FOLLOW_type_in_methodHeader43963);
                    type();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:47: 'void'
                    {
                    match(input,VOID,FOLLOW_VOID_in_methodHeader43965); if (state.failed) return ;

                    }
                    break;

            }

            pushFollow(FOLLOW_identifier_in_methodHeader43969);
            identifier();

            state._fsp--;
            if (state.failed) return ;
            match(input,LPAREN,FOLLOW_LPAREN_in_methodHeader43971); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "methodHeader"


    // $ANTLR start "fieldHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8745:1: fieldHeader : fieldModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' ) ;
    public final void fieldHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8746:5: ( fieldModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8746:9: fieldModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' )
            {
            pushFollow(FOLLOW_fieldModifiers_in_fieldHeader43991);
            fieldModifiers();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_type_in_fieldHeader43993);
            type();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_identifier_in_fieldHeader43995);
            identifier();

            state._fsp--;
            if (state.failed) return ;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8746:40: ( '[' ']' )*
            loop298:
            do {
                int alt298=2;
                int LA298_0 = input.LA(1);

                if ( (LA298_0==LBRACKET) ) {
                    alt298=1;
                }


                switch (alt298) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8746:41: '[' ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_fieldHeader43998); if (state.failed) return ;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_fieldHeader43999); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop298;
                }
            } while (true);

            if ( (input.LA(1)>=SEMI && input.LA(1)<=COMMA)||input.LA(1)==EQ ) {
                input.consume();
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "fieldHeader"


    // $ANTLR start "localVariableHeader"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8749:1: localVariableHeader : variableModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' ) ;
    public final void localVariableHeader() throws RecognitionException {
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8750:5: ( variableModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' ) )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8750:9: variableModifiers type identifier ( '[' ']' )* ( '=' | ',' | ';' )
            {
            pushFollow(FOLLOW_variableModifiers_in_localVariableHeader44029);
            variableModifiers();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_type_in_localVariableHeader44031);
            type();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_identifier_in_localVariableHeader44033);
            identifier();

            state._fsp--;
            if (state.failed) return ;
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8750:43: ( '[' ']' )*
            loop299:
            do {
                int alt299=2;
                int LA299_0 = input.LA(1);

                if ( (LA299_0==LBRACKET) ) {
                    alt299=1;
                }


                switch (alt299) {
            	case 1 :
            	    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8750:44: '[' ']'
            	    {
            	    match(input,LBRACKET,FOLLOW_LBRACKET_in_localVariableHeader44036); if (state.failed) return ;
            	    match(input,RBRACKET,FOLLOW_RBRACKET_in_localVariableHeader44037); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop299;
                }
            } while (true);

            if ( (input.LA(1)>=SEMI && input.LA(1)<=COMMA)||input.LA(1)==EQ ) {
                input.consume();
                state.errorRecovery=false;state.failed=false;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                MismatchedSetException mse = new MismatchedSetException(null,input);
                throw mse;
            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "localVariableHeader"


    // $ANTLR start "parseRule_AbstractMethodModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8755:1: parseRule_AbstractMethodModifiers returns [NodeUnion<? extends AnnotationMethodModifiersNode> ret] : annotationMethodModifiers EOF ;
    public final NodeUnion<? extends AnnotationMethodModifiersNode> parseRule_AbstractMethodModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMethodModifiersNode> ret = null;

        NodeUnion<? extends AnnotationMethodModifiersNode> annotationMethodModifiers514 = null;



                    ruleStart("parseRule_AbstractMethodModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8763:5: ( annotationMethodModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8764:9: annotationMethodModifiers EOF
            {
            pushFollow(FOLLOW_annotationMethodModifiers_in_parseRule_AbstractMethodModifiers44118);
            annotationMethodModifiers514=annotationMethodModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AbstractMethodModifiers44128); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotationMethodModifiers514;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AbstractMethodModifiers"


    // $ANTLR start "parseRule_Annotation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8771:1: parseRule_Annotation returns [NodeUnion<? extends AnnotationNode> ret] : annotation EOF ;
    public final NodeUnion<? extends AnnotationNode> parseRule_Annotation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationNode> ret = null;

        BsjAntlrParser.annotation_return annotation515 = null;



                    ruleStart("parseRule_Annotation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8779:5: ( annotation EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8780:9: annotation EOF
            {
            pushFollow(FOLLOW_annotation_in_parseRule_Annotation44206);
            annotation515=annotation();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Annotation44216); if (state.failed) return ret;
            if (  true  ) {

                          ret = (annotation515!=null?annotation515.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Annotation"


    // $ANTLR start "parseRule_Annotations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8787:1: parseRule_Annotations returns [NodeUnion<? extends AnnotationListNode> ret] : annotations EOF ;
    public final NodeUnion<? extends AnnotationListNode> parseRule_Annotations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationListNode> ret = null;

        NodeUnion<? extends AnnotationListNode> annotations516 = null;



                    ruleStart("parseRule_Annotations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8795:5: ( annotations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8796:9: annotations EOF
            {
            pushFollow(FOLLOW_annotations_in_parseRule_Annotations44294);
            annotations516=annotations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Annotations44304); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotations516;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Annotations"


    // $ANTLR start "parseRule_AnnotationMethodDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8803:1: parseRule_AnnotationMethodDeclaration returns [NodeUnion<? extends AnnotationMethodDeclarationNode> ret] : annotationMethodDeclaration EOF ;
    public final NodeUnion<? extends AnnotationMethodDeclarationNode> parseRule_AnnotationMethodDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMethodDeclarationNode> ret = null;

        NodeUnion<? extends AnnotationMethodDeclarationNode> annotationMethodDeclaration517 = null;



                    ruleStart("parseRule_AnnotationMethodDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8811:5: ( annotationMethodDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8812:9: annotationMethodDeclaration EOF
            {
            pushFollow(FOLLOW_annotationMethodDeclaration_in_parseRule_AnnotationMethodDeclaration44382);
            annotationMethodDeclaration517=annotationMethodDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnnotationMethodDeclaration44392); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotationMethodDeclaration517;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnnotationMethodDeclaration"


    // $ANTLR start "parseRule_AnnotationModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8819:1: parseRule_AnnotationModifiers returns [NodeUnion<? extends AnnotationModifiersNode> ret] : annotationModifiers EOF ;
    public final NodeUnion<? extends AnnotationModifiersNode> parseRule_AnnotationModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationModifiersNode> ret = null;

        NodeUnion<? extends AnnotationModifiersNode> annotationModifiers518 = null;



                    ruleStart("parseRule_AnnotationModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8827:5: ( annotationModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8828:9: annotationModifiers EOF
            {
            pushFollow(FOLLOW_annotationModifiers_in_parseRule_AnnotationModifiers44470);
            annotationModifiers518=annotationModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnnotationModifiers44480); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotationModifiers518;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnnotationModifiers"


    // $ANTLR start "parseRule_AnnotationTypeBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8835:1: parseRule_AnnotationTypeBody returns [NodeUnion<? extends AnnotationBodyNode> ret] : annotationTypeBody EOF ;
    public final NodeUnion<? extends AnnotationBodyNode> parseRule_AnnotationTypeBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationBodyNode> ret = null;

        NodeUnion<? extends AnnotationBodyNode> annotationTypeBody519 = null;



                    ruleStart("parseRule_AnnotationTypeBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8843:5: ( annotationTypeBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8844:9: annotationTypeBody EOF
            {
            pushFollow(FOLLOW_annotationTypeBody_in_parseRule_AnnotationTypeBody44558);
            annotationTypeBody519=annotationTypeBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnnotationTypeBody44568); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotationTypeBody519;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnnotationTypeBody"


    // $ANTLR start "parseRule_AnnotationTypeElementDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8851:1: parseRule_AnnotationTypeElementDeclarations returns [NodeUnion<? extends AnnotationMemberListNode> ret] : annotationTypeElementDeclarations EOF ;
    public final NodeUnion<? extends AnnotationMemberListNode> parseRule_AnnotationTypeElementDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMemberListNode> ret = null;

        NodeUnion<? extends AnnotationMemberListNode> annotationTypeElementDeclarations520 = null;



                    ruleStart("parseRule_AnnotationTypeElementDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8859:5: ( annotationTypeElementDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8860:9: annotationTypeElementDeclarations EOF
            {
            pushFollow(FOLLOW_annotationTypeElementDeclarations_in_parseRule_AnnotationTypeElementDeclarations44646);
            annotationTypeElementDeclarations520=annotationTypeElementDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnnotationTypeElementDeclarations44656); if (state.failed) return ret;
            if (  true  ) {

                          ret = annotationTypeElementDeclarations520;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnnotationTypeElementDeclarations"


    // $ANTLR start "parseRule_AnnotationTypeElementDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8867:1: parseRule_AnnotationTypeElementDeclaration returns [NodeUnion<? extends AnnotationMemberNode> ret] : annotationTypeElementDeclaration EOF ;
    public final NodeUnion<? extends AnnotationMemberNode> parseRule_AnnotationTypeElementDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationMemberNode> ret = null;

        BsjAntlrParser.annotationTypeElementDeclaration_return annotationTypeElementDeclaration521 = null;



                    ruleStart("parseRule_AnnotationTypeElementDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8875:5: ( annotationTypeElementDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8876:9: annotationTypeElementDeclaration EOF
            {
            pushFollow(FOLLOW_annotationTypeElementDeclaration_in_parseRule_AnnotationTypeElementDeclaration44734);
            annotationTypeElementDeclaration521=annotationTypeElementDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnnotationTypeElementDeclaration44744); if (state.failed) return ret;
            if (  true  ) {

                          ret = (annotationTypeElementDeclaration521!=null?annotationTypeElementDeclaration521.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnnotationTypeElementDeclaration"


    // $ANTLR start "parseRule_AnonymousClassBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8883:1: parseRule_AnonymousClassBody returns [NodeUnion<? extends AnonymousClassBodyNode> ret] : anonymousClassBody EOF ;
    public final NodeUnion<? extends AnonymousClassBodyNode> parseRule_AnonymousClassBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassBodyNode> ret = null;

        NodeUnion<? extends AnonymousClassBodyNode> anonymousClassBody522 = null;



                    ruleStart("parseRule_AnonymousClassBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8891:5: ( anonymousClassBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8892:9: anonymousClassBody EOF
            {
            pushFollow(FOLLOW_anonymousClassBody_in_parseRule_AnonymousClassBody44822);
            anonymousClassBody522=anonymousClassBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnonymousClassBody44832); if (state.failed) return ret;
            if (  true  ) {

                          ret = anonymousClassBody522;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnonymousClassBody"


    // $ANTLR start "parseRule_AnonymousClassBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8899:1: parseRule_AnonymousClassBodyDeclarations returns [NodeUnion<? extends AnonymousClassMemberListNode> ret] : anonymousClassBodyDeclarations EOF ;
    public final NodeUnion<? extends AnonymousClassMemberListNode> parseRule_AnonymousClassBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberListNode> ret = null;

        NodeUnion<? extends AnonymousClassMemberListNode> anonymousClassBodyDeclarations523 = null;



                    ruleStart("parseRule_AnonymousClassBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8907:5: ( anonymousClassBodyDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8908:9: anonymousClassBodyDeclarations EOF
            {
            pushFollow(FOLLOW_anonymousClassBodyDeclarations_in_parseRule_AnonymousClassBodyDeclarations44910);
            anonymousClassBodyDeclarations523=anonymousClassBodyDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnonymousClassBodyDeclarations44920); if (state.failed) return ret;
            if (  true  ) {

                          ret = anonymousClassBodyDeclarations523;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnonymousClassBodyDeclarations"


    // $ANTLR start "parseRule_AnonymousClassBodyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8915:1: parseRule_AnonymousClassBodyDeclaration returns [NodeUnion<? extends AnonymousClassMemberNode> ret] : anonymousClassBodyDeclaration EOF ;
    public final NodeUnion<? extends AnonymousClassMemberNode> parseRule_AnonymousClassBodyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnonymousClassMemberNode> ret = null;

        BsjAntlrParser.anonymousClassBodyDeclaration_return anonymousClassBodyDeclaration524 = null;



                    ruleStart("parseRule_AnonymousClassBodyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8923:5: ( anonymousClassBodyDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8924:9: anonymousClassBodyDeclaration EOF
            {
            pushFollow(FOLLOW_anonymousClassBodyDeclaration_in_parseRule_AnonymousClassBodyDeclaration44998);
            anonymousClassBodyDeclaration524=anonymousClassBodyDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_AnonymousClassBodyDeclaration45008); if (state.failed) return ret;
            if (  true  ) {

                          ret = (anonymousClassBodyDeclaration524!=null?anonymousClassBodyDeclaration524.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_AnonymousClassBodyDeclaration"


    // $ANTLR start "parseRule_ArgumentList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8931:1: parseRule_ArgumentList returns [NodeUnion<? extends ExpressionListNode> ret] : expressionList EOF ;
    public final NodeUnion<? extends ExpressionListNode> parseRule_ArgumentList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ExpressionListNode> ret = null;

        NodeUnion<? extends ExpressionListNode> expressionList525 = null;



                    ruleStart("parseRule_ArgumentList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8939:5: ( expressionList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8940:9: expressionList EOF
            {
            pushFollow(FOLLOW_expressionList_in_parseRule_ArgumentList45086);
            expressionList525=expressionList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ArgumentList45096); if (state.failed) return ret;
            if (  true  ) {

                          ret = expressionList525;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ArgumentList"


    // $ANTLR start "parseRule_BlockStatement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8947:1: parseRule_BlockStatement returns [NodeUnion<? extends BlockStatementNode> ret] : blockStatement EOF ;
    public final NodeUnion<? extends BlockStatementNode> parseRule_BlockStatement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementNode> ret = null;

        BsjAntlrParser.blockStatement_return blockStatement526 = null;



                    ruleStart("parseRule_BlockStatement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8955:5: ( blockStatement EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8956:9: blockStatement EOF
            {
            pushFollow(FOLLOW_blockStatement_in_parseRule_BlockStatement45174);
            blockStatement526=blockStatement();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_BlockStatement45184); if (state.failed) return ret;
            if (  true  ) {

                          ret = (blockStatement526!=null?blockStatement526.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_BlockStatement"


    // $ANTLR start "parseRule_BlockStatements"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8963:1: parseRule_BlockStatements returns [NodeUnion<? extends BlockStatementListNode> ret] : blockStatementList EOF ;
    public final NodeUnion<? extends BlockStatementListNode> parseRule_BlockStatements() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends BlockStatementListNode> ret = null;

        NodeUnion<? extends BlockStatementListNode> blockStatementList527 = null;



                    ruleStart("parseRule_BlockStatements");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8971:5: ( blockStatementList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8972:9: blockStatementList EOF
            {
            pushFollow(FOLLOW_blockStatementList_in_parseRule_BlockStatements45262);
            blockStatementList527=blockStatementList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_BlockStatements45272); if (state.failed) return ret;
            if (  true  ) {

                          ret = blockStatementList527;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_BlockStatements"


    // $ANTLR start "parseRule_CatchClause"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8979:1: parseRule_CatchClause returns [NodeUnion<? extends CatchNode> ret] : catchClause EOF ;
    public final NodeUnion<? extends CatchNode> parseRule_CatchClause() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CatchNode> ret = null;

        BsjAntlrParser.catchClause_return catchClause528 = null;



                    ruleStart("parseRule_CatchClause");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8987:5: ( catchClause EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8988:9: catchClause EOF
            {
            pushFollow(FOLLOW_catchClause_in_parseRule_CatchClause45350);
            catchClause528=catchClause();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_CatchClause45360); if (state.failed) return ret;
            if (  true  ) {

                          ret = (catchClause528!=null?catchClause528.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_CatchClause"


    // $ANTLR start "parseRule_Catches"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8995:1: parseRule_Catches returns [NodeUnion<? extends CatchListNode> ret] : catches EOF ;
    public final NodeUnion<? extends CatchListNode> parseRule_Catches() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CatchListNode> ret = null;

        NodeUnion<? extends CatchListNode> catches529 = null;



                    ruleStart("parseRule_Catches");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9003:5: ( catches EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9004:9: catches EOF
            {
            pushFollow(FOLLOW_catches_in_parseRule_Catches45438);
            catches529=catches();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Catches45448); if (state.failed) return ret;
            if (  true  ) {

                          ret = catches529;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Catches"


    // $ANTLR start "parseRule_ClassBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9011:1: parseRule_ClassBody returns [NodeUnion<? extends ClassBodyNode> ret] : classBody EOF ;
    public final NodeUnion<? extends ClassBodyNode> parseRule_ClassBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassBodyNode> ret = null;

        NodeUnion<? extends ClassBodyNode> classBody530 = null;



                    ruleStart("parseRule_ClassBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9019:5: ( classBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9020:9: classBody EOF
            {
            pushFollow(FOLLOW_classBody_in_parseRule_ClassBody45526);
            classBody530=classBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ClassBody45536); if (state.failed) return ret;
            if (  true  ) {

                          ret = classBody530;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ClassBody"


    // $ANTLR start "parseRule_ClassBodyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9027:1: parseRule_ClassBodyDeclaration returns [NodeUnion<? extends ClassMemberNode> ret] : classBodyDeclaration EOF ;
    public final NodeUnion<? extends ClassMemberNode> parseRule_ClassBodyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberNode> ret = null;

        BsjAntlrParser.classBodyDeclaration_return classBodyDeclaration531 = null;



                    ruleStart("parseRule_ClassBodyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9035:5: ( classBodyDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9036:9: classBodyDeclaration EOF
            {
            pushFollow(FOLLOW_classBodyDeclaration_in_parseRule_ClassBodyDeclaration45614);
            classBodyDeclaration531=classBodyDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ClassBodyDeclaration45624); if (state.failed) return ret;
            if (  true  ) {

                          ret = (classBodyDeclaration531!=null?classBodyDeclaration531.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ClassBodyDeclaration"


    // $ANTLR start "parseRule_ClassBodyDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9043:1: parseRule_ClassBodyDeclarations returns [NodeUnion<? extends ClassMemberListNode> ret] : classBodyDeclarations EOF ;
    public final NodeUnion<? extends ClassMemberListNode> parseRule_ClassBodyDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassMemberListNode> ret = null;

        NodeUnion<? extends ClassMemberListNode> classBodyDeclarations532 = null;



                    ruleStart("parseRule_ClassBodyDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9051:5: ( classBodyDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9052:9: classBodyDeclarations EOF
            {
            pushFollow(FOLLOW_classBodyDeclarations_in_parseRule_ClassBodyDeclarations45702);
            classBodyDeclarations532=classBodyDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ClassBodyDeclarations45712); if (state.failed) return ret;
            if (  true  ) {

                          ret = classBodyDeclarations532;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ClassBodyDeclarations"


    // $ANTLR start "parseRule_ClassModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9059:1: parseRule_ClassModifiers returns [NodeUnion<? extends ClassModifiersNode> ret] : classModifiers EOF ;
    public final NodeUnion<? extends ClassModifiersNode> parseRule_ClassModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ClassModifiersNode> ret = null;

        NodeUnion<? extends ClassModifiersNode> classModifiers533 = null;



                    ruleStart("parseRule_ClassModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9067:5: ( classModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9068:9: classModifiers EOF
            {
            pushFollow(FOLLOW_classModifiers_in_parseRule_ClassModifiers45790);
            classModifiers533=classModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ClassModifiers45800); if (state.failed) return ret;
            if (  true  ) {

                          ret = classModifiers533;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ClassModifiers"


    // $ANTLR start "parseRule_ClassOrInterfaceTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9075:1: parseRule_ClassOrInterfaceTypeList returns [NodeUnion<? extends DeclaredTypeListNode> ret] : declaredTypeList EOF ;
    public final NodeUnion<? extends DeclaredTypeListNode> parseRule_ClassOrInterfaceTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends DeclaredTypeListNode> ret = null;

        NodeUnion<? extends DeclaredTypeListNode> declaredTypeList534 = null;



                    ruleStart("parseRule_ClassOrInterfaceTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9083:5: ( declaredTypeList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9084:9: declaredTypeList EOF
            {
            pushFollow(FOLLOW_declaredTypeList_in_parseRule_ClassOrInterfaceTypeList45878);
            declaredTypeList534=declaredTypeList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ClassOrInterfaceTypeList45888); if (state.failed) return ret;
            if (  true  ) {

                          ret = declaredTypeList534;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ClassOrInterfaceTypeList"


    // $ANTLR start "parseRule_CompilationUnit"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9091:1: parseRule_CompilationUnit[String name] returns [NodeUnion<? extends CompilationUnitNode> ret] : compilationUnit[name] EOF ;
    public final NodeUnion<? extends CompilationUnitNode> parseRule_CompilationUnit(String name) throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CompilationUnitNode> ret = null;

        NodeUnion<? extends CompilationUnitNode> compilationUnit535 = null;



                    ruleStart("parseRule_CompilationUnit");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9099:5: ( compilationUnit[name] EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9100:9: compilationUnit[name] EOF
            {
            pushFollow(FOLLOW_compilationUnit_in_parseRule_CompilationUnit45967);
            compilationUnit535=compilationUnit(name);

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_CompilationUnit45978); if (state.failed) return ret;
            if (  true  ) {

                          ret = compilationUnit535;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_CompilationUnit"


    // $ANTLR start "parseRule_ConstantDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9107:1: parseRule_ConstantDeclaration returns [NodeUnion<? extends ConstantDeclarationNode> ret] : constantDeclaration EOF ;
    public final NodeUnion<? extends ConstantDeclarationNode> parseRule_ConstantDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstantDeclarationNode> ret = null;

        NodeUnion<? extends ConstantDeclarationNode> constantDeclaration536 = null;



                    ruleStart("parseRule_ConstantDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9115:5: ( constantDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9116:9: constantDeclaration EOF
            {
            pushFollow(FOLLOW_constantDeclaration_in_parseRule_ConstantDeclaration46056);
            constantDeclaration536=constantDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ConstantDeclaration46066); if (state.failed) return ret;
            if (  true  ) {

                          ret = constantDeclaration536;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ConstantDeclaration"


    // $ANTLR start "parseRule_ConstantModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9123:1: parseRule_ConstantModifiers returns [NodeUnion<? extends ConstantModifiersNode> ret] : constantModifiers EOF ;
    public final NodeUnion<? extends ConstantModifiersNode> parseRule_ConstantModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstantModifiersNode> ret = null;

        NodeUnion<? extends ConstantModifiersNode> constantModifiers537 = null;



                    ruleStart("parseRule_ConstantModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9131:5: ( constantModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9132:9: constantModifiers EOF
            {
            pushFollow(FOLLOW_constantModifiers_in_parseRule_ConstantModifiers46144);
            constantModifiers537=constantModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ConstantModifiers46154); if (state.failed) return ret;
            if (  true  ) {

                          ret = constantModifiers537;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ConstantModifiers"


    // $ANTLR start "parseRule_ConstructorBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9139:1: parseRule_ConstructorBody returns [NodeUnion<? extends ConstructorBodyNode> ret] : constructorBody EOF ;
    public final NodeUnion<? extends ConstructorBodyNode> parseRule_ConstructorBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorBodyNode> ret = null;

        NodeUnion<? extends ConstructorBodyNode> constructorBody538 = null;



                    ruleStart("parseRule_ConstructorBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9147:5: ( constructorBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9148:9: constructorBody EOF
            {
            pushFollow(FOLLOW_constructorBody_in_parseRule_ConstructorBody46232);
            constructorBody538=constructorBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ConstructorBody46242); if (state.failed) return ret;
            if (  true  ) {

                          ret = constructorBody538;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ConstructorBody"


    // $ANTLR start "parseRule_ConstructorDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9155:1: parseRule_ConstructorDeclaration returns [NodeUnion<? extends ConstructorDeclarationNode> ret] : constructorDeclaration EOF ;
    public final NodeUnion<? extends ConstructorDeclarationNode> parseRule_ConstructorDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorDeclarationNode> ret = null;

        NodeUnion<? extends ConstructorDeclarationNode> constructorDeclaration539 = null;



                    ruleStart("parseRule_ConstructorDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9163:5: ( constructorDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9164:9: constructorDeclaration EOF
            {
            pushFollow(FOLLOW_constructorDeclaration_in_parseRule_ConstructorDeclaration46320);
            constructorDeclaration539=constructorDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ConstructorDeclaration46330); if (state.failed) return ret;
            if (  true  ) {

                          ret = constructorDeclaration539;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ConstructorDeclaration"


    // $ANTLR start "parseRule_ConstructorModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9171:1: parseRule_ConstructorModifiers returns [NodeUnion<? extends ConstructorModifiersNode> ret] : constructorModifiers EOF ;
    public final NodeUnion<? extends ConstructorModifiersNode> parseRule_ConstructorModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorModifiersNode> ret = null;

        NodeUnion<? extends ConstructorModifiersNode> constructorModifiers540 = null;



                    ruleStart("parseRule_ConstructorModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9179:5: ( constructorModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9180:9: constructorModifiers EOF
            {
            pushFollow(FOLLOW_constructorModifiers_in_parseRule_ConstructorModifiers46408);
            constructorModifiers540=constructorModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ConstructorModifiers46418); if (state.failed) return ret;
            if (  true  ) {

                          ret = constructorModifiers540;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ConstructorModifiers"


    // $ANTLR start "parseRule_ElementValue"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9187:1: parseRule_ElementValue returns [NodeUnion<? extends AnnotationValueNode> ret] : elementValue EOF ;
    public final NodeUnion<? extends AnnotationValueNode> parseRule_ElementValue() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationValueNode> ret = null;

        BsjAntlrParser.elementValue_return elementValue541 = null;



                    ruleStart("parseRule_ElementValue");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9195:5: ( elementValue EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9196:9: elementValue EOF
            {
            pushFollow(FOLLOW_elementValue_in_parseRule_ElementValue46496);
            elementValue541=elementValue();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ElementValue46506); if (state.failed) return ret;
            if (  true  ) {

                          ret = (elementValue541!=null?elementValue541.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ElementValue"


    // $ANTLR start "parseRule_ElementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9203:1: parseRule_ElementValues returns [NodeUnion<? extends AnnotationValueListNode> ret] : elementValues EOF ;
    public final NodeUnion<? extends AnnotationValueListNode> parseRule_ElementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationValueListNode> ret = null;

        NodeUnion<? extends AnnotationValueListNode> elementValues542 = null;



                    ruleStart("parseRule_ElementValues");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9211:5: ( elementValues EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9212:9: elementValues EOF
            {
            pushFollow(FOLLOW_elementValues_in_parseRule_ElementValues46584);
            elementValues542=elementValues();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ElementValues46594); if (state.failed) return ret;
            if (  true  ) {

                          ret = elementValues542;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ElementValues"


    // $ANTLR start "parseRule_ElementValuePair"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9219:1: parseRule_ElementValuePair returns [NodeUnion<? extends AnnotationElementNode> ret] : elementValuePair EOF ;
    public final NodeUnion<? extends AnnotationElementNode> parseRule_ElementValuePair() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationElementNode> ret = null;

        BsjAntlrParser.elementValuePair_return elementValuePair543 = null;



                    ruleStart("parseRule_ElementValuePair");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9227:5: ( elementValuePair EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9228:9: elementValuePair EOF
            {
            pushFollow(FOLLOW_elementValuePair_in_parseRule_ElementValuePair46672);
            elementValuePair543=elementValuePair();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ElementValuePair46682); if (state.failed) return ret;
            if (  true  ) {

                          ret = (elementValuePair543!=null?elementValuePair543.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ElementValuePair"


    // $ANTLR start "parseRule_ElementValuePairs"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9235:1: parseRule_ElementValuePairs returns [NodeUnion<? extends AnnotationElementListNode> ret] : elementValuePairs EOF ;
    public final NodeUnion<? extends AnnotationElementListNode> parseRule_ElementValuePairs() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends AnnotationElementListNode> ret = null;

        NodeUnion<? extends AnnotationElementListNode> elementValuePairs544 = null;



                    ruleStart("parseRule_ElementValuePairs");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9243:5: ( elementValuePairs EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9244:9: elementValuePairs EOF
            {
            pushFollow(FOLLOW_elementValuePairs_in_parseRule_ElementValuePairs46760);
            elementValuePairs544=elementValuePairs();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ElementValuePairs46770); if (state.failed) return ret;
            if (  true  ) {

                          ret = elementValuePairs544;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ElementValuePairs"


    // $ANTLR start "parseRule_EnumBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9251:1: parseRule_EnumBody returns [NodeUnion<? extends EnumBodyNode> ret] : enumBody EOF ;
    public final NodeUnion<? extends EnumBodyNode> parseRule_EnumBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumBodyNode> ret = null;

        NodeUnion<? extends EnumBodyNode> enumBody545 = null;



                    ruleStart("parseRule_EnumBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9259:5: ( enumBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9260:9: enumBody EOF
            {
            pushFollow(FOLLOW_enumBody_in_parseRule_EnumBody46848);
            enumBody545=enumBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_EnumBody46858); if (state.failed) return ret;
            if (  true  ) {

                          ret = enumBody545;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_EnumBody"


    // $ANTLR start "parseRule_EnumConstant"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9267:1: parseRule_EnumConstant returns [NodeUnion<? extends EnumConstantDeclarationNode> ret] : enumConstant EOF ;
    public final NodeUnion<? extends EnumConstantDeclarationNode> parseRule_EnumConstant() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumConstantDeclarationNode> ret = null;

        BsjAntlrParser.enumConstant_return enumConstant546 = null;



                    ruleStart("parseRule_EnumConstant");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9275:5: ( enumConstant EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9276:9: enumConstant EOF
            {
            pushFollow(FOLLOW_enumConstant_in_parseRule_EnumConstant46936);
            enumConstant546=enumConstant();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_EnumConstant46946); if (state.failed) return ret;
            if (  true  ) {

                          ret = (enumConstant546!=null?enumConstant546.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_EnumConstant"


    // $ANTLR start "parseRule_EnumConstants"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9283:1: parseRule_EnumConstants returns [NodeUnion<? extends EnumConstantDeclarationListNode> ret] : enumConstants EOF ;
    public final NodeUnion<? extends EnumConstantDeclarationListNode> parseRule_EnumConstants() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumConstantDeclarationListNode> ret = null;

        NodeUnion<? extends EnumConstantDeclarationListNode> enumConstants547 = null;



                    ruleStart("parseRule_EnumConstants");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9291:5: ( enumConstants EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9292:9: enumConstants EOF
            {
            pushFollow(FOLLOW_enumConstants_in_parseRule_EnumConstants47024);
            enumConstants547=enumConstants();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_EnumConstants47034); if (state.failed) return ret;
            if (  true  ) {

                          ret = enumConstants547;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_EnumConstants"


    // $ANTLR start "parseRule_EnumModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9299:1: parseRule_EnumModifiers returns [NodeUnion<? extends EnumModifiersNode> ret] : enumModifiers EOF ;
    public final NodeUnion<? extends EnumModifiersNode> parseRule_EnumModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends EnumModifiersNode> ret = null;

        NodeUnion<? extends EnumModifiersNode> enumModifiers548 = null;



                    ruleStart("parseRule_EnumModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9307:5: ( enumModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9308:9: enumModifiers EOF
            {
            pushFollow(FOLLOW_enumModifiers_in_parseRule_EnumModifiers47112);
            enumModifiers548=enumModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_EnumModifiers47122); if (state.failed) return ret;
            if (  true  ) {

                          ret = enumModifiers548;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_EnumModifiers"


    // $ANTLR start "parseRule_ExceptionTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9315:1: parseRule_ExceptionTypeList returns [NodeUnion<? extends UnparameterizedTypeListNode> ret] : unparameterizedTypeList EOF ;
    public final NodeUnion<? extends UnparameterizedTypeListNode> parseRule_ExceptionTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends UnparameterizedTypeListNode> ret = null;

        NodeUnion<? extends UnparameterizedTypeListNode> unparameterizedTypeList549 = null;



                    ruleStart("parseRule_ExceptionTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9323:5: ( unparameterizedTypeList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9324:9: unparameterizedTypeList EOF
            {
            pushFollow(FOLLOW_unparameterizedTypeList_in_parseRule_ExceptionTypeList47200);
            unparameterizedTypeList549=unparameterizedTypeList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ExceptionTypeList47210); if (state.failed) return ret;
            if (  true  ) {

                          ret = unparameterizedTypeList549;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ExceptionTypeList"


    // $ANTLR start "parseRule_ExplicitConstructorInvocation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9331:1: parseRule_ExplicitConstructorInvocation returns [NodeUnion<? extends ConstructorInvocationNode> ret] : explicitConstructorInvocation EOF ;
    public final NodeUnion<? extends ConstructorInvocationNode> parseRule_ExplicitConstructorInvocation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ConstructorInvocationNode> ret = null;

        NodeUnion<? extends ConstructorInvocationNode> explicitConstructorInvocation550 = null;



                    ruleStart("parseRule_ExplicitConstructorInvocation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9339:5: ( explicitConstructorInvocation EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9340:9: explicitConstructorInvocation EOF
            {
            pushFollow(FOLLOW_explicitConstructorInvocation_in_parseRule_ExplicitConstructorInvocation47288);
            explicitConstructorInvocation550=explicitConstructorInvocation();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ExplicitConstructorInvocation47298); if (state.failed) return ret;
            if (  true  ) {

                          ret = explicitConstructorInvocation550;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ExplicitConstructorInvocation"


    // $ANTLR start "parseRule_FieldDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9347:1: parseRule_FieldDeclaration returns [NodeUnion<? extends FieldDeclarationNode> ret] : fieldDeclaration EOF ;
    public final NodeUnion<? extends FieldDeclarationNode> parseRule_FieldDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends FieldDeclarationNode> ret = null;

        NodeUnion<? extends FieldDeclarationNode> fieldDeclaration551 = null;



                    ruleStart("parseRule_FieldDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9355:5: ( fieldDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9356:9: fieldDeclaration EOF
            {
            pushFollow(FOLLOW_fieldDeclaration_in_parseRule_FieldDeclaration47376);
            fieldDeclaration551=fieldDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_FieldDeclaration47386); if (state.failed) return ret;
            if (  true  ) {

                          ret = fieldDeclaration551;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_FieldDeclaration"


    // $ANTLR start "parseRule_FieldModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9363:1: parseRule_FieldModifiers returns [NodeUnion<? extends FieldModifiersNode> ret] : fieldModifiers EOF ;
    public final NodeUnion<? extends FieldModifiersNode> parseRule_FieldModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends FieldModifiersNode> ret = null;

        NodeUnion<? extends FieldModifiersNode> fieldModifiers552 = null;



                    ruleStart("parseRule_FieldModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9371:5: ( fieldModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9372:9: fieldModifiers EOF
            {
            pushFollow(FOLLOW_fieldModifiers_in_parseRule_FieldModifiers47464);
            fieldModifiers552=fieldModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_FieldModifiers47474); if (state.failed) return ret;
            if (  true  ) {

                          ret = fieldModifiers552;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_FieldModifiers"


    // $ANTLR start "parseRule_ForInit"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9379:1: parseRule_ForInit returns [NodeUnion<? extends ForInitializerNode> ret] : forInit EOF ;
    public final NodeUnion<? extends ForInitializerNode> parseRule_ForInit() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ForInitializerNode> ret = null;

        NodeUnion<? extends ForInitializerNode> forInit553 = null;



                    ruleStart("parseRule_ForInit");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9387:5: ( forInit EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9388:9: forInit EOF
            {
            pushFollow(FOLLOW_forInit_in_parseRule_ForInit47552);
            forInit553=forInit();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ForInit47562); if (state.failed) return ret;
            if (  true  ) {

                          ret = forInit553;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ForInit"


    // $ANTLR start "parseRule_FormalParameter"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9395:1: parseRule_FormalParameter returns [NodeUnion<? extends VariableNode> ret] : formalParameter EOF ;
    public final NodeUnion<? extends VariableNode> parseRule_FormalParameter() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableNode> ret = null;

        NodeUnion<? extends VariableNode> formalParameter554 = null;



                    ruleStart("parseRule_FormalParameter");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9403:5: ( formalParameter EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9404:9: formalParameter EOF
            {
            pushFollow(FOLLOW_formalParameter_in_parseRule_FormalParameter47640);
            formalParameter554=formalParameter();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_FormalParameter47650); if (state.failed) return ret;
            if (  true  ) {

                          ret = formalParameter554;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_FormalParameter"


    // $ANTLR start "parseRule_Identifier"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9411:1: parseRule_Identifier returns [NodeUnion<? extends IdentifierNode> ret] : identifier EOF ;
    public final NodeUnion<? extends IdentifierNode> parseRule_Identifier() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IdentifierNode> ret = null;

        BsjAntlrParser.identifier_return identifier555 = null;



                    ruleStart("parseRule_Identifier");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9419:5: ( identifier EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9420:9: identifier EOF
            {
            pushFollow(FOLLOW_identifier_in_parseRule_Identifier47728);
            identifier555=identifier();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Identifier47738); if (state.failed) return ret;
            if (  true  ) {

                          ret = (identifier555!=null?identifier555.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Identifier"


    // $ANTLR start "parseRule_IdentifierList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9427:1: parseRule_IdentifierList returns [NodeUnion<? extends IdentifierListNode> ret] : identifierList EOF ;
    public final NodeUnion<? extends IdentifierListNode> parseRule_IdentifierList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends IdentifierListNode> ret = null;

        NodeUnion<? extends IdentifierListNode> identifierList556 = null;



                    ruleStart("parseRule_IdentifierList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9435:5: ( identifierList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9436:9: identifierList EOF
            {
            pushFollow(FOLLOW_identifierList_in_parseRule_IdentifierList47816);
            identifierList556=identifierList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_IdentifierList47826); if (state.failed) return ret;
            if (  true  ) {

                          ret = identifierList556;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_IdentifierList"


    // $ANTLR start "parseRule_ImportDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9443:1: parseRule_ImportDeclaration returns [NodeUnion<? extends ImportNode> ret] : importDeclaration EOF ;
    public final NodeUnion<? extends ImportNode> parseRule_ImportDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportNode> ret = null;

        BsjAntlrParser.importDeclaration_return importDeclaration557 = null;



                    ruleStart("parseRule_ImportDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9451:5: ( importDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9452:9: importDeclaration EOF
            {
            pushFollow(FOLLOW_importDeclaration_in_parseRule_ImportDeclaration47904);
            importDeclaration557=importDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ImportDeclaration47914); if (state.failed) return ret;
            if (  true  ) {

                          ret = (importDeclaration557!=null?importDeclaration557.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ImportDeclaration"


    // $ANTLR start "parseRule_ImportDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9459:1: parseRule_ImportDeclarations returns [NodeUnion<? extends ImportListNode> ret] : importDeclarations EOF ;
    public final NodeUnion<? extends ImportListNode> parseRule_ImportDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ImportListNode> ret = null;

        NodeUnion<? extends ImportListNode> importDeclarations558 = null;



                    ruleStart("parseRule_ImportDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9467:5: ( importDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9468:9: importDeclarations EOF
            {
            pushFollow(FOLLOW_importDeclarations_in_parseRule_ImportDeclarations47992);
            importDeclarations558=importDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ImportDeclarations48002); if (state.failed) return ret;
            if (  true  ) {

                          ret = importDeclarations558;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ImportDeclarations"


    // $ANTLR start "parseRule_Initializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9475:1: parseRule_Initializer returns [NodeUnion<? extends InitializerDeclarationNode> ret] : initializerBlock EOF ;
    public final NodeUnion<? extends InitializerDeclarationNode> parseRule_Initializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InitializerDeclarationNode> ret = null;

        NodeUnion<? extends InitializerDeclarationNode> initializerBlock559 = null;



                    ruleStart("parseRule_Initializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9483:5: ( initializerBlock EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9484:9: initializerBlock EOF
            {
            pushFollow(FOLLOW_initializerBlock_in_parseRule_Initializer48080);
            initializerBlock559=initializerBlock();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Initializer48090); if (state.failed) return ret;
            if (  true  ) {

                          ret = initializerBlock559;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Initializer"


    // $ANTLR start "parseRule_InterfaceBody"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9491:1: parseRule_InterfaceBody returns [NodeUnion<? extends InterfaceBodyNode> ret] : interfaceBody EOF ;
    public final NodeUnion<? extends InterfaceBodyNode> parseRule_InterfaceBody() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceBodyNode> ret = null;

        NodeUnion<? extends InterfaceBodyNode> interfaceBody560 = null;



                    ruleStart("parseRule_InterfaceBody");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9499:5: ( interfaceBody EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9500:9: interfaceBody EOF
            {
            pushFollow(FOLLOW_interfaceBody_in_parseRule_InterfaceBody48168);
            interfaceBody560=interfaceBody();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_InterfaceBody48178); if (state.failed) return ret;
            if (  true  ) {

                          ret = interfaceBody560;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_InterfaceBody"


    // $ANTLR start "parseRule_InterfaceMemberDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9507:1: parseRule_InterfaceMemberDeclaration returns [NodeUnion<? extends InterfaceMemberNode> ret] : interfaceBodyDeclaration EOF ;
    public final NodeUnion<? extends InterfaceMemberNode> parseRule_InterfaceMemberDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceMemberNode> ret = null;

        BsjAntlrParser.interfaceBodyDeclaration_return interfaceBodyDeclaration561 = null;



                    ruleStart("parseRule_InterfaceMemberDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9515:5: ( interfaceBodyDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9516:9: interfaceBodyDeclaration EOF
            {
            pushFollow(FOLLOW_interfaceBodyDeclaration_in_parseRule_InterfaceMemberDeclaration48256);
            interfaceBodyDeclaration561=interfaceBodyDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_InterfaceMemberDeclaration48266); if (state.failed) return ret;
            if (  true  ) {

                          ret = (interfaceBodyDeclaration561!=null?interfaceBodyDeclaration561.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_InterfaceMemberDeclaration"


    // $ANTLR start "parseRule_InterfaceMemberDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9523:1: parseRule_InterfaceMemberDeclarations returns [NodeUnion<? extends InterfaceMemberListNode> ret] : interfaceBodyDeclarations EOF ;
    public final NodeUnion<? extends InterfaceMemberListNode> parseRule_InterfaceMemberDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceMemberListNode> ret = null;

        NodeUnion<? extends InterfaceMemberListNode> interfaceBodyDeclarations562 = null;



                    ruleStart("parseRule_InterfaceMemberDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9531:5: ( interfaceBodyDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9532:9: interfaceBodyDeclarations EOF
            {
            pushFollow(FOLLOW_interfaceBodyDeclarations_in_parseRule_InterfaceMemberDeclarations48344);
            interfaceBodyDeclarations562=interfaceBodyDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_InterfaceMemberDeclarations48354); if (state.failed) return ret;
            if (  true  ) {

                          ret = interfaceBodyDeclarations562;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_InterfaceMemberDeclarations"


    // $ANTLR start "parseRule_InterfaceModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9539:1: parseRule_InterfaceModifiers returns [NodeUnion<? extends InterfaceModifiersNode> ret] : interfaceModifiers EOF ;
    public final NodeUnion<? extends InterfaceModifiersNode> parseRule_InterfaceModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends InterfaceModifiersNode> ret = null;

        NodeUnion<? extends InterfaceModifiersNode> interfaceModifiers563 = null;



                    ruleStart("parseRule_InterfaceModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9547:5: ( interfaceModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9548:9: interfaceModifiers EOF
            {
            pushFollow(FOLLOW_interfaceModifiers_in_parseRule_InterfaceModifiers48432);
            interfaceModifiers563=interfaceModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_InterfaceModifiers48442); if (state.failed) return ret;
            if (  true  ) {

                          ret = interfaceModifiers563;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_InterfaceModifiers"


    // $ANTLR start "parseRule_JavadocComment"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9555:1: parseRule_JavadocComment returns [NodeUnion<? extends JavadocNode> ret] : EOF ;
    public final NodeUnion<? extends JavadocNode> parseRule_JavadocComment() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends JavadocNode> ret = null;


                    ruleStart("parseRule_JavadocComment");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9563:5: ( EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9565:9: EOF
            {
            match(input,EOF,FOLLOW_EOF_in_parseRule_JavadocComment48530); if (state.failed) return ret;

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_JavadocComment"


    // $ANTLR start "parseRule_LocalClassDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9568:1: parseRule_LocalClassDeclaration returns [NodeUnion<? extends LocalClassDeclarationNode> ret] : localClassDeclaration EOF ;
    public final NodeUnion<? extends LocalClassDeclarationNode> parseRule_LocalClassDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalClassDeclarationNode> ret = null;

        NodeUnion<? extends LocalClassDeclarationNode> localClassDeclaration564 = null;



                    ruleStart("parseRule_LocalClassDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9576:5: ( localClassDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9577:9: localClassDeclaration EOF
            {
            pushFollow(FOLLOW_localClassDeclaration_in_parseRule_LocalClassDeclaration48598);
            localClassDeclaration564=localClassDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_LocalClassDeclaration48608); if (state.failed) return ret;
            if (  true  ) {

                          ret = localClassDeclaration564;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_LocalClassDeclaration"


    // $ANTLR start "parseRule_LocalClassModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9584:1: parseRule_LocalClassModifiers returns [NodeUnion<? extends LocalClassModifiersNode> ret] : localClassModifiers EOF ;
    public final NodeUnion<? extends LocalClassModifiersNode> parseRule_LocalClassModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends LocalClassModifiersNode> ret = null;

        NodeUnion<? extends LocalClassModifiersNode> localClassModifiers565 = null;



                    ruleStart("parseRule_LocalClassModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9592:5: ( localClassModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9593:9: localClassModifiers EOF
            {
            pushFollow(FOLLOW_localClassModifiers_in_parseRule_LocalClassModifiers48686);
            localClassModifiers565=localClassModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_LocalClassModifiers48696); if (state.failed) return ret;
            if (  true  ) {

                          ret = localClassModifiers565;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_LocalClassModifiers"


    // $ANTLR start "parseRule_MetaAnnotation"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9600:1: parseRule_MetaAnnotation returns [NodeUnion<? extends MetaAnnotationNode> ret] : metaAnnotation EOF ;
    public final NodeUnion<? extends MetaAnnotationNode> parseRule_MetaAnnotation() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationNode> ret = null;

        BsjAntlrParser.metaAnnotation_return metaAnnotation566 = null;



                    ruleStart("parseRule_MetaAnnotation");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9608:5: ( metaAnnotation EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9609:9: metaAnnotation EOF
            {
            pushFollow(FOLLOW_metaAnnotation_in_parseRule_MetaAnnotation48774);
            metaAnnotation566=metaAnnotation();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotation48784); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaAnnotation566!=null?metaAnnotation566.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotation"


    // $ANTLR start "parseRule_MetaAnnotationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9616:1: parseRule_MetaAnnotationList returns [NodeUnion<? extends MetaAnnotationListNode> ret] : metaAnnotationList EOF ;
    public final NodeUnion<? extends MetaAnnotationListNode> parseRule_MetaAnnotationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationListNode> ret = null;

        NodeUnion<? extends MetaAnnotationListNode> metaAnnotationList567 = null;



                    ruleStart("parseRule_MetaAnnotationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9624:5: ( metaAnnotationList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9625:9: metaAnnotationList EOF
            {
            pushFollow(FOLLOW_metaAnnotationList_in_parseRule_MetaAnnotationList48862);
            metaAnnotationList567=metaAnnotationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotationList48872); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaAnnotationList567;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotationList"


    // $ANTLR start "parseRule_MetaAnnotationElement"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9632:1: parseRule_MetaAnnotationElement returns [NodeUnion<? extends MetaAnnotationElementNode> ret] : metaAnnotationElementValuePair EOF ;
    public final NodeUnion<? extends MetaAnnotationElementNode> parseRule_MetaAnnotationElement() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationElementNode> ret = null;

        BsjAntlrParser.metaAnnotationElementValuePair_return metaAnnotationElementValuePair568 = null;



                    ruleStart("parseRule_MetaAnnotationElement");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9640:5: ( metaAnnotationElementValuePair EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9641:9: metaAnnotationElementValuePair EOF
            {
            pushFollow(FOLLOW_metaAnnotationElementValuePair_in_parseRule_MetaAnnotationElement48950);
            metaAnnotationElementValuePair568=metaAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotationElement48960); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaAnnotationElementValuePair568!=null?metaAnnotationElementValuePair568.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotationElement"


    // $ANTLR start "parseRule_MetaAnnotationElements"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9648:1: parseRule_MetaAnnotationElements returns [NodeUnion<? extends MetaAnnotationElementListNode> ret] : metaAnnotationElementValuePairs EOF ;
    public final NodeUnion<? extends MetaAnnotationElementListNode> parseRule_MetaAnnotationElements() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationElementListNode> ret = null;

        NodeUnion<? extends MetaAnnotationElementListNode> metaAnnotationElementValuePairs569 = null;



                    ruleStart("parseRule_MetaAnnotationElements");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9656:5: ( metaAnnotationElementValuePairs EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9657:9: metaAnnotationElementValuePairs EOF
            {
            pushFollow(FOLLOW_metaAnnotationElementValuePairs_in_parseRule_MetaAnnotationElements49038);
            metaAnnotationElementValuePairs569=metaAnnotationElementValuePairs();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotationElements49048); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaAnnotationElementValuePairs569;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotationElements"


    // $ANTLR start "parseRule_MetaAnnotationElementValue"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9664:1: parseRule_MetaAnnotationElementValue returns [NodeUnion<? extends MetaAnnotationValueNode> ret] : metaAnnotationElementValue EOF ;
    public final NodeUnion<? extends MetaAnnotationValueNode> parseRule_MetaAnnotationElementValue() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationValueNode> ret = null;

        BsjAntlrParser.metaAnnotationElementValue_return metaAnnotationElementValue570 = null;



                    ruleStart("parseRule_MetaAnnotationElementValue");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9672:5: ( metaAnnotationElementValue EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9673:9: metaAnnotationElementValue EOF
            {
            pushFollow(FOLLOW_metaAnnotationElementValue_in_parseRule_MetaAnnotationElementValue49126);
            metaAnnotationElementValue570=metaAnnotationElementValue();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotationElementValue49136); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaAnnotationElementValue570!=null?metaAnnotationElementValue570.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotationElementValue"


    // $ANTLR start "parseRule_MetaAnnotationElementValues"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9680:1: parseRule_MetaAnnotationElementValues returns [NodeUnion<? extends MetaAnnotationValueListNode> ret] : metaAnnotationElementValues EOF ;
    public final NodeUnion<? extends MetaAnnotationValueListNode> parseRule_MetaAnnotationElementValues() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaAnnotationValueListNode> ret = null;

        NodeUnion<? extends MetaAnnotationValueListNode> metaAnnotationElementValues571 = null;



                    ruleStart("parseRule_MetaAnnotationElementValues");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9688:5: ( metaAnnotationElementValues EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9689:9: metaAnnotationElementValues EOF
            {
            pushFollow(FOLLOW_metaAnnotationElementValues_in_parseRule_MetaAnnotationElementValues49214);
            metaAnnotationElementValues571=metaAnnotationElementValues();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaAnnotationElementValues49224); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaAnnotationElementValues571;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaAnnotationElementValues"


    // $ANTLR start "parseRule_Metaprogram"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9696:1: parseRule_Metaprogram returns [NodeUnion<? extends MetaprogramNode> ret] : bsjMetaprogram EOF ;
    public final NodeUnion<? extends MetaprogramNode> parseRule_Metaprogram() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramNode> ret = null;

        NodeUnion<? extends MetaprogramNode> bsjMetaprogram572 = null;



                    ruleStart("parseRule_Metaprogram");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9704:5: ( bsjMetaprogram EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9705:9: bsjMetaprogram EOF
            {
            pushFollow(FOLLOW_bsjMetaprogram_in_parseRule_Metaprogram49302);
            bsjMetaprogram572=bsjMetaprogram();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Metaprogram49312); if (state.failed) return ret;
            if (  true  ) {

                          ret = bsjMetaprogram572;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Metaprogram"


    // $ANTLR start "parseRule_MetaprogramDependency"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9712:1: parseRule_MetaprogramDependency returns [NodeUnion<? extends MetaprogramDependencyNode> ret] : metaprogramDependency EOF ;
    public final NodeUnion<? extends MetaprogramDependencyNode> parseRule_MetaprogramDependency() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyNode> ret = null;

        BsjAntlrParser.metaprogramDependency_return metaprogramDependency573 = null;



                    ruleStart("parseRule_MetaprogramDependency");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9720:5: ( metaprogramDependency EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9721:9: metaprogramDependency EOF
            {
            pushFollow(FOLLOW_metaprogramDependency_in_parseRule_MetaprogramDependency49390);
            metaprogramDependency573=metaprogramDependency();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramDependency49400); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaprogramDependency573!=null?metaprogramDependency573.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramDependency"


    // $ANTLR start "parseRule_MetaprogramDependencyDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9728:1: parseRule_MetaprogramDependencyDeclaration returns [NodeUnion<? extends MetaprogramDependencyDeclarationNode> ret] : metaprogramDependencyDeclaration EOF ;
    public final NodeUnion<? extends MetaprogramDependencyDeclarationNode> parseRule_MetaprogramDependencyDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyDeclarationNode> ret = null;

        BsjAntlrParser.metaprogramDependencyDeclaration_return metaprogramDependencyDeclaration574 = null;



                    ruleStart("parseRule_MetaprogramDependencyDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9736:5: ( metaprogramDependencyDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9737:9: metaprogramDependencyDeclaration EOF
            {
            pushFollow(FOLLOW_metaprogramDependencyDeclaration_in_parseRule_MetaprogramDependencyDeclaration49478);
            metaprogramDependencyDeclaration574=metaprogramDependencyDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramDependencyDeclaration49488); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaprogramDependencyDeclaration574!=null?metaprogramDependencyDeclaration574.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramDependencyDeclaration"


    // $ANTLR start "parseRule_MetaprogramDependencyDeclarationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9744:1: parseRule_MetaprogramDependencyDeclarationList returns [NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret] : metaprogramDependencyDeclarationList EOF ;
    public final NodeUnion<? extends MetaprogramDependencyDeclarationListNode> parseRule_MetaprogramDependencyDeclarationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret = null;

        NodeUnion<? extends MetaprogramDependencyDeclarationListNode> metaprogramDependencyDeclarationList575 = null;



                    ruleStart("parseRule_MetaprogramDependencyDeclarationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9752:5: ( metaprogramDependencyDeclarationList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9753:9: metaprogramDependencyDeclarationList EOF
            {
            pushFollow(FOLLOW_metaprogramDependencyDeclarationList_in_parseRule_MetaprogramDependencyDeclarationList49566);
            metaprogramDependencyDeclarationList575=metaprogramDependencyDeclarationList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramDependencyDeclarationList49576); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaprogramDependencyDeclarationList575;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramDependencyDeclarationList"


    // $ANTLR start "parseRule_MetaprogramDependencyList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9760:1: parseRule_MetaprogramDependencyList returns [NodeUnion<? extends MetaprogramDependencyListNode> ret] : metaprogramDependencyList EOF ;
    public final NodeUnion<? extends MetaprogramDependencyListNode> parseRule_MetaprogramDependencyList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramDependencyListNode> ret = null;

        NodeUnion<? extends MetaprogramDependencyListNode> metaprogramDependencyList576 = null;



                    ruleStart("parseRule_MetaprogramDependencyList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9768:5: ( metaprogramDependencyList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9769:9: metaprogramDependencyList EOF
            {
            pushFollow(FOLLOW_metaprogramDependencyList_in_parseRule_MetaprogramDependencyList49654);
            metaprogramDependencyList576=metaprogramDependencyList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramDependencyList49664); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaprogramDependencyList576;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramDependencyList"


    // $ANTLR start "parseRule_MetaprogramImportDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9776:1: parseRule_MetaprogramImportDeclaration returns [NodeUnion<? extends MetaprogramImportNode> ret] : metaprogramImport EOF ;
    public final NodeUnion<? extends MetaprogramImportNode> parseRule_MetaprogramImportDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramImportNode> ret = null;

        BsjAntlrParser.metaprogramImport_return metaprogramImport577 = null;



                    ruleStart("parseRule_MetaprogramImportDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9784:5: ( metaprogramImport EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9785:9: metaprogramImport EOF
            {
            pushFollow(FOLLOW_metaprogramImport_in_parseRule_MetaprogramImportDeclaration49742);
            metaprogramImport577=metaprogramImport();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramImportDeclaration49752); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaprogramImport577!=null?metaprogramImport577.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramImportDeclaration"


    // $ANTLR start "parseRule_MetaprogramImportDeclarationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9792:1: parseRule_MetaprogramImportDeclarationList returns [NodeUnion<? extends MetaprogramImportListNode> ret] : metaImportDeclarations EOF ;
    public final NodeUnion<? extends MetaprogramImportListNode> parseRule_MetaprogramImportDeclarationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramImportListNode> ret = null;

        NodeUnion<? extends MetaprogramImportListNode> metaImportDeclarations578 = null;



                    ruleStart("parseRule_MetaprogramImportDeclarationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9800:5: ( metaImportDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9801:9: metaImportDeclarations EOF
            {
            pushFollow(FOLLOW_metaImportDeclarations_in_parseRule_MetaprogramImportDeclarationList49830);
            metaImportDeclarations578=metaImportDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramImportDeclarationList49840); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaImportDeclarations578;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramImportDeclarationList"


    // $ANTLR start "parseRule_MetaprogramTargetDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9808:1: parseRule_MetaprogramTargetDeclaration returns [NodeUnion<? extends MetaprogramTargetNode> ret] : metaprogramTarget EOF ;
    public final NodeUnion<? extends MetaprogramTargetNode> parseRule_MetaprogramTargetDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramTargetNode> ret = null;

        BsjAntlrParser.metaprogramTarget_return metaprogramTarget579 = null;



                    ruleStart("parseRule_MetaprogramTargetDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9816:5: ( metaprogramTarget EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9817:9: metaprogramTarget EOF
            {
            pushFollow(FOLLOW_metaprogramTarget_in_parseRule_MetaprogramTargetDeclaration49918);
            metaprogramTarget579=metaprogramTarget();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramTargetDeclaration49928); if (state.failed) return ret;
            if (  true  ) {

                          ret = (metaprogramTarget579!=null?metaprogramTarget579.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramTargetDeclaration"


    // $ANTLR start "parseRule_MetaprogramTargetDeclarationList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9824:1: parseRule_MetaprogramTargetDeclarationList returns [NodeUnion<? extends MetaprogramTargetListNode> ret] : metaprogramTargetList EOF ;
    public final NodeUnion<? extends MetaprogramTargetListNode> parseRule_MetaprogramTargetDeclarationList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramTargetListNode> ret = null;

        NodeUnion<? extends MetaprogramTargetListNode> metaprogramTargetList580 = null;



                    ruleStart("parseRule_MetaprogramTargetDeclarationList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9832:5: ( metaprogramTargetList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9833:9: metaprogramTargetList EOF
            {
            pushFollow(FOLLOW_metaprogramTargetList_in_parseRule_MetaprogramTargetDeclarationList50006);
            metaprogramTargetList580=metaprogramTargetList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MetaprogramTargetDeclarationList50016); if (state.failed) return ret;
            if (  true  ) {

                          ret = metaprogramTargetList580;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MetaprogramTargetDeclarationList"


    // $ANTLR start "parseRule_MethodDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9840:1: parseRule_MethodDeclaration returns [NodeUnion<? extends MethodDeclarationNode> ret] : methodDeclaration EOF ;
    public final NodeUnion<? extends MethodDeclarationNode> parseRule_MethodDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodDeclarationNode> ret = null;

        NodeUnion<? extends MethodDeclarationNode> methodDeclaration581 = null;



                    ruleStart("parseRule_MethodDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9848:5: ( methodDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9849:9: methodDeclaration EOF
            {
            pushFollow(FOLLOW_methodDeclaration_in_parseRule_MethodDeclaration50094);
            methodDeclaration581=methodDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MethodDeclaration50104); if (state.failed) return ret;
            if (  true  ) {

                          ret = methodDeclaration581;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MethodDeclaration"


    // $ANTLR start "parseRule_MethodModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9856:1: parseRule_MethodModifiers returns [NodeUnion<? extends MethodModifiersNode> ret] : methodModifiers EOF ;
    public final NodeUnion<? extends MethodModifiersNode> parseRule_MethodModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MethodModifiersNode> ret = null;

        NodeUnion<? extends MethodModifiersNode> methodModifiers582 = null;



                    ruleStart("parseRule_MethodModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9864:5: ( methodModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9865:9: methodModifiers EOF
            {
            pushFollow(FOLLOW_methodModifiers_in_parseRule_MethodModifiers50182);
            methodModifiers582=methodModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_MethodModifiers50192); if (state.failed) return ret;
            if (  true  ) {

                          ret = methodModifiers582;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_MethodModifiers"


    // $ANTLR start "parseRule_Name"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9872:1: parseRule_Name returns [NodeUnion<? extends NameNode> ret] : name EOF ;
    public final NodeUnion<? extends NameNode> parseRule_Name() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends NameNode> ret = null;

        NodeUnion<? extends NameNode> name583 = null;



                    ruleStart("parseRule_Name");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9880:5: ( name EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9881:9: name EOF
            {
            pushFollow(FOLLOW_name_in_parseRule_Name50270);
            name583=name();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Name50280); if (state.failed) return ret;
            if (  true  ) {

                          ret = name583;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Name"


    // $ANTLR start "parseRule_PackageDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9888:1: parseRule_PackageDeclaration returns [NodeUnion<? extends PackageDeclarationNode> ret] : packageDeclaration EOF ;
    public final NodeUnion<? extends PackageDeclarationNode> parseRule_PackageDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends PackageDeclarationNode> ret = null;

        NodeUnion<? extends PackageDeclarationNode> packageDeclaration584 = null;



                    ruleStart("parseRule_PackageDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9896:5: ( packageDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9897:9: packageDeclaration EOF
            {
            pushFollow(FOLLOW_packageDeclaration_in_parseRule_PackageDeclaration50358);
            packageDeclaration584=packageDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_PackageDeclaration50368); if (state.failed) return ret;
            if (  true  ) {

                          ret = packageDeclaration584;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_PackageDeclaration"


    // $ANTLR start "parseRule_Preamble"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9904:1: parseRule_Preamble returns [NodeUnion<? extends MetaprogramPreambleNode> ret] : preamble EOF ;
    public final NodeUnion<? extends MetaprogramPreambleNode> parseRule_Preamble() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends MetaprogramPreambleNode> ret = null;

        NodeUnion<? extends MetaprogramPreambleNode> preamble585 = null;



                    ruleStart("parseRule_Preamble");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9912:5: ( preamble EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9913:9: preamble EOF
            {
            pushFollow(FOLLOW_preamble_in_parseRule_Preamble50446);
            preamble585=preamble();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Preamble50456); if (state.failed) return ret;
            if (  true  ) {

                          ret = preamble585;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Preamble"


    // $ANTLR start "parseRule_ReferenceTypeList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9920:1: parseRule_ReferenceTypeList returns [NodeUnion<? extends ReferenceTypeListNode> ret] : referenceTypeList EOF ;
    public final NodeUnion<? extends ReferenceTypeListNode> parseRule_ReferenceTypeList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends ReferenceTypeListNode> ret = null;

        NodeUnion<? extends ReferenceTypeListNode> referenceTypeList586 = null;



                    ruleStart("parseRule_ReferenceTypeList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9928:5: ( referenceTypeList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9929:9: referenceTypeList EOF
            {
            pushFollow(FOLLOW_referenceTypeList_in_parseRule_ReferenceTypeList50534);
            referenceTypeList586=referenceTypeList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_ReferenceTypeList50544); if (state.failed) return ret;
            if (  true  ) {

                          ret = referenceTypeList586;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_ReferenceTypeList"


    // $ANTLR start "parseRule_StatementExpressionList"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9936:1: parseRule_StatementExpressionList returns [NodeUnion<? extends StatementExpressionListNode> ret] : statementExpressionList EOF ;
    public final NodeUnion<? extends StatementExpressionListNode> parseRule_StatementExpressionList() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends StatementExpressionListNode> ret = null;

        NodeUnion<? extends StatementExpressionListNode> statementExpressionList587 = null;



                    ruleStart("parseRule_StatementExpressionList");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9944:5: ( statementExpressionList EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9945:9: statementExpressionList EOF
            {
            pushFollow(FOLLOW_statementExpressionList_in_parseRule_StatementExpressionList50622);
            statementExpressionList587=statementExpressionList();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_StatementExpressionList50632); if (state.failed) return ret;
            if (  true  ) {

                          ret = statementExpressionList587;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_StatementExpressionList"


    // $ANTLR start "parseRule_SwitchBlockStatementGroup"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9952:1: parseRule_SwitchBlockStatementGroup returns [NodeUnion<? extends CaseNode> ret] : switchBlockStatementGroup EOF ;
    public final NodeUnion<? extends CaseNode> parseRule_SwitchBlockStatementGroup() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CaseNode> ret = null;

        BsjAntlrParser.switchBlockStatementGroup_return switchBlockStatementGroup588 = null;



                    ruleStart("parseRule_SwitchBlockStatementGroup");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9960:5: ( switchBlockStatementGroup EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9961:9: switchBlockStatementGroup EOF
            {
            pushFollow(FOLLOW_switchBlockStatementGroup_in_parseRule_SwitchBlockStatementGroup50710);
            switchBlockStatementGroup588=switchBlockStatementGroup();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_SwitchBlockStatementGroup50720); if (state.failed) return ret;
            if (  true  ) {

                          ret = (switchBlockStatementGroup588!=null?switchBlockStatementGroup588.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_SwitchBlockStatementGroup"


    // $ANTLR start "parseRule_SwitchBlockStatementGroups"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9968:1: parseRule_SwitchBlockStatementGroups returns [NodeUnion<? extends CaseListNode> ret] : switchBlockStatementGroups EOF ;
    public final NodeUnion<? extends CaseListNode> parseRule_SwitchBlockStatementGroups() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends CaseListNode> ret = null;

        NodeUnion<? extends CaseListNode> switchBlockStatementGroups589 = null;



                    ruleStart("parseRule_SwitchBlockStatementGroups");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9976:5: ( switchBlockStatementGroups EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9977:9: switchBlockStatementGroups EOF
            {
            pushFollow(FOLLOW_switchBlockStatementGroups_in_parseRule_SwitchBlockStatementGroups50798);
            switchBlockStatementGroups589=switchBlockStatementGroups();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_SwitchBlockStatementGroups50808); if (state.failed) return ret;
            if (  true  ) {

                          ret = switchBlockStatementGroups589;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_SwitchBlockStatementGroups"


    // $ANTLR start "parseRule_Type"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9984:1: parseRule_Type returns [NodeUnion<? extends TypeNode> ret] : type EOF ;
    public final NodeUnion<? extends TypeNode> parseRule_Type() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeNode> ret = null;

        NodeUnion<? extends TypeNode> type590 = null;



                    ruleStart("parseRule_Type");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9992:5: ( type EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:9993:9: type EOF
            {
            pushFollow(FOLLOW_type_in_parseRule_Type50886);
            type590=type();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Type50896); if (state.failed) return ret;
            if (  true  ) {

                          ret = type590;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Type"


    // $ANTLR start "parseRule_TypeArguments"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10000:1: parseRule_TypeArguments returns [NodeUnion<? extends TypeArgumentListNode> ret] : typeArguments EOF ;
    public final NodeUnion<? extends TypeArgumentListNode> parseRule_TypeArguments() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeArgumentListNode> ret = null;

        NodeUnion<? extends TypeArgumentListNode> typeArguments591 = null;



                    ruleStart("parseRule_TypeArguments");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10008:5: ( typeArguments EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10009:9: typeArguments EOF
            {
            pushFollow(FOLLOW_typeArguments_in_parseRule_TypeArguments50974);
            typeArguments591=typeArguments();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_TypeArguments50984); if (state.failed) return ret;
            if (  true  ) {

                          ret = typeArguments591;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_TypeArguments"


    // $ANTLR start "parseRule_TypeDeclaration"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10016:1: parseRule_TypeDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : typeDeclaration EOF ;
    public final NodeUnion<? extends TypeDeclarationNode> parseRule_TypeDeclaration() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationNode> ret = null;

        BsjAntlrParser.typeDeclaration_return typeDeclaration592 = null;



                    ruleStart("parseRule_TypeDeclaration");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10024:5: ( typeDeclaration EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10025:9: typeDeclaration EOF
            {
            pushFollow(FOLLOW_typeDeclaration_in_parseRule_TypeDeclaration51062);
            typeDeclaration592=typeDeclaration();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_TypeDeclaration51072); if (state.failed) return ret;
            if (  true  ) {

                          ret = (typeDeclaration592!=null?typeDeclaration592.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_TypeDeclaration"


    // $ANTLR start "parseRule_TypeDeclarations"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10032:1: parseRule_TypeDeclarations returns [NodeUnion<? extends TypeDeclarationListNode> ret] : typeDeclarations EOF ;
    public final NodeUnion<? extends TypeDeclarationListNode> parseRule_TypeDeclarations() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeDeclarationListNode> ret = null;

        NodeUnion<? extends TypeDeclarationListNode> typeDeclarations593 = null;



                    ruleStart("parseRule_TypeDeclarations");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10040:5: ( typeDeclarations EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10041:9: typeDeclarations EOF
            {
            pushFollow(FOLLOW_typeDeclarations_in_parseRule_TypeDeclarations51150);
            typeDeclarations593=typeDeclarations();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_TypeDeclarations51160); if (state.failed) return ret;
            if (  true  ) {

                          ret = typeDeclarations593;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_TypeDeclarations"


    // $ANTLR start "parseRule_TypeParameter"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10048:1: parseRule_TypeParameter returns [NodeUnion<? extends TypeParameterNode> ret] : typeParameter EOF ;
    public final NodeUnion<? extends TypeParameterNode> parseRule_TypeParameter() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeParameterNode> ret = null;

        BsjAntlrParser.typeParameter_return typeParameter594 = null;



                    ruleStart("parseRule_TypeParameter");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10056:5: ( typeParameter EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10057:9: typeParameter EOF
            {
            pushFollow(FOLLOW_typeParameter_in_parseRule_TypeParameter51238);
            typeParameter594=typeParameter();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_TypeParameter51248); if (state.failed) return ret;
            if (  true  ) {

                          ret = (typeParameter594!=null?typeParameter594.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_TypeParameter"


    // $ANTLR start "parseRule_TypeParameters"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10064:1: parseRule_TypeParameters returns [NodeUnion<? extends TypeParameterListNode> ret] : typeParameters EOF ;
    public final NodeUnion<? extends TypeParameterListNode> parseRule_TypeParameters() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends TypeParameterListNode> ret = null;

        NodeUnion<? extends TypeParameterListNode> typeParameters595 = null;



                    ruleStart("parseRule_TypeParameters");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10072:5: ( typeParameters EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10073:9: typeParameters EOF
            {
            pushFollow(FOLLOW_typeParameters_in_parseRule_TypeParameters51326);
            typeParameters595=typeParameters();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_TypeParameters51336); if (state.failed) return ret;
            if (  true  ) {

                          ret = typeParameters595;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_TypeParameters"


    // $ANTLR start "parseRule_VariableDeclarator"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10080:1: parseRule_VariableDeclarator returns [NodeUnion<? extends VariableDeclaratorNode> ret] : variableDeclarator EOF ;
    public final NodeUnion<? extends VariableDeclaratorNode> parseRule_VariableDeclarator() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableDeclaratorNode> ret = null;

        BsjAntlrParser.variableDeclarator_return variableDeclarator596 = null;



                    ruleStart("parseRule_VariableDeclarator");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10088:5: ( variableDeclarator EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10089:9: variableDeclarator EOF
            {
            pushFollow(FOLLOW_variableDeclarator_in_parseRule_VariableDeclarator51414);
            variableDeclarator596=variableDeclarator();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_VariableDeclarator51424); if (state.failed) return ret;
            if (  true  ) {

                          ret = (variableDeclarator596!=null?variableDeclarator596.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_VariableDeclarator"


    // $ANTLR start "parseRule_VariableDeclarators"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10096:1: parseRule_VariableDeclarators returns [NodeUnion<? extends VariableDeclaratorListNode> ret] : variableDeclarators EOF ;
    public final NodeUnion<? extends VariableDeclaratorListNode> parseRule_VariableDeclarators() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableDeclaratorListNode> ret = null;

        NodeUnion<? extends VariableDeclaratorListNode> variableDeclarators597 = null;



                    ruleStart("parseRule_VariableDeclarators");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10104:5: ( variableDeclarators EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10105:9: variableDeclarators EOF
            {
            pushFollow(FOLLOW_variableDeclarators_in_parseRule_VariableDeclarators51502);
            variableDeclarators597=variableDeclarators();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_VariableDeclarators51512); if (state.failed) return ret;
            if (  true  ) {

                          ret = variableDeclarators597;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_VariableDeclarators"


    // $ANTLR start "parseRule_VariableInitializer"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10112:1: parseRule_VariableInitializer returns [NodeUnion<? extends VariableInitializerNode> ret] : variableInitializer EOF ;
    public final NodeUnion<? extends VariableInitializerNode> parseRule_VariableInitializer() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableInitializerNode> ret = null;

        BsjAntlrParser.variableInitializer_return variableInitializer598 = null;



                    ruleStart("parseRule_VariableInitializer");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10120:5: ( variableInitializer EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10121:9: variableInitializer EOF
            {
            pushFollow(FOLLOW_variableInitializer_in_parseRule_VariableInitializer51590);
            variableInitializer598=variableInitializer();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_VariableInitializer51600); if (state.failed) return ret;
            if (  true  ) {

                          ret = (variableInitializer598!=null?variableInitializer598.ret:null);
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_VariableInitializer"


    // $ANTLR start "parseRule_VariableInitializers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10128:1: parseRule_VariableInitializers returns [NodeUnion<? extends VariableInitializerListNode> ret] : variableInitializers EOF ;
    public final NodeUnion<? extends VariableInitializerListNode> parseRule_VariableInitializers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableInitializerListNode> ret = null;

        NodeUnion<? extends VariableInitializerListNode> variableInitializers599 = null;



                    ruleStart("parseRule_VariableInitializers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10136:5: ( variableInitializers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10137:9: variableInitializers EOF
            {
            pushFollow(FOLLOW_variableInitializers_in_parseRule_VariableInitializers51678);
            variableInitializers599=variableInitializers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_VariableInitializers51688); if (state.failed) return ret;
            if (  true  ) {

                          ret = variableInitializers599;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_VariableInitializers"


    // $ANTLR start "parseRule_VariableModifiers"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10144:1: parseRule_VariableModifiers returns [NodeUnion<? extends VariableModifiersNode> ret] : variableModifiers EOF ;
    public final NodeUnion<? extends VariableModifiersNode> parseRule_VariableModifiers() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends VariableModifiersNode> ret = null;

        NodeUnion<? extends VariableModifiersNode> variableModifiers600 = null;



                    ruleStart("parseRule_VariableModifiers");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10152:5: ( variableModifiers EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10153:9: variableModifiers EOF
            {
            pushFollow(FOLLOW_variableModifiers_in_parseRule_VariableModifiers51766);
            variableModifiers600=variableModifiers();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_VariableModifiers51776); if (state.failed) return ret;
            if (  true  ) {

                          ret = variableModifiers600;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_VariableModifiers"


    // $ANTLR start "parseRule_Wildcard"
    // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10160:1: parseRule_Wildcard returns [NodeUnion<? extends WildcardTypeNode> ret] : wildcard EOF ;
    public final NodeUnion<? extends WildcardTypeNode> parseRule_Wildcard() throws RecognitionException {
        Rule_stack.push(new Rule_scope());

        NodeUnion<? extends WildcardTypeNode> ret = null;

        NodeUnion<? extends WildcardTypeNode> wildcard601 = null;



                    ruleStart("parseRule_Wildcard");
                
        try {
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10168:5: ( wildcard EOF )
            // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:10169:9: wildcard EOF
            {
            pushFollow(FOLLOW_wildcard_in_parseRule_Wildcard51854);
            wildcard601=wildcard();

            state._fsp--;
            if (state.failed) return ret;
            match(input,EOF,FOLLOW_EOF_in_parseRule_Wildcard51864); if (state.failed) return ret;
            if (  true  ) {

                          ret = wildcard601;
                      
            }

            }

            if (  true  ) {

                          ruleStop();
                      
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            Rule_stack.pop();

        }
        return ret;
    }
    // $ANTLR end "parseRule_Wildcard"

    // $ANTLR start synpred2_BsjAntlr
    public final void synpred2_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:777:9: ( splice[MetaprogramNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:777:9: splice[MetaprogramNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred2_BsjAntlr289);
        splice(MetaprogramNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_BsjAntlr

    // $ANTLR start synpred3_BsjAntlr
    public final void synpred3_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:805:9: ( splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:805:9: splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred3_BsjAntlr426);
        splice(MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_BsjAntlr

    // $ANTLR start synpred5_BsjAntlr
    public final void synpred5_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:837:9: ( splice[MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:837:9: splice[MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred5_BsjAntlr603);
        splice(MetaprogramImportNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_BsjAntlr

    // $ANTLR start synpred6_BsjAntlr
    public final void synpred6_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:861:9: ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:861:9: splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred6_BsjAntlr728);
        splice(ImportNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred6_BsjAntlr

    // $ANTLR start synpred10_BsjAntlr
    public final void synpred10_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:914:13: ( splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:914:13: splice[MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred10_BsjAntlr1080);
        splice(MetaprogramDependencyDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_BsjAntlr

    // $ANTLR start synpred11_BsjAntlr
    public final void synpred11_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.metaprogramDependencyDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:937:21: (b= metaprogramDependencyDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:937:21: b= metaprogramDependencyDeclaration
        {
        pushFollow(FOLLOW_metaprogramDependencyDeclaration_in_synpred11_BsjAntlr1199);
        b=metaprogramDependencyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_BsjAntlr

    // $ANTLR start synpred12_BsjAntlr
    public final void synpred12_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:966:9: ( ( metaprogramDependencyDeclarationList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:966:9: ( metaprogramDependencyDeclarationList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:966:9: ( metaprogramDependencyDeclarationList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:967:13: metaprogramDependencyDeclarationList
        {
        pushFollow(FOLLOW_metaprogramDependencyDeclarationList_in_synpred12_BsjAntlr1346);
        metaprogramDependencyDeclarationList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_BsjAntlr

    // $ANTLR start synpred13_BsjAntlr
    public final void synpred13_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:990:9: ( splice[MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:990:9: splice[MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred13_BsjAntlr1482);
        splice(MetaprogramDependencyDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred13_BsjAntlr

    // $ANTLR start synpred14_BsjAntlr
    public final void synpred14_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1016:13: ( splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1016:13: splice[MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred14_BsjAntlr1621);
        splice(MetaprogramDependencyListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_BsjAntlr

    // $ANTLR start synpred17_BsjAntlr
    public final void synpred17_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1070:9: ( ( metaprogramDependencyList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1070:9: ( metaprogramDependencyList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1070:9: ( metaprogramDependencyList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1071:13: metaprogramDependencyList
        {
        pushFollow(FOLLOW_metaprogramDependencyList_in_synpred17_BsjAntlr1912);
        metaprogramDependencyList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred17_BsjAntlr

    // $ANTLR start synpred18_BsjAntlr
    public final void synpred18_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1095:9: ( splice[MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1095:9: splice[MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred18_BsjAntlr2045);
        splice(MetaprogramDependencyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred18_BsjAntlr

    // $ANTLR start synpred20_BsjAntlr
    public final void synpred20_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1124:13: ( splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1124:13: splice[MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred20_BsjAntlr2213);
        splice(MetaprogramTargetListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred20_BsjAntlr

    // $ANTLR start synpred21_BsjAntlr
    public final void synpred21_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.metaprogramTarget_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1147:21: (b= metaprogramTarget )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1147:21: b= metaprogramTarget
        {
        pushFollow(FOLLOW_metaprogramTarget_in_synpred21_BsjAntlr2332);
        b=metaprogramTarget();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred21_BsjAntlr

    // $ANTLR start synpred22_BsjAntlr
    public final void synpred22_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1176:9: ( ( metaprogramTargetList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1176:9: ( metaprogramTargetList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1176:9: ( metaprogramTargetList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1177:13: metaprogramTargetList
        {
        pushFollow(FOLLOW_metaprogramTargetList_in_synpred22_BsjAntlr2479);
        metaprogramTargetList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_BsjAntlr

    // $ANTLR start synpred23_BsjAntlr
    public final void synpred23_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1200:9: ( splice[MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1200:9: splice[MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred23_BsjAntlr2612);
        splice(MetaprogramTargetNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred23_BsjAntlr

    // $ANTLR start synpred24_BsjAntlr
    public final void synpred24_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1240:13: ( splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1240:13: splice[IdentifierListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred24_BsjAntlr2832);
        splice(IdentifierListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_BsjAntlr

    // $ANTLR start synpred27_BsjAntlr
    public final void synpred27_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1294:9: ( ( identifierList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1294:9: ( identifierList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1294:9: ( identifierList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1295:13: identifierList
        {
        pushFollow(FOLLOW_identifierList_in_synpred27_BsjAntlr3123);
        identifierList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred27_BsjAntlr

    // $ANTLR start synpred28_BsjAntlr
    public final void synpred28_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1413:13: ( splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1413:13: splice[MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred28_BsjAntlr3745);
        splice(MetaAnnotationListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred28_BsjAntlr

    // $ANTLR start synpred29_BsjAntlr
    public final void synpred29_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.metaAnnotation_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1436:21: (b= metaAnnotation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1436:21: b= metaAnnotation
        {
        pushFollow(FOLLOW_metaAnnotation_in_synpred29_BsjAntlr3864);
        b=metaAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred29_BsjAntlr

    // $ANTLR start synpred30_BsjAntlr
    public final void synpred30_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1465:9: ( ( metaAnnotationList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1465:9: ( metaAnnotationList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1465:9: ( metaAnnotationList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1466:13: metaAnnotationList
        {
        pushFollow(FOLLOW_metaAnnotationList_in_synpred30_BsjAntlr4011);
        metaAnnotationList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_BsjAntlr

    // $ANTLR start synpred31_BsjAntlr
    public final void synpred31_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1497:13: ( splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1497:13: splice[MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred31_BsjAntlr4178);
        splice(MetaAnnotationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_BsjAntlr

    // $ANTLR start synpred32_BsjAntlr
    public final void synpred32_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1508:25: ( optionalMetaAnnotationElementValuePairs )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1508:25: optionalMetaAnnotationElementValuePairs
        {
        pushFollow(FOLLOW_optionalMetaAnnotationElementValuePairs_in_synpred32_BsjAntlr4326);
        optionalMetaAnnotationElementValuePairs();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_BsjAntlr

    // $ANTLR start synpred33_BsjAntlr
    public final void synpred33_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1516:25: ( metaAnnotationElementValue )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1516:25: metaAnnotationElementValue
        {
        pushFollow(FOLLOW_metaAnnotationElementValue_in_synpred33_BsjAntlr4400);
        metaAnnotationElementValue();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_BsjAntlr

    // $ANTLR start synpred34_BsjAntlr
    public final void synpred34_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1505:17: ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1505:17: ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1505:17: ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1506:21: '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')'
        {
        match(input,LPAREN,FOLLOW_LPAREN_in_synpred34_BsjAntlr4275); if (state.failed) return ;
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1507:21: ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )?
        int alt302=3;
        alt302 = dfa302.predict(input);
        switch (alt302) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1508:25: optionalMetaAnnotationElementValuePairs
                {
                pushFollow(FOLLOW_optionalMetaAnnotationElementValuePairs_in_synpred34_BsjAntlr4326);
                optionalMetaAnnotationElementValuePairs();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1516:25: metaAnnotationElementValue
                {
                pushFollow(FOLLOW_metaAnnotationElementValue_in_synpred34_BsjAntlr4400);
                metaAnnotationElementValue();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        match(input,RPAREN,FOLLOW_RPAREN_in_synpred34_BsjAntlr4472); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_BsjAntlr

    // $ANTLR start synpred35_BsjAntlr
    public final void synpred35_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1553:13: ( splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1553:13: splice[MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred35_BsjAntlr4646);
        splice(MetaAnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_BsjAntlr

    // $ANTLR start synpred37_BsjAntlr
    public final void synpred37_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1606:9: ( ( metaAnnotationElementValuePairs ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1606:9: ( metaAnnotationElementValuePairs )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1606:9: ( metaAnnotationElementValuePairs )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1607:13: metaAnnotationElementValuePairs
        {
        pushFollow(FOLLOW_metaAnnotationElementValuePairs_in_synpred37_BsjAntlr4926);
        metaAnnotationElementValuePairs();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_BsjAntlr

    // $ANTLR start synpred38_BsjAntlr
    public final void synpred38_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1637:9: ( splice[MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1637:9: splice[MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred38_BsjAntlr5066);
        splice(MetaAnnotationElementNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred38_BsjAntlr

    // $ANTLR start synpred39_BsjAntlr
    public final void synpred39_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1668:9: ( splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1668:9: splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred39_BsjAntlr5186);
        splice(MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred39_BsjAntlr

    // $ANTLR start synpred40_BsjAntlr
    public final void synpred40_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1674:9: ( conditionalExpression )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1674:9: conditionalExpression
        {
        pushFollow(FOLLOW_conditionalExpression_in_synpred40_BsjAntlr5216);
        conditionalExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred40_BsjAntlr

    // $ANTLR start synpred41_BsjAntlr
    public final void synpred41_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1679:9: ( metaAnnotation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1679:9: metaAnnotation
        {
        pushFollow(FOLLOW_metaAnnotation_in_synpred41_BsjAntlr5245);
        metaAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred41_BsjAntlr

    // $ANTLR start synpred42_BsjAntlr
    public final void synpred42_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1710:13: ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1710:13: splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred42_BsjAntlr5375);
        splice(MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_BsjAntlr

    // $ANTLR start synpred44_BsjAntlr
    public final void synpred44_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1763:9: ( ( metaAnnotationElementValues ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1763:9: ( metaAnnotationElementValues )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1763:9: ( metaAnnotationElementValues )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1764:13: metaAnnotationElementValues
        {
        pushFollow(FOLLOW_metaAnnotationElementValues_in_synpred44_BsjAntlr5655);
        metaAnnotationElementValues();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_BsjAntlr

    // $ANTLR start synpred45_BsjAntlr
    public final void synpred45_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1796:9: ( splice[MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1796:9: splice[MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred45_BsjAntlr5800);
        splice(MetaAnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred45_BsjAntlr

    // $ANTLR start synpred47_BsjAntlr
    public final void synpred47_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1824:13: ( splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1824:13: splice[RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred47_BsjAntlr5962);
        splice(RawCodeLiteralNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred47_BsjAntlr

    // $ANTLR start synpred51_BsjAntlr
    public final void synpred51_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1948:9: ( splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1948:9: splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred51_BsjAntlr6657);
        splice(CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred51_BsjAntlr

    // $ANTLR start synpred52_BsjAntlr
    public final void synpred52_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1954:9: ( packageDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1954:9: packageDeclaration
        {
        pushFollow(FOLLOW_packageDeclaration_in_synpred52_BsjAntlr6684);
        packageDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_BsjAntlr

    // $ANTLR start synpred53_BsjAntlr
    public final void synpred53_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1978:9: ( splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:1978:9: splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred53_BsjAntlr6803);
        splice(PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred53_BsjAntlr

    // $ANTLR start synpred54_BsjAntlr
    public final void synpred54_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2005:13: ( splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2005:13: splice[MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred54_BsjAntlr6937);
        splice(MetaprogramImportListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred54_BsjAntlr

    // $ANTLR start synpred55_BsjAntlr
    public final void synpred55_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.metaprogramImport_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2028:21: (b= metaprogramImport )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2028:21: b= metaprogramImport
        {
        pushFollow(FOLLOW_metaprogramImport_in_synpred55_BsjAntlr7056);
        b=metaprogramImport();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred55_BsjAntlr

    // $ANTLR start synpred56_BsjAntlr
    public final void synpred56_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2057:9: ( ( metaImportDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2057:9: ( metaImportDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2057:9: ( metaImportDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2058:13: metaImportDeclarations
        {
        pushFollow(FOLLOW_metaImportDeclarations_in_synpred56_BsjAntlr7203);
        metaImportDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred56_BsjAntlr

    // $ANTLR start synpred57_BsjAntlr
    public final void synpred57_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2083:13: ( splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2083:13: splice[ImportListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred57_BsjAntlr7350);
        splice(ImportListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_BsjAntlr

    // $ANTLR start synpred58_BsjAntlr
    public final void synpred58_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.importDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2106:21: (b= importDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2106:21: b= importDeclaration
        {
        pushFollow(FOLLOW_importDeclaration_in_synpred58_BsjAntlr7469);
        b=importDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_BsjAntlr

    // $ANTLR start synpred59_BsjAntlr
    public final void synpred59_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2135:9: ( ( importDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2135:9: ( importDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2135:9: ( importDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2136:13: importDeclarations
        {
        pushFollow(FOLLOW_importDeclarations_in_synpred59_BsjAntlr7616);
        importDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred59_BsjAntlr

    // $ANTLR start synpred60_BsjAntlr
    public final void synpred60_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2160:13: ( importStaticOnDemandBody )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2160:13: importStaticOnDemandBody
        {
        pushFollow(FOLLOW_importStaticOnDemandBody_in_synpred60_BsjAntlr7763);
        importStaticOnDemandBody();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_BsjAntlr

    // $ANTLR start synpred61_BsjAntlr
    public final void synpred61_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2165:13: ( importStaticSingleBody )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2165:13: importStaticSingleBody
        {
        pushFollow(FOLLOW_importStaticSingleBody_in_synpred61_BsjAntlr7801);
        importStaticSingleBody();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_BsjAntlr

    // $ANTLR start synpred62_BsjAntlr
    public final void synpred62_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2170:13: ( importOnDemandBody )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2170:13: importOnDemandBody
        {
        pushFollow(FOLLOW_importOnDemandBody_in_synpred62_BsjAntlr7839);
        importOnDemandBody();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred62_BsjAntlr

    // $ANTLR start synpred63_BsjAntlr
    public final void synpred63_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2253:9: ( splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2253:9: splice[ImportNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred63_BsjAntlr8294);
        splice(ImportNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred63_BsjAntlr

    // $ANTLR start synpred64_BsjAntlr
    public final void synpred64_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2312:13: ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2312:13: splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred64_BsjAntlr8491);
        splice(TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred64_BsjAntlr

    // $ANTLR start synpred65_BsjAntlr
    public final void synpred65_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.typeDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2335:21: (b= typeDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2335:21: b= typeDeclaration
        {
        pushFollow(FOLLOW_typeDeclaration_in_synpred65_BsjAntlr8610);
        b=typeDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred65_BsjAntlr

    // $ANTLR start synpred66_BsjAntlr
    public final void synpred66_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2364:9: ( ( typeDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2364:9: ( typeDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2364:9: ( typeDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2365:13: typeDeclarations
        {
        pushFollow(FOLLOW_typeDeclarations_in_synpred66_BsjAntlr8757);
        typeDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred66_BsjAntlr

    // $ANTLR start synpred67_BsjAntlr
    public final void synpred67_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2388:9: ( splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2388:9: splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred67_BsjAntlr8890);
        splice(TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_BsjAntlr

    // $ANTLR start synpred68_BsjAntlr
    public final void synpred68_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2394:9: ( classOrInterfaceDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2394:9: classOrInterfaceDeclaration
        {
        pushFollow(FOLLOW_classOrInterfaceDeclaration_in_synpred68_BsjAntlr8917);
        classOrInterfaceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_BsjAntlr

    // $ANTLR start synpred69_BsjAntlr
    public final void synpred69_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2399:9: ( noOp )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2399:9: noOp
        {
        pushFollow(FOLLOW_noOp_in_synpred69_BsjAntlr8943);
        noOp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred69_BsjAntlr

    // $ANTLR start synpred70_BsjAntlr
    public final void synpred70_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2419:9: ( splice[NoOperationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2419:9: splice[NoOperationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred70_BsjAntlr9050);
        splice(NoOperationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred70_BsjAntlr

    // $ANTLR start synpred71_BsjAntlr
    public final void synpred71_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:10: ( classHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:10: classHeader
        {
        pushFollow(FOLLOW_classHeader_in_synpred71_BsjAntlr9166);
        classHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred71_BsjAntlr

    // $ANTLR start synpred72_BsjAntlr
    public final void synpred72_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:9: ( classHeader | enumHeader )
        int alt303=2;
        alt303 = dfa303.predict(input);
        switch (alt303) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:10: classHeader
                {
                pushFollow(FOLLOW_classHeader_in_synpred72_BsjAntlr9166);
                classHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2441:24: enumHeader
                {
                pushFollow(FOLLOW_enumHeader_in_synpred72_BsjAntlr9170);
                enumHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }}
    // $ANTLR end synpred72_BsjAntlr

    // $ANTLR start synpred73_BsjAntlr
    public final void synpred73_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2477:13: ( metaAnnotation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2477:13: metaAnnotation
        {
        pushFollow(FOLLOW_metaAnnotation_in_synpred73_BsjAntlr9305);
        metaAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred73_BsjAntlr

    // $ANTLR start synpred74_BsjAntlr
    public final void synpred74_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2492:13: ( annotation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2492:13: annotation
        {
        pushFollow(FOLLOW_annotation_in_synpred74_BsjAntlr9343);
        annotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred74_BsjAntlr

    // $ANTLR start synpred86_BsjAntlr
    public final void synpred86_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2841:9: ( classHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2841:10: classHeader
        {
        pushFollow(FOLLOW_classHeader_in_synpred86_BsjAntlr10883);
        classHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_BsjAntlr

    // $ANTLR start synpred87_BsjAntlr
    public final void synpred87_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2863:9: ( splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2863:9: splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred87_BsjAntlr10993);
        splice(ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_BsjAntlr

    // $ANTLR start synpred90_BsjAntlr
    public final void synpred90_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2903:9: ( splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2903:9: splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred90_BsjAntlr11215);
        splice(LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred90_BsjAntlr

    // $ANTLR start synpred93_BsjAntlr
    public final void synpred93_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2944:13: ( splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:2944:13: splice[TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred93_BsjAntlr11458);
        splice(TypeParameterListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred93_BsjAntlr

    // $ANTLR start synpred96_BsjAntlr
    public final void synpred96_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3024:9: ( splice[TypeParameterNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3024:9: splice[TypeParameterNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred96_BsjAntlr11881);
        splice(TypeParameterNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_BsjAntlr

    // $ANTLR start synpred98_BsjAntlr
    public final void synpred98_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3053:13: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3053:13: splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred98_BsjAntlr12061);
        splice(DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_BsjAntlr

    // $ANTLR start synpred100_BsjAntlr
    public final void synpred100_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3106:9: ( ( typeBound ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3106:9: ( typeBound )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3106:9: ( typeBound )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3107:13: typeBound
        {
        pushFollow(FOLLOW_typeBound_in_synpred100_BsjAntlr12341);
        typeBound();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred100_BsjAntlr

    // $ANTLR start synpred101_BsjAntlr
    public final void synpred101_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3132:9: ( splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3132:9: splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred101_BsjAntlr12477);
        splice(EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_BsjAntlr

    // $ANTLR start synpred103_BsjAntlr
    public final void synpred103_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3169:9: ( splice[EnumBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3169:9: splice[EnumBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred103_BsjAntlr12671);
        splice(EnumBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_BsjAntlr

    // $ANTLR start synpred106_BsjAntlr
    public final void synpred106_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3202:13: ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3202:13: splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred106_BsjAntlr12870);
        splice(EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred106_BsjAntlr

    // $ANTLR start synpred108_BsjAntlr
    public final void synpred108_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3255:9: ( ( enumConstants ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3255:9: ( enumConstants )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3255:9: ( enumConstants )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3256:13: enumConstants
        {
        pushFollow(FOLLOW_enumConstants_in_synpred108_BsjAntlr13150);
        enumConstants();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred108_BsjAntlr

    // $ANTLR start synpred109_BsjAntlr
    public final void synpred109_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3287:9: ( splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3287:9: splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred109_BsjAntlr13286);
        splice(EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred109_BsjAntlr

    // $ANTLR start synpred112_BsjAntlr
    public final void synpred112_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3342:9: ( interfaceHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3342:10: interfaceHeader
        {
        pushFollow(FOLLOW_interfaceHeader_in_synpred112_BsjAntlr13595);
        interfaceHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred112_BsjAntlr

    // $ANTLR start synpred113_BsjAntlr
    public final void synpred113_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3364:9: ( splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3364:9: splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred113_BsjAntlr13713);
        splice(InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred113_BsjAntlr

    // $ANTLR start synpred115_BsjAntlr
    public final void synpred115_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3402:13: ( splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3402:13: splice[DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred115_BsjAntlr13927);
        splice(DeclaredTypeListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred115_BsjAntlr

    // $ANTLR start synpred117_BsjAntlr
    public final void synpred117_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3455:9: ( ( declaredTypeList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3455:9: ( declaredTypeList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3455:9: ( declaredTypeList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3456:13: declaredTypeList
        {
        pushFollow(FOLLOW_declaredTypeList_in_synpred117_BsjAntlr14207);
        declaredTypeList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred117_BsjAntlr

    // $ANTLR start synpred118_BsjAntlr
    public final void synpred118_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3481:13: ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3481:13: splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred118_BsjAntlr14354);
        splice(ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred118_BsjAntlr

    // $ANTLR start synpred120_BsjAntlr
    public final void synpred120_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3534:9: ( ( referenceTypeList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3534:9: ( referenceTypeList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3534:9: ( referenceTypeList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3535:13: referenceTypeList
        {
        pushFollow(FOLLOW_referenceTypeList_in_synpred120_BsjAntlr14634);
        referenceTypeList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred120_BsjAntlr

    // $ANTLR start synpred121_BsjAntlr
    public final void synpred121_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3558:9: ( splice[ClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3558:9: splice[ClassBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred121_BsjAntlr14767);
        splice(ClassBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_BsjAntlr

    // $ANTLR start synpred122_BsjAntlr
    public final void synpred122_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3581:9: ( splice[AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3581:9: splice[AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred122_BsjAntlr14895);
        splice(AnonymousClassBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_BsjAntlr

    // $ANTLR start synpred123_BsjAntlr
    public final void synpred123_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3604:9: ( splice[InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3604:9: splice[InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred123_BsjAntlr15021);
        splice(InterfaceBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_BsjAntlr

    // $ANTLR start synpred124_BsjAntlr
    public final void synpred124_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3627:9: ( splice[InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3627:9: splice[InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred124_BsjAntlr15150);
        splice(InitializerDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred124_BsjAntlr

    // $ANTLR start synpred126_BsjAntlr
    public final void synpred126_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3655:13: ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3655:13: splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred126_BsjAntlr15292);
        splice(ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_BsjAntlr

    // $ANTLR start synpred127_BsjAntlr
    public final void synpred127_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.classBodyDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3678:21: (b= classBodyDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3678:21: b= classBodyDeclaration
        {
        pushFollow(FOLLOW_classBodyDeclaration_in_synpred127_BsjAntlr15411);
        b=classBodyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_BsjAntlr

    // $ANTLR start synpred128_BsjAntlr
    public final void synpred128_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3707:9: ( ( classBodyDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3707:9: ( classBodyDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3707:9: ( classBodyDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3708:13: classBodyDeclarations
        {
        pushFollow(FOLLOW_classBodyDeclarations_in_synpred128_BsjAntlr15558);
        classBodyDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred128_BsjAntlr

    // $ANTLR start synpred129_BsjAntlr
    public final void synpred129_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3731:9: ( splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3731:9: splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred129_BsjAntlr15695);
        splice(ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred129_BsjAntlr

    // $ANTLR start synpred130_BsjAntlr
    public final void synpred130_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3740:9: ({...}? => classMemberBsjMetaprogramAnchor )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3740:9: {...}? => classMemberBsjMetaprogramAnchor
        {
        if ( !((configuration.getMetaprogramsSupported())) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred130_BsjAntlr", "configuration.getMetaprogramsSupported()");
        }
        pushFollow(FOLLOW_classMemberBsjMetaprogramAnchor_in_synpred130_BsjAntlr15735);
        classMemberBsjMetaprogramAnchor();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_BsjAntlr

    // $ANTLR start synpred131_BsjAntlr
    public final void synpred131_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3745:9: ( noOp )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3745:9: noOp
        {
        pushFollow(FOLLOW_noOp_in_synpred131_BsjAntlr15761);
        noOp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred131_BsjAntlr

    // $ANTLR start synpred132_BsjAntlr
    public final void synpred132_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3750:9: ( initializerBlock )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3750:9: initializerBlock
        {
        pushFollow(FOLLOW_initializerBlock_in_synpred132_BsjAntlr15787);
        initializerBlock();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred132_BsjAntlr

    // $ANTLR start synpred133_BsjAntlr
    public final void synpred133_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3755:9: ( constructorDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3755:9: constructorDeclaration
        {
        pushFollow(FOLLOW_constructorDeclaration_in_synpred133_BsjAntlr15813);
        constructorDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred133_BsjAntlr

    // $ANTLR start synpred134_BsjAntlr
    public final void synpred134_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3777:13: ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3777:13: splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred134_BsjAntlr15931);
        splice(AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred134_BsjAntlr

    // $ANTLR start synpred135_BsjAntlr
    public final void synpred135_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.anonymousClassBodyDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3800:21: (b= anonymousClassBodyDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3800:21: b= anonymousClassBodyDeclaration
        {
        pushFollow(FOLLOW_anonymousClassBodyDeclaration_in_synpred135_BsjAntlr16050);
        b=anonymousClassBodyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred135_BsjAntlr

    // $ANTLR start synpred136_BsjAntlr
    public final void synpred136_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3829:9: ( ( anonymousClassBodyDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3829:9: ( anonymousClassBodyDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3829:9: ( anonymousClassBodyDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3830:13: anonymousClassBodyDeclarations
        {
        pushFollow(FOLLOW_anonymousClassBodyDeclarations_in_synpred136_BsjAntlr16197);
        anonymousClassBodyDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred136_BsjAntlr

    // $ANTLR start synpred137_BsjAntlr
    public final void synpred137_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3853:9: ( splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3853:9: splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred137_BsjAntlr16334);
        splice(AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred137_BsjAntlr

    // $ANTLR start synpred138_BsjAntlr
    public final void synpred138_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3859:9: ( noOp )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3859:9: noOp
        {
        pushFollow(FOLLOW_noOp_in_synpred138_BsjAntlr16361);
        noOp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred138_BsjAntlr

    // $ANTLR start synpred139_BsjAntlr
    public final void synpred139_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3864:9: ( initializerBlock )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3864:9: initializerBlock
        {
        pushFollow(FOLLOW_initializerBlock_in_synpred139_BsjAntlr16387);
        initializerBlock();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred139_BsjAntlr

    // $ANTLR start synpred140_BsjAntlr
    public final void synpred140_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3869:9: ( memberDecl )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3869:9: memberDecl
        {
        pushFollow(FOLLOW_memberDecl_in_synpred140_BsjAntlr16413);
        memberDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred140_BsjAntlr

    // $ANTLR start synpred141_BsjAntlr
    public final void synpred141_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3889:9: ( fieldHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3889:10: fieldHeader
        {
        pushFollow(FOLLOW_fieldHeader_in_synpred141_BsjAntlr16525);
        fieldHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred141_BsjAntlr

    // $ANTLR start synpred142_BsjAntlr
    public final void synpred142_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3894:9: ( methodHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3894:10: methodHeader
        {
        pushFollow(FOLLOW_methodHeader_in_synpred142_BsjAntlr16558);
        methodHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred142_BsjAntlr

    // $ANTLR start synpred143_BsjAntlr
    public final void synpred143_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:10: ( classHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:10: classHeader
        {
        pushFollow(FOLLOW_classHeader_in_synpred143_BsjAntlr16591);
        classHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_BsjAntlr

    // $ANTLR start synpred144_BsjAntlr
    public final void synpred144_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:9: ( classHeader | enumHeader )
        int alt304=2;
        alt304 = dfa304.predict(input);
        switch (alt304) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:10: classHeader
                {
                pushFollow(FOLLOW_classHeader_in_synpred144_BsjAntlr16591);
                classHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3899:22: enumHeader
                {
                pushFollow(FOLLOW_enumHeader_in_synpred144_BsjAntlr16593);
                enumHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }}
    // $ANTLR end synpred144_BsjAntlr

    // $ANTLR start synpred145_BsjAntlr
    public final void synpred145_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:10: ( interfaceHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:10: interfaceHeader
        {
        pushFollow(FOLLOW_interfaceHeader_in_synpred145_BsjAntlr16626);
        interfaceHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred145_BsjAntlr

    // $ANTLR start synpred146_BsjAntlr
    public final void synpred146_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:9: ( interfaceHeader | annotationHeader )
        int alt305=2;
        alt305 = dfa305.predict(input);
        switch (alt305) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:10: interfaceHeader
                {
                pushFollow(FOLLOW_interfaceHeader_in_synpred146_BsjAntlr16626);
                interfaceHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3904:26: annotationHeader
                {
                pushFollow(FOLLOW_annotationHeader_in_synpred146_BsjAntlr16628);
                annotationHeader();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }}
    // $ANTLR end synpred146_BsjAntlr

    // $ANTLR start synpred147_BsjAntlr
    public final void synpred147_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3919:9: ( splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3919:9: splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred147_BsjAntlr16709);
        splice(VoidTypeNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred147_BsjAntlr

    // $ANTLR start synpred148_BsjAntlr
    public final void synpred148_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3925:9: ( type )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3925:9: type
        {
        pushFollow(FOLLOW_type_in_synpred148_BsjAntlr16736);
        type();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred148_BsjAntlr

    // $ANTLR start synpred149_BsjAntlr
    public final void synpred149_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3947:9: ( splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3947:9: splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred149_BsjAntlr16840);
        splice(ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred149_BsjAntlr

    // $ANTLR start synpred151_BsjAntlr
    public final void synpred151_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3986:9: ( splice[ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3986:9: splice[ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred151_BsjAntlr17036);
        splice(ConstructorBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred151_BsjAntlr

    // $ANTLR start synpred152_BsjAntlr
    public final void synpred152_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3993:9: ( explicitConstructorInvocation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:3993:9: explicitConstructorInvocation
        {
        pushFollow(FOLLOW_explicitConstructorInvocation_in_synpred152_BsjAntlr17074);
        explicitConstructorInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred152_BsjAntlr

    // $ANTLR start synpred153_BsjAntlr
    public final void synpred153_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4019:9: ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4019:9: splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred153_BsjAntlr17173);
        splice(MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred153_BsjAntlr

    // $ANTLR start synpred157_BsjAntlr
    public final void synpred157_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4076:9: ( splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4076:9: splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred157_BsjAntlr17525);
        splice(FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_BsjAntlr

    // $ANTLR start synpred158_BsjAntlr
    public final void synpred158_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4106:13: ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4106:13: splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred158_BsjAntlr17680);
        splice(InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_BsjAntlr

    // $ANTLR start synpred159_BsjAntlr
    public final void synpred159_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.interfaceBodyDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4129:21: (b= interfaceBodyDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4129:21: b= interfaceBodyDeclaration
        {
        pushFollow(FOLLOW_interfaceBodyDeclaration_in_synpred159_BsjAntlr17799);
        b=interfaceBodyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred159_BsjAntlr

    // $ANTLR start synpred160_BsjAntlr
    public final void synpred160_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4158:9: ( ( interfaceBodyDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4158:9: ( interfaceBodyDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4158:9: ( interfaceBodyDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4159:13: interfaceBodyDeclarations
        {
        pushFollow(FOLLOW_interfaceBodyDeclarations_in_synpred160_BsjAntlr17946);
        interfaceBodyDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred160_BsjAntlr

    // $ANTLR start synpred161_BsjAntlr
    public final void synpred161_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4182:9: ( splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4182:9: splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred161_BsjAntlr18083);
        splice(InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred161_BsjAntlr

    // $ANTLR start synpred162_BsjAntlr
    public final void synpred162_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4188:9: ( constantDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4188:9: constantDeclaration
        {
        pushFollow(FOLLOW_constantDeclaration_in_synpred162_BsjAntlr18110);
        constantDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred162_BsjAntlr

    // $ANTLR start synpred163_BsjAntlr
    public final void synpred163_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4193:9: ( interfaceMethodDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4193:9: interfaceMethodDeclaration
        {
        pushFollow(FOLLOW_interfaceMethodDeclaration_in_synpred163_BsjAntlr18147);
        interfaceMethodDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred163_BsjAntlr

    // $ANTLR start synpred164_BsjAntlr
    public final void synpred164_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4198:9: ( interfaceDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4198:9: interfaceDeclaration
        {
        pushFollow(FOLLOW_interfaceDeclaration_in_synpred164_BsjAntlr18176);
        interfaceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred164_BsjAntlr

    // $ANTLR start synpred165_BsjAntlr
    public final void synpred165_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4203:9: ( classDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4203:9: classDeclaration
        {
        pushFollow(FOLLOW_classDeclaration_in_synpred165_BsjAntlr18205);
        classDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred165_BsjAntlr

    // $ANTLR start synpred166_BsjAntlr
    public final void synpred166_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4208:9: ( noOp )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4208:9: noOp
        {
        pushFollow(FOLLOW_noOp_in_synpred166_BsjAntlr18234);
        noOp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred166_BsjAntlr

    // $ANTLR start synpred167_BsjAntlr
    public final void synpred167_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4233:9: ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4233:9: splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred167_BsjAntlr18353);
        splice(MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred167_BsjAntlr

    // $ANTLR start synpred170_BsjAntlr
    public final void synpred170_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4284:9: ( splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4284:9: splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred170_BsjAntlr18632);
        splice(ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred170_BsjAntlr

    // $ANTLR start synpred171_BsjAntlr
    public final void synpred171_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4315:13: ( splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4315:13: splice[VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred171_BsjAntlr18784);
        splice(VariableDeclaratorListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred171_BsjAntlr

    // $ANTLR start synpred173_BsjAntlr
    public final void synpred173_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4368:9: ( ( variableDeclarators ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4368:9: ( variableDeclarators )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4368:9: ( variableDeclarators )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4369:13: variableDeclarators
        {
        pushFollow(FOLLOW_variableDeclarators_in_synpred173_BsjAntlr19064);
        variableDeclarators();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred173_BsjAntlr

    // $ANTLR start synpred174_BsjAntlr
    public final void synpred174_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4397:9: ( splice[VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4397:9: splice[VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred174_BsjAntlr19200);
        splice(VariableDeclaratorNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_BsjAntlr

    // $ANTLR start synpred177_BsjAntlr
    public final void synpred177_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4430:9: ( splice[UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4430:9: splice[UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred177_BsjAntlr19407);
        splice(UnparameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred177_BsjAntlr

    // $ANTLR start synpred178_BsjAntlr
    public final void synpred178_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4453:13: ( splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4453:13: splice[UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred178_BsjAntlr19529);
        splice(UnparameterizedTypeListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_BsjAntlr

    // $ANTLR start synpred180_BsjAntlr
    public final void synpred180_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4506:9: ( ( unparameterizedTypeList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4506:9: ( unparameterizedTypeList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4506:9: ( unparameterizedTypeList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4507:13: unparameterizedTypeList
        {
        pushFollow(FOLLOW_unparameterizedTypeList_in_synpred180_BsjAntlr19809);
        unparameterizedTypeList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred180_BsjAntlr

    // $ANTLR start synpred182_BsjAntlr
    public final void synpred182_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4546:9: ( classOrInterfaceType ( arrayTypeCounter )? )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4546:9: classOrInterfaceType ( arrayTypeCounter )?
        {
        pushFollow(FOLLOW_classOrInterfaceType_in_synpred182_BsjAntlr20030);
        classOrInterfaceType();

        state._fsp--;
        if (state.failed) return ;
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4550:9: ( arrayTypeCounter )?
        int alt306=2;
        int LA306_0 = input.LA(1);

        if ( (LA306_0==LBRACKET) ) {
            alt306=1;
        }
        switch (alt306) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4551:13: arrayTypeCounter
                {
                pushFollow(FOLLOW_arrayTypeCounter_in_synpred182_BsjAntlr20064);
                arrayTypeCounter();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred182_BsjAntlr

    // $ANTLR start synpred183_BsjAntlr
    public final void synpred183_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4584:13: ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4584:13: splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred183_BsjAntlr20207);
        splice(TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred183_BsjAntlr

    // $ANTLR start synpred184_BsjAntlr
    public final void synpred184_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4591:17: ( classOrInterfaceType )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4591:17: classOrInterfaceType
        {
        pushFollow(FOLLOW_classOrInterfaceType_in_synpred184_BsjAntlr20267);
        classOrInterfaceType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred184_BsjAntlr

    // $ANTLR start synpred188_BsjAntlr
    public final void synpred188_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.classOrInterfaceType_return next = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4630:9: ( unparameterizedType ( typeArguments ( '.' next= classOrInterfaceType )? )? )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4630:9: unparameterizedType ( typeArguments ( '.' next= classOrInterfaceType )? )?
        {
        pushFollow(FOLLOW_unparameterizedType_in_synpred188_BsjAntlr20483);
        unparameterizedType();

        state._fsp--;
        if (state.failed) return ;
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4635:9: ( typeArguments ( '.' next= classOrInterfaceType )? )?
        int alt309=2;
        int LA309_0 = input.LA(1);

        if ( (LA309_0==LT) ) {
            alt309=1;
        }
        switch (alt309) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4636:13: typeArguments ( '.' next= classOrInterfaceType )?
                {
                pushFollow(FOLLOW_typeArguments_in_synpred188_BsjAntlr20517);
                typeArguments();

                state._fsp--;
                if (state.failed) return ;
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4642:13: ( '.' next= classOrInterfaceType )?
                int alt308=2;
                int LA308_0 = input.LA(1);

                if ( (LA308_0==DOT) ) {
                    alt308=1;
                }
                switch (alt308) {
                    case 1 :
                        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4643:17: '.' next= classOrInterfaceType
                        {
                        match(input,DOT,FOLLOW_DOT_in_synpred188_BsjAntlr20563); if (state.failed) return ;
                        pushFollow(FOLLOW_classOrInterfaceType_in_synpred188_BsjAntlr20567);
                        next=classOrInterfaceType();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred188_BsjAntlr

    // $ANTLR start synpred190_BsjAntlr
    public final void synpred190_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.classOrInterfaceType_return next = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4651:9: ( splice[ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] ( '.' next= classOrInterfaceType )? )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4651:9: splice[ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList()] ( '.' next= classOrInterfaceType )?
        {
        pushFollow(FOLLOW_splice_in_synpred190_BsjAntlr20627);
        splice(ParameterizedTypeNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4657:9: ( '.' next= classOrInterfaceType )?
        int alt310=2;
        int LA310_0 = input.LA(1);

        if ( (LA310_0==DOT) ) {
            alt310=1;
        }
        switch (alt310) {
            case 1 :
                // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4658:13: '.' next= classOrInterfaceType
                {
                match(input,DOT,FOLLOW_DOT_in_synpred190_BsjAntlr20662); if (state.failed) return ;
                pushFollow(FOLLOW_classOrInterfaceType_in_synpred190_BsjAntlr20666);
                next=classOrInterfaceType();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred190_BsjAntlr

    // $ANTLR start synpred191_BsjAntlr
    public final void synpred191_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4688:9: ( splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4688:9: splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred191_BsjAntlr20794);
        splice(PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred191_BsjAntlr

    // $ANTLR start synpred199_BsjAntlr
    public final void synpred199_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4752:13: ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4752:13: splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred199_BsjAntlr21146);
        splice(TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred199_BsjAntlr

    // $ANTLR start synpred202_BsjAntlr
    public final void synpred202_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4837:9: ( splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4837:9: splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred202_BsjAntlr21576);
        splice(TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred202_BsjAntlr

    // $ANTLR start synpred203_BsjAntlr
    public final void synpred203_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4843:9: ( referenceType )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4843:9: referenceType
        {
        pushFollow(FOLLOW_referenceType_in_synpred203_BsjAntlr21603);
        referenceType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred203_BsjAntlr

    // $ANTLR start synpred204_BsjAntlr
    public final void synpred204_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4864:9: ( splice[WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4864:9: splice[WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred204_BsjAntlr21707);
        splice(WildcardTypeNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred204_BsjAntlr

    // $ANTLR start synpred207_BsjAntlr
    public final void synpred207_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4905:13: ( formalParameterDecls )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4905:13: formalParameterDecls
        {
        pushFollow(FOLLOW_formalParameterDecls_in_synpred207_BsjAntlr21972);
        formalParameterDecls();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred207_BsjAntlr

    // $ANTLR start synpred208_BsjAntlr
    public final void synpred208_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4924:9: ( normalParameterDecls ',' ellipsisParameterDecl )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4924:9: normalParameterDecls ',' ellipsisParameterDecl
        {
        pushFollow(FOLLOW_normalParameterDecls_in_synpred208_BsjAntlr22077);
        normalParameterDecls();

        state._fsp--;
        if (state.failed) return ;
        match(input,COMMA,FOLLOW_COMMA_in_synpred208_BsjAntlr22087); if (state.failed) return ;
        pushFollow(FOLLOW_ellipsisParameterDecl_in_synpred208_BsjAntlr22097);
        ellipsisParameterDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred208_BsjAntlr

    // $ANTLR start synpred209_BsjAntlr
    public final void synpred209_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4932:9: ( normalParameterDecls )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4932:9: normalParameterDecls
        {
        pushFollow(FOLLOW_normalParameterDecls_in_synpred209_BsjAntlr22123);
        normalParameterDecls();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred209_BsjAntlr

    // $ANTLR start synpred210_BsjAntlr
    public final void synpred210_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4956:13: ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4956:13: splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred210_BsjAntlr22241);
        splice(VariableListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred210_BsjAntlr

    // $ANTLR start synpred211_BsjAntlr
    public final void synpred211_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.normalParameterDecl_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4979:13: ( ',' b= normalParameterDecl )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:4979:13: ',' b= normalParameterDecl
        {
        match(input,COMMA,FOLLOW_COMMA_in_synpred211_BsjAntlr22350); if (state.failed) return ;
        pushFollow(FOLLOW_normalParameterDecl_in_synpred211_BsjAntlr22374);
        b=normalParameterDecl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred211_BsjAntlr

    // $ANTLR start synpred212_BsjAntlr
    public final void synpred212_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5009:9: ( ( normalParameterDecls ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5009:9: ( normalParameterDecls )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5009:9: ( normalParameterDecls )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5010:13: normalParameterDecls
        {
        pushFollow(FOLLOW_normalParameterDecls_in_synpred212_BsjAntlr22521);
        normalParameterDecls();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred212_BsjAntlr

    // $ANTLR start synpred213_BsjAntlr
    public final void synpred213_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5034:9: ( splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5034:9: splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred213_BsjAntlr22654);
        splice(VariableNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred213_BsjAntlr

    // $ANTLR start synpred217_BsjAntlr
    public final void synpred217_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5133:9: ( splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5133:9: splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred217_BsjAntlr23230);
        splice(ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred217_BsjAntlr

    // $ANTLR start synpred218_BsjAntlr
    public final void synpred218_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5139:9: ( alternateConstructorInvocation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5139:9: alternateConstructorInvocation
        {
        pushFollow(FOLLOW_alternateConstructorInvocation_in_synpred218_BsjAntlr23257);
        alternateConstructorInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred218_BsjAntlr

    // $ANTLR start synpred219_BsjAntlr
    public final void synpred219_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5161:13: ( splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5161:13: splice[AnnotationListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred219_BsjAntlr23375);
        splice(AnnotationListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred219_BsjAntlr

    // $ANTLR start synpred221_BsjAntlr
    public final void synpred221_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5213:9: ( ( annotations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5213:9: ( annotations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5213:9: ( annotations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5214:13: annotations
        {
        pushFollow(FOLLOW_annotations_in_synpred221_BsjAntlr23641);
        annotations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred221_BsjAntlr

    // $ANTLR start synpred222_BsjAntlr
    public final void synpred222_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5243:9: ( splice[AnnotationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5243:9: splice[AnnotationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred222_BsjAntlr23780);
        splice(AnnotationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred222_BsjAntlr

    // $ANTLR start synpred223_BsjAntlr
    public final void synpred223_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5254:21: ( optionalElementValuePairs )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5254:21: optionalElementValuePairs
        {
        pushFollow(FOLLOW_optionalElementValuePairs_in_synpred223_BsjAntlr23894);
        optionalElementValuePairs();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred223_BsjAntlr

    // $ANTLR start synpred224_BsjAntlr
    public final void synpred224_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5261:21: ( elementValue )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5261:21: elementValue
        {
        pushFollow(FOLLOW_elementValue_in_synpred224_BsjAntlr23956);
        elementValue();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred224_BsjAntlr

    // $ANTLR start synpred226_BsjAntlr
    public final void synpred226_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5295:13: ( splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5295:13: splice[AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred226_BsjAntlr24160);
        splice(AnnotationElementListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred226_BsjAntlr

    // $ANTLR start synpred228_BsjAntlr
    public final void synpred228_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5348:9: ( ( elementValuePairs ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5348:9: ( elementValuePairs )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5348:9: ( elementValuePairs )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5349:13: elementValuePairs
        {
        pushFollow(FOLLOW_elementValuePairs_in_synpred228_BsjAntlr24440);
        elementValuePairs();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred228_BsjAntlr

    // $ANTLR start synpred229_BsjAntlr
    public final void synpred229_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5379:9: ( splice[AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5379:9: splice[AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred229_BsjAntlr24580);
        splice(AnnotationElementNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred229_BsjAntlr

    // $ANTLR start synpred230_BsjAntlr
    public final void synpred230_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5409:9: ( splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5409:9: splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred230_BsjAntlr24703);
        splice(AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred230_BsjAntlr

    // $ANTLR start synpred231_BsjAntlr
    public final void synpred231_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5415:9: ( conditionalExpression )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5415:9: conditionalExpression
        {
        pushFollow(FOLLOW_conditionalExpression_in_synpred231_BsjAntlr24730);
        conditionalExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred231_BsjAntlr

    // $ANTLR start synpred232_BsjAntlr
    public final void synpred232_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5420:9: ( annotation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5420:9: annotation
        {
        pushFollow(FOLLOW_annotation_in_synpred232_BsjAntlr24759);
        annotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred232_BsjAntlr

    // $ANTLR start synpred233_BsjAntlr
    public final void synpred233_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5443:13: ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5443:13: splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred233_BsjAntlr24881);
        splice(AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred233_BsjAntlr

    // $ANTLR start synpred236_BsjAntlr
    public final void synpred236_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5497:9: ( ( elementValues ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5497:9: ( elementValues )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5497:9: ( elementValues )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5498:13: elementValues
        {
        pushFollow(FOLLOW_elementValues_in_synpred236_BsjAntlr25172);
        elementValues();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred236_BsjAntlr

    // $ANTLR start synpred237_BsjAntlr
    public final void synpred237_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5530:9: ( splice[AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5530:9: splice[AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred237_BsjAntlr25321);
        splice(AnnotationArrayValueNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred237_BsjAntlr

    // $ANTLR start synpred238_BsjAntlr
    public final void synpred238_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5556:9: ( splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5556:9: splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred238_BsjAntlr25451);
        splice(AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_BsjAntlr

    // $ANTLR start synpred239_BsjAntlr
    public final void synpred239_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5584:9: ( splice[AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5584:9: splice[AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred239_BsjAntlr25595);
        splice(AnnotationBodyNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_BsjAntlr

    // $ANTLR start synpred240_BsjAntlr
    public final void synpred240_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5610:13: ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5610:13: splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred240_BsjAntlr25738);
        splice(AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred240_BsjAntlr

    // $ANTLR start synpred241_BsjAntlr
    public final void synpred241_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.annotationTypeElementDeclaration_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5633:21: (b= annotationTypeElementDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5633:21: b= annotationTypeElementDeclaration
        {
        pushFollow(FOLLOW_annotationTypeElementDeclaration_in_synpred241_BsjAntlr25857);
        b=annotationTypeElementDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred241_BsjAntlr

    // $ANTLR start synpred242_BsjAntlr
    public final void synpred242_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5662:9: ( ( annotationTypeElementDeclarations ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5662:9: ( annotationTypeElementDeclarations )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5662:9: ( annotationTypeElementDeclarations )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5663:13: annotationTypeElementDeclarations
        {
        pushFollow(FOLLOW_annotationTypeElementDeclarations_in_synpred242_BsjAntlr26004);
        annotationTypeElementDeclarations();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred242_BsjAntlr

    // $ANTLR start synpred243_BsjAntlr
    public final void synpred243_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5686:9: ( annotationMethodDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5686:9: annotationMethodDeclaration
        {
        pushFollow(FOLLOW_annotationMethodDeclaration_in_synpred243_BsjAntlr26140);
        annotationMethodDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred243_BsjAntlr

    // $ANTLR start synpred244_BsjAntlr
    public final void synpred244_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5691:9: ( constantDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5691:9: constantDeclaration
        {
        pushFollow(FOLLOW_constantDeclaration_in_synpred244_BsjAntlr26169);
        constantDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred244_BsjAntlr

    // $ANTLR start synpred245_BsjAntlr
    public final void synpred245_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5696:9: ( normalClassDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5696:9: normalClassDeclaration
        {
        pushFollow(FOLLOW_normalClassDeclaration_in_synpred245_BsjAntlr26198);
        normalClassDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred245_BsjAntlr

    // $ANTLR start synpred246_BsjAntlr
    public final void synpred246_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5701:9: ( normalInterfaceDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5701:9: normalInterfaceDeclaration
        {
        pushFollow(FOLLOW_normalInterfaceDeclaration_in_synpred246_BsjAntlr26227);
        normalInterfaceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred246_BsjAntlr

    // $ANTLR start synpred247_BsjAntlr
    public final void synpred247_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5706:9: ( enumDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5706:9: enumDeclaration
        {
        pushFollow(FOLLOW_enumDeclaration_in_synpred247_BsjAntlr26256);
        enumDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred247_BsjAntlr

    // $ANTLR start synpred248_BsjAntlr
    public final void synpred248_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5711:9: ( annotationTypeDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5711:9: annotationTypeDeclaration
        {
        pushFollow(FOLLOW_annotationTypeDeclaration_in_synpred248_BsjAntlr26285);
        annotationTypeDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred248_BsjAntlr

    // $ANTLR start synpred249_BsjAntlr
    public final void synpred249_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5716:9: ( noOp )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5716:9: noOp
        {
        pushFollow(FOLLOW_noOp_in_synpred249_BsjAntlr26314);
        noOp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred249_BsjAntlr

    // $ANTLR start synpred250_BsjAntlr
    public final void synpred250_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5736:9: ( splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5736:9: splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred250_BsjAntlr26424);
        splice(AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred250_BsjAntlr

    // $ANTLR start synpred252_BsjAntlr
    public final void synpred252_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5789:13: ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5789:13: splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred252_BsjAntlr26740);
        splice(BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred252_BsjAntlr

    // $ANTLR start synpred253_BsjAntlr
    public final void synpred253_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.blockStatement_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5812:21: (b= blockStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5812:21: b= blockStatement
        {
        pushFollow(FOLLOW_blockStatement_in_synpred253_BsjAntlr26859);
        b=blockStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred253_BsjAntlr

    // $ANTLR start synpred254_BsjAntlr
    public final void synpred254_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5841:9: ( ( blockStatementList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5841:9: ( blockStatementList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5841:9: ( blockStatementList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5842:13: blockStatementList
        {
        pushFollow(FOLLOW_blockStatementList_in_synpred254_BsjAntlr27006);
        blockStatementList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred254_BsjAntlr

    // $ANTLR start synpred255_BsjAntlr
    public final void synpred255_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5866:9: ( splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5866:9: splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred255_BsjAntlr27143);
        splice(BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred255_BsjAntlr

    // $ANTLR start synpred256_BsjAntlr
    public final void synpred256_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5872:9: ( localVariableHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5872:10: localVariableHeader
        {
        pushFollow(FOLLOW_localVariableHeader_in_synpred256_BsjAntlr27171);
        localVariableHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred256_BsjAntlr

    // $ANTLR start synpred257_BsjAntlr
    public final void synpred257_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5877:9: ( typeHeader )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5877:10: typeHeader
        {
        pushFollow(FOLLOW_typeHeader_in_synpred257_BsjAntlr27204);
        typeHeader();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred257_BsjAntlr

    // $ANTLR start synpred258_BsjAntlr
    public final void synpred258_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5882:9: ( statement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5882:9: statement
        {
        pushFollow(FOLLOW_statement_in_synpred258_BsjAntlr27236);
        statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred258_BsjAntlr

    // $ANTLR start synpred259_BsjAntlr
    public final void synpred259_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5905:9: ( splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5905:9: splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred259_BsjAntlr27354);
        splice(LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred259_BsjAntlr

    // $ANTLR start synpred260_BsjAntlr
    public final void synpred260_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5949:9: ( splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5949:9: splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred260_BsjAntlr27558);
        splice(StatementNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred260_BsjAntlr

    // $ANTLR start synpred261_BsjAntlr
    public final void synpred261_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5956:13: ( blockAsStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5956:13: blockAsStatement
        {
        pushFollow(FOLLOW_blockAsStatement_in_synpred261_BsjAntlr27599);
        blockAsStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred261_BsjAntlr

    // $ANTLR start synpred262_BsjAntlr
    public final void synpred262_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5961:13: ( assertStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5961:13: assertStatement
        {
        pushFollow(FOLLOW_assertStatement_in_synpred262_BsjAntlr27637);
        assertStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred262_BsjAntlr

    // $ANTLR start synpred263_BsjAntlr
    public final void synpred263_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5966:13: ( ifStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5966:13: ifStatement
        {
        pushFollow(FOLLOW_ifStatement_in_synpred263_BsjAntlr27675);
        ifStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred263_BsjAntlr

    // $ANTLR start synpred264_BsjAntlr
    public final void synpred264_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5971:13: ( forStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5971:13: forStatement
        {
        pushFollow(FOLLOW_forStatement_in_synpred264_BsjAntlr27713);
        forStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred264_BsjAntlr

    // $ANTLR start synpred265_BsjAntlr
    public final void synpred265_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5976:13: ( whileStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5976:13: whileStatement
        {
        pushFollow(FOLLOW_whileStatement_in_synpred265_BsjAntlr27751);
        whileStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred265_BsjAntlr

    // $ANTLR start synpred266_BsjAntlr
    public final void synpred266_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5981:13: ( doWhileStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5981:13: doWhileStatement
        {
        pushFollow(FOLLOW_doWhileStatement_in_synpred266_BsjAntlr27789);
        doWhileStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred266_BsjAntlr

    // $ANTLR start synpred267_BsjAntlr
    public final void synpred267_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5986:13: ( tryStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5986:13: tryStatement
        {
        pushFollow(FOLLOW_tryStatement_in_synpred267_BsjAntlr27827);
        tryStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred267_BsjAntlr

    // $ANTLR start synpred268_BsjAntlr
    public final void synpred268_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5991:13: ( switchStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5991:13: switchStatement
        {
        pushFollow(FOLLOW_switchStatement_in_synpred268_BsjAntlr27865);
        switchStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred268_BsjAntlr

    // $ANTLR start synpred269_BsjAntlr
    public final void synpred269_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5996:13: ( synchronizedStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:5996:13: synchronizedStatement
        {
        pushFollow(FOLLOW_synchronizedStatement_in_synpred269_BsjAntlr27903);
        synchronizedStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred269_BsjAntlr

    // $ANTLR start synpred270_BsjAntlr
    public final void synpred270_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6001:13: ( returnStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6001:13: returnStatement
        {
        pushFollow(FOLLOW_returnStatement_in_synpred270_BsjAntlr27941);
        returnStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred270_BsjAntlr

    // $ANTLR start synpred271_BsjAntlr
    public final void synpred271_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6006:13: ( throwStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6006:13: throwStatement
        {
        pushFollow(FOLLOW_throwStatement_in_synpred271_BsjAntlr27979);
        throwStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred271_BsjAntlr

    // $ANTLR start synpred272_BsjAntlr
    public final void synpred272_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6011:13: ( breakStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6011:13: breakStatement
        {
        pushFollow(FOLLOW_breakStatement_in_synpred272_BsjAntlr28017);
        breakStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred272_BsjAntlr

    // $ANTLR start synpred273_BsjAntlr
    public final void synpred273_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6016:13: ( continueStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6016:13: continueStatement
        {
        pushFollow(FOLLOW_continueStatement_in_synpred273_BsjAntlr28055);
        continueStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred273_BsjAntlr

    // $ANTLR start synpred274_BsjAntlr
    public final void synpred274_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6021:13: ( expressionStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6021:13: expressionStatement
        {
        pushFollow(FOLLOW_expressionStatement_in_synpred274_BsjAntlr28093);
        expressionStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_BsjAntlr

    // $ANTLR start synpred275_BsjAntlr
    public final void synpred275_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6026:13: ( labeledStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6026:13: labeledStatement
        {
        pushFollow(FOLLOW_labeledStatement_in_synpred275_BsjAntlr28131);
        labeledStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred275_BsjAntlr

    // $ANTLR start synpred277_BsjAntlr
    public final void synpred277_BsjAntlr_fragment() throws RecognitionException {   
        NodeUnion<? extends StatementNode> s2 = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6090:13: ( 'else' s2= statement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6090:13: 'else' s2= statement
        {
        match(input,ELSE,FOLLOW_ELSE_in_synpred277_BsjAntlr28544); if (state.failed) return ;
        pushFollow(FOLLOW_statement_in_synpred277_BsjAntlr28548);
        s2=statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_BsjAntlr

    // $ANTLR start synpred278_BsjAntlr
    public final void synpred278_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6111:13: ( enhancedForStatement )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6111:13: enhancedForStatement
        {
        pushFollow(FOLLOW_enhancedForStatement_in_synpred278_BsjAntlr28661);
        enhancedForStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_BsjAntlr

    // $ANTLR start synpred279_BsjAntlr
    public final void synpred279_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6160:9: ( forInit )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6160:9: forInit
        {
        pushFollow(FOLLOW_forInit_in_synpred279_BsjAntlr28936);
        forInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_BsjAntlr

    // $ANTLR start synpred281_BsjAntlr
    public final void synpred281_BsjAntlr_fragment() throws RecognitionException {   
        NodeUnion<? extends CatchListNode> c = null;

        NodeUnion<? extends BlockStatementListNode> fb = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6229:13: (c= catches 'finally' fb= block )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6229:13: c= catches 'finally' fb= block
        {
        pushFollow(FOLLOW_catches_in_synpred281_BsjAntlr29329);
        c=catches();

        state._fsp--;
        if (state.failed) return ;
        match(input,FINALLY,FOLLOW_FINALLY_in_synpred281_BsjAntlr29331); if (state.failed) return ;
        pushFollow(FOLLOW_block_in_synpred281_BsjAntlr29335);
        fb=block();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_BsjAntlr

    // $ANTLR start synpred282_BsjAntlr
    public final void synpred282_BsjAntlr_fragment() throws RecognitionException {   
        NodeUnion<? extends CatchListNode> c = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6235:13: (c= catches )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6235:13: c= catches
        {
        pushFollow(FOLLOW_catches_in_synpred282_BsjAntlr29378);
        c=catches();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred282_BsjAntlr

    // $ANTLR start synpred286_BsjAntlr
    public final void synpred286_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6435:13: ( splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6435:13: splice[CatchListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred286_BsjAntlr30459);
        splice(CatchListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred286_BsjAntlr

    // $ANTLR start synpred287_BsjAntlr
    public final void synpred287_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.catchClause_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6458:21: (b= catchClause )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6458:21: b= catchClause
        {
        pushFollow(FOLLOW_catchClause_in_synpred287_BsjAntlr30578);
        b=catchClause();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred287_BsjAntlr

    // $ANTLR start synpred288_BsjAntlr
    public final void synpred288_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6487:9: ( ( catches ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6487:9: ( catches )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6487:9: ( catches )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6488:13: catches
        {
        pushFollow(FOLLOW_catches_in_synpred288_BsjAntlr30725);
        catches();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred288_BsjAntlr

    // $ANTLR start synpred289_BsjAntlr
    public final void synpred289_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6511:9: ( splice[CatchNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6511:9: splice[CatchNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred289_BsjAntlr30861);
        splice(CatchNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred289_BsjAntlr

    // $ANTLR start synpred290_BsjAntlr
    public final void synpred290_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6554:13: ( splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6554:13: splice[CaseListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred290_BsjAntlr31094);
        splice(CaseListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred290_BsjAntlr

    // $ANTLR start synpred292_BsjAntlr
    public final void synpred292_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6606:9: ( ( switchBlockStatementGroups ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6606:9: ( switchBlockStatementGroups )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6606:9: ( switchBlockStatementGroups )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6607:13: switchBlockStatementGroups
        {
        pushFollow(FOLLOW_switchBlockStatementGroups_in_synpred292_BsjAntlr31360);
        switchBlockStatementGroups();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred292_BsjAntlr

    // $ANTLR start synpred293_BsjAntlr
    public final void synpred293_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6630:9: ( splice[CaseNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6630:9: splice[CaseNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred293_BsjAntlr31493);
        splice(CaseNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred293_BsjAntlr

    // $ANTLR start synpred296_BsjAntlr
    public final void synpred296_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6709:9: ( splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6709:9: splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred296_BsjAntlr31896);
        splice(ForInitializerNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred296_BsjAntlr

    // $ANTLR start synpred297_BsjAntlr
    public final void synpred297_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6715:9: ( localVariableDeclaration )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6715:9: localVariableDeclaration
        {
        pushFollow(FOLLOW_localVariableDeclaration_in_synpred297_BsjAntlr31923);
        localVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred297_BsjAntlr

    // $ANTLR start synpred298_BsjAntlr
    public final void synpred298_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6753:13: ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6753:13: splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred298_BsjAntlr32129);
        splice(StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred298_BsjAntlr

    // $ANTLR start synpred300_BsjAntlr
    public final void synpred300_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6806:9: ( ( statementExpressionList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6806:9: ( statementExpressionList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6806:9: ( statementExpressionList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6807:13: statementExpressionList
        {
        pushFollow(FOLLOW_statementExpressionList_in_synpred300_BsjAntlr32409);
        statementExpressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred300_BsjAntlr

    // $ANTLR start synpred301_BsjAntlr
    public final void synpred301_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6832:13: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6832:13: splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred301_BsjAntlr32556);
        splice(ExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred301_BsjAntlr

    // $ANTLR start synpred303_BsjAntlr
    public final void synpred303_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6885:9: ( ( expressionList ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6885:9: ( expressionList )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6885:9: ( expressionList )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6886:13: expressionList
        {
        pushFollow(FOLLOW_expressionList_in_synpred303_BsjAntlr32836);
        expressionList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred303_BsjAntlr

    // $ANTLR start synpred304_BsjAntlr
    public final void synpred304_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6949:13: ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:6949:13: splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred304_BsjAntlr33195);
        splice(ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred304_BsjAntlr

    // $ANTLR start synpred339_BsjAntlr
    public final void synpred339_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7444:9: ( '-' intLiteral[true] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7444:9: '-' intLiteral[true]
        {
        match(input,SUB,FOLLOW_SUB_in_synpred339_BsjAntlr36823); if (state.failed) return ;
        pushFollow(FOLLOW_intLiteral_in_synpred339_BsjAntlr36825);
        intLiteral(true);

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred339_BsjAntlr

    // $ANTLR start synpred340_BsjAntlr
    public final void synpred340_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7449:9: ( '-' longLiteral[true] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7449:9: '-' longLiteral[true]
        {
        match(input,SUB,FOLLOW_SUB_in_synpred340_BsjAntlr36855); if (state.failed) return ;
        pushFollow(FOLLOW_longLiteral_in_synpred340_BsjAntlr36857);
        longLiteral(true);

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred340_BsjAntlr

    // $ANTLR start synpred341_BsjAntlr
    public final void synpred341_BsjAntlr_fragment() throws RecognitionException {   
        NodeUnion<? extends NonAssignmentExpressionNode> e = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7454:9: ( '-' e= unaryExpression )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7454:9: '-' e= unaryExpression
        {
        match(input,SUB,FOLLOW_SUB_in_synpred341_BsjAntlr36888); if (state.failed) return ;
        pushFollow(FOLLOW_unaryExpression_in_synpred341_BsjAntlr36892);
        e=unaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred341_BsjAntlr

    // $ANTLR start synpred346_BsjAntlr
    public final void synpred346_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7504:9: ( castExpression )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7504:9: castExpression
        {
        pushFollow(FOLLOW_castExpression_in_synpred346_BsjAntlr37162);
        castExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred346_BsjAntlr

    // $ANTLR start synpred347_BsjAntlr
    public final void synpred347_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7542:13: ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7542:13: splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred347_BsjAntlr37370);
        splice(NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred347_BsjAntlr

    // $ANTLR start synpred350_BsjAntlr
    public final void synpred350_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7583:13: ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7583:13: splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred350_BsjAntlr37632);
        splice(PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred350_BsjAntlr

    // $ANTLR start synpred351_BsjAntlr
    public final void synpred351_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7589:13: ( arrayCreator )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7589:13: arrayCreator
        {
        pushFollow(FOLLOW_arrayCreator_in_synpred351_BsjAntlr37671);
        arrayCreator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred351_BsjAntlr

    // $ANTLR start synpred352_BsjAntlr
    public final void synpred352_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7600:13: ( primarySuffix )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7600:13: primarySuffix
        {
        pushFollow(FOLLOW_primarySuffix_in_synpred352_BsjAntlr37757);
        primarySuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred352_BsjAntlr

    // $ANTLR start synpred353_BsjAntlr
    public final void synpred353_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7619:9: ( splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7619:9: splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred353_BsjAntlr37860);
        splice(RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred353_BsjAntlr

    // $ANTLR start synpred354_BsjAntlr
    public final void synpred354_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7626:13: ( lexicalLiteral )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7626:13: lexicalLiteral
        {
        pushFollow(FOLLOW_lexicalLiteral_in_synpred354_BsjAntlr37901);
        lexicalLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred354_BsjAntlr

    // $ANTLR start synpred355_BsjAntlr
    public final void synpred355_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7631:13: ( primitiveClassLiteral )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7631:13: primitiveClassLiteral
        {
        pushFollow(FOLLOW_primitiveClassLiteral_in_synpred355_BsjAntlr37939);
        primitiveClassLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred355_BsjAntlr

    // $ANTLR start synpred356_BsjAntlr
    public final void synpred356_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7636:13: ( declaredClassLiteral )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7636:13: declaredClassLiteral
        {
        pushFollow(FOLLOW_declaredClassLiteral_in_synpred356_BsjAntlr37977);
        declaredClassLiteral();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred356_BsjAntlr

    // $ANTLR start synpred358_BsjAntlr
    public final void synpred358_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7646:13: ( thisClause )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7646:13: thisClause
        {
        pushFollow(FOLLOW_thisClause_in_synpred358_BsjAntlr38053);
        thisClause();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred358_BsjAntlr

    // $ANTLR start synpred360_BsjAntlr
    public final void synpred360_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7656:13: ( unqualifiedClassInstantiation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7656:13: unqualifiedClassInstantiation
        {
        pushFollow(FOLLOW_unqualifiedClassInstantiation_in_synpred360_BsjAntlr38129);
        unqualifiedClassInstantiation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred360_BsjAntlr

    // $ANTLR start synpred361_BsjAntlr
    public final void synpred361_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7661:13: ( superMethodInvocation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7661:13: superMethodInvocation
        {
        pushFollow(FOLLOW_superMethodInvocation_in_synpred361_BsjAntlr38167);
        superMethodInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred361_BsjAntlr

    // $ANTLR start synpred362_BsjAntlr
    public final void synpred362_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7666:13: ( superFieldAccess )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7666:13: superFieldAccess
        {
        pushFollow(FOLLOW_superFieldAccess_in_synpred362_BsjAntlr38205);
        superFieldAccess();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred362_BsjAntlr

    // $ANTLR start synpred363_BsjAntlr
    public final void synpred363_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7671:13: ( methodInvocationByName )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7671:13: methodInvocationByName
        {
        pushFollow(FOLLOW_methodInvocationByName_in_synpred363_BsjAntlr38243);
        methodInvocationByName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred363_BsjAntlr

    // $ANTLR start synpred364_BsjAntlr
    public final void synpred364_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7676:13: ( typeQualifiedTypeArgumentMethodInvocation )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7676:13: typeQualifiedTypeArgumentMethodInvocation
        {
        pushFollow(FOLLOW_typeQualifiedTypeArgumentMethodInvocation_in_synpred364_BsjAntlr38281);
        typeQualifiedTypeArgumentMethodInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred364_BsjAntlr

    // $ANTLR start synpred366_BsjAntlr
    public final void synpred366_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7708:13: ( qualifiedClassInstantiationPrimarySuffix )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7708:13: qualifiedClassInstantiationPrimarySuffix
        {
        pushFollow(FOLLOW_qualifiedClassInstantiationPrimarySuffix_in_synpred366_BsjAntlr38495);
        qualifiedClassInstantiationPrimarySuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred366_BsjAntlr

    // $ANTLR start synpred367_BsjAntlr
    public final void synpred367_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7714:13: ( typeArgumentMethodInvocationSuffix )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7714:13: typeArgumentMethodInvocationSuffix
        {
        pushFollow(FOLLOW_typeArgumentMethodInvocationSuffix_in_synpred367_BsjAntlr38546);
        typeArgumentMethodInvocationSuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred367_BsjAntlr

    // $ANTLR start synpred370_BsjAntlr
    public final void synpred370_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7772:9: ( splice[UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7772:9: splice[UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred370_BsjAntlr38902);
        splice(UnqualifiedClassInstantiationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred370_BsjAntlr

    // $ANTLR start synpred372_BsjAntlr
    public final void synpred372_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7806:9: ( splice[SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7806:9: splice[SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred372_BsjAntlr39046);
        splice(SuperFieldAccessNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred372_BsjAntlr

    // $ANTLR start synpred375_BsjAntlr
    public final void synpred375_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7875:9: ( splice[SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:7875:9: splice[SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred375_BsjAntlr39327);
        splice(SuperMethodInvocationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred375_BsjAntlr

    // $ANTLR start synpred379_BsjAntlr
    public final void synpred379_BsjAntlr_fragment() throws RecognitionException {   
        BsjAntlrParser.identifier_return b = null;


        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8013:13: ( '.' b= identifier )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8013:13: '.' b= identifier
        {
        match(input,DOT,FOLLOW_DOT_in_synpred379_BsjAntlr39994); if (state.failed) return ;
        pushFollow(FOLLOW_identifier_in_synpred379_BsjAntlr39998);
        b=identifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred379_BsjAntlr

    // $ANTLR start synpred383_BsjAntlr
    public final void synpred383_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8123:9: ( splice[ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8123:9: splice[ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred383_BsjAntlr40623);
        splice(ArrayCreationNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred383_BsjAntlr

    // $ANTLR start synpred384_BsjAntlr
    public final void synpred384_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8130:13: ( arrayInitializerCreator )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8130:13: arrayInitializerCreator
        {
        pushFollow(FOLLOW_arrayInitializerCreator_in_synpred384_BsjAntlr40664);
        arrayInitializerCreator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred384_BsjAntlr

    // $ANTLR start synpred387_BsjAntlr
    public final void synpred387_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8210:13: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8210:13: splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred387_BsjAntlr41133);
        splice(ExpressionListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred387_BsjAntlr

    // $ANTLR start synpred390_BsjAntlr
    public final void synpred390_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8301:9: ( splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8301:9: splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)]
        {
        pushFollow(FOLLOW_splice_in_synpred390_BsjAntlr41617);
        splice(VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class));

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred390_BsjAntlr

    // $ANTLR start synpred391_BsjAntlr
    public final void synpred391_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8308:13: ( arrayInitializer )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8308:13: arrayInitializer
        {
        pushFollow(FOLLOW_arrayInitializer_in_synpred391_BsjAntlr41661);
        arrayInitializer();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred391_BsjAntlr

    // $ANTLR start synpred392_BsjAntlr
    public final void synpred392_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8332:13: ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8332:13: splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred392_BsjAntlr41806);
        splice(VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred392_BsjAntlr

    // $ANTLR start synpred394_BsjAntlr
    public final void synpred394_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8385:9: ( ( variableInitializers ) )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8385:9: ( variableInitializers )
        {
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8385:9: ( variableInitializers )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8386:13: variableInitializers
        {
        pushFollow(FOLLOW_variableInitializers_in_synpred394_BsjAntlr42086);
        variableInitializers();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred394_BsjAntlr

    // $ANTLR start synpred395_BsjAntlr
    public final void synpred395_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8409:9: ( splice[ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8409:9: splice[ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred395_BsjAntlr42219);
        splice(ArrayInitializerNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred395_BsjAntlr

    // $ANTLR start synpred397_BsjAntlr
    public final void synpred397_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8434:13: ( classOrInterfaceType )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8434:13: classOrInterfaceType
        {
        pushFollow(FOLLOW_classOrInterfaceType_in_synpred397_BsjAntlr42382);
        classOrInterfaceType();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred397_BsjAntlr

    // $ANTLR start synpred399_BsjAntlr
    public final void synpred399_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8511:13: ( splice[NameNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8511:13: splice[NameNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred399_BsjAntlr42821);
        splice(NameNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred399_BsjAntlr

    // $ANTLR start synpred411_BsjAntlr
    public final void synpred411_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8690:9: ( splice[IdentifierNode.class, Arrays.<Class<? extends Node>>asList()] )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8690:9: splice[IdentifierNode.class, Arrays.<Class<? extends Node>>asList()]
        {
        pushFollow(FOLLOW_splice_in_synpred411_BsjAntlr43659);
        splice(IdentifierNode.class, Arrays.<Class<? extends Node>>asList());

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred411_BsjAntlr

    // $ANTLR start synpred413_BsjAntlr
    public final void synpred413_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:10: ( classModifiers )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:10: classModifiers
        {
        pushFollow(FOLLOW_classModifiers_in_synpred413_BsjAntlr43908);
        classModifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred413_BsjAntlr

    // $ANTLR start synpred414_BsjAntlr
    public final void synpred414_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:27: ( enumModifiers )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:27: enumModifiers
        {
        pushFollow(FOLLOW_enumModifiers_in_synpred414_BsjAntlr43912);
        enumModifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred414_BsjAntlr

    // $ANTLR start synpred415_BsjAntlr
    public final void synpred415_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:43: ( interfaceModifiers )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8738:43: interfaceModifiers
        {
        pushFollow(FOLLOW_interfaceModifiers_in_synpred415_BsjAntlr43916);
        interfaceModifiers();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred415_BsjAntlr

    // $ANTLR start synpred420_BsjAntlr
    public final void synpred420_BsjAntlr_fragment() throws RecognitionException {   
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:42: ( type )
        // /home/zpalmer/schoolwork/research/bsj/compiler/parser/resources/grammar/BsjAntlr.g:8742:42: type
        {
        pushFollow(FOLLOW_type_in_synpred420_BsjAntlr43963);
        type();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred420_BsjAntlr

    // Delegated rules

    public final boolean synpred303_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred152_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred152_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred391_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred391_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred257_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred257_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred256_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred256_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred113_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred113_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred199_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred199_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred131_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred131_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred339_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred390_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred390_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred298_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred298_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred160_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred160_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred358_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred383_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred383_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred296_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred296_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred171_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred171_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred263_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred263_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred413_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred413_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred132_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred132_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred108_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred108_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred162_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred162_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred137_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred137_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred264_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred264_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred399_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred399_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred166_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred166_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred115_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred115_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred356_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred356_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred351_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred351_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred211_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred211_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred367_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred367_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred260_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred260_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred420_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred420_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred146_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred146_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred370_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred370_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred411_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred411_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred210_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred210_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred361_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred341_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred341_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred167_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred167_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred133_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred133_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred135_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred135_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred352_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred352_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred415_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred415_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred159_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred159_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred392_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred392_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred414_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred414_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred394_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred394_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred397_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred397_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred300_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred300_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred395_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred395_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred202_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred202_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred64_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred64_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred353_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred353_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred384_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred384_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred148_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred148_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred265_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred265_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred387_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred387_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_BsjAntlr() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_BsjAntlr_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA22 dfa22 = new DFA22(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA49 dfa49 = new DFA49(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA54 dfa54 = new DFA54(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA110 dfa110 = new DFA110(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA122 dfa122 = new DFA122(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA145 dfa145 = new DFA145(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA153 dfa153 = new DFA153(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA196 dfa196 = new DFA196(this);
    protected DFA197 dfa197 = new DFA197(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA198 dfa198 = new DFA198(this);
    protected DFA209 dfa209 = new DFA209(this);
    protected DFA219 dfa219 = new DFA219(this);
    protected DFA221 dfa221 = new DFA221(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA226 dfa226 = new DFA226(this);
    protected DFA228 dfa228 = new DFA228(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA247 dfa247 = new DFA247(this);
    protected DFA248 dfa248 = new DFA248(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA254 dfa254 = new DFA254(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA267 dfa267 = new DFA267(this);
    protected DFA279 dfa279 = new DFA279(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA281 dfa281 = new DFA281(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA290 dfa290 = new DFA290(this);
    protected DFA293 dfa293 = new DFA293(this);
    protected DFA297 dfa297 = new DFA297(this);
    protected DFA302 dfa302 = new DFA302(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA304 dfa304 = new DFA304(this);
    protected DFA305 dfa305 = new DFA305(this);
    static final String DFA4_eotS = DFA4Data.DFA4_eotS;
    static final String DFA4_eofS = DFA4Data.DFA4_eofS;
    static final String DFA4_minS = DFA4Data.DFA4_minS;
    static final String DFA4_maxS = DFA4Data.DFA4_maxS;
    static final String DFA4_acceptS = DFA4Data.DFA4_acceptS;
    static final String DFA4_specialS = DFA4Data.DFA4_specialS;
    static final String[] DFA4_transitionS = DFA4Data.DFA4_transitionS;

    static final short[] DFA4_eot = DFA4Data.DFA4_eot;
    static final short[] DFA4_eof = DFA4Data.DFA4_eof;
    static final char[] DFA4_min = DFA4Data.DFA4_min;
    static final char[] DFA4_max = DFA4Data.DFA4_max;
    static final short[] DFA4_accept = DFA4Data.DFA4_accept;
    static final short[] DFA4_special = DFA4Data.DFA4_special;
    static final short[][] DFA4_transition = DFA4Data.DFA4_transition;


    static class DFA4Data {
        static final String DFA4_eotS =
            "\102\uffff";
        static final String DFA4_eofS =
            "\1\2\101\uffff";
        static final String DFA4_minS =
            "\1\4\1\0\100\uffff";
        static final String DFA4_maxS =
            "\1\u0080\1\0\100\uffff";
        static final String DFA4_acceptS =
            "\2\uffff\1\2\76\uffff\1\1";
        static final String DFA4_specialS =
            "\1\uffff\1\0\100\uffff}>";
        static final String[] DFA4_transitionS = {
                "\1\2\3\uffff\20\2\1\uffff\2\2\14\uffff\5\2\2\uffff\2\2\1\uffff"+
                "\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff"+
                "\1\2\1\uffff\2\2\1\uffff\20\2\1\uffff\1\2\3\uffff\1\2\4\uffff"+
                "\2\2\5\uffff\4\2\16\uffff\1\2\6\uffff\1\2\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA4_eot = DFA.unpackEncodedString(DFA4_eotS);
        static final short[] DFA4_eof = DFA.unpackEncodedString(DFA4_eofS);
        static final char[] DFA4_min = DFA.unpackEncodedStringToUnsignedChars(DFA4_minS);
        static final char[] DFA4_max = DFA.unpackEncodedStringToUnsignedChars(DFA4_maxS);
        static final short[] DFA4_accept = DFA.unpackEncodedString(DFA4_acceptS);
        static final short[] DFA4_special = DFA.unpackEncodedString(DFA4_specialS);
        static final short[][] DFA4_transition;
        static {
            int numStates = DFA4_transitionS.length;
            DFA4_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA4_transition[i] = DFA.unpackEncodedString(DFA4_transitionS[i]);
            }
        }
    }
    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = DFA4_eot;
            this.eof = DFA4_eof;
            this.min = DFA4_min;
            this.max = DFA4_max;
            this.accept = DFA4_accept;
            this.special = DFA4_special;
            this.transition = DFA4_transition;
        }
        public String getDescription() {
            return "794:1: preamble returns [NodeUnion<? extends MetaprogramPreambleNode> ret] : ( splice[MetaprogramPreambleNode.class, Arrays.<Class<? extends Node>>asList()] | optionalMetaImportDeclarations ( metaprogramMode )? optionalMetaprogramTargetList optionalMetaprogramDependencyDeclarationList );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred3_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 65;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA10_eotS = DFA10Data.DFA10_eotS;
    static final String DFA10_eofS = DFA10Data.DFA10_eofS;
    static final String DFA10_minS = DFA10Data.DFA10_minS;
    static final String DFA10_maxS = DFA10Data.DFA10_maxS;
    static final String DFA10_acceptS = DFA10Data.DFA10_acceptS;
    static final String DFA10_specialS = DFA10Data.DFA10_specialS;
    static final String[] DFA10_transitionS = DFA10Data.DFA10_transitionS;

    static final short[] DFA10_eot = DFA10Data.DFA10_eot;
    static final short[] DFA10_eof = DFA10Data.DFA10_eof;
    static final char[] DFA10_min = DFA10Data.DFA10_min;
    static final char[] DFA10_max = DFA10Data.DFA10_max;
    static final short[] DFA10_accept = DFA10Data.DFA10_accept;
    static final short[] DFA10_special = DFA10Data.DFA10_special;
    static final short[][] DFA10_transition = DFA10Data.DFA10_transition;


    static class DFA10Data {
        static final String DFA10_eotS =
            "\76\uffff";
        static final String DFA10_eofS =
            "\1\2\75\uffff";
        static final String DFA10_minS =
            "\1\4\1\0\74\uffff";
        static final String DFA10_maxS =
            "\1\u0080\1\0\74\uffff";
        static final String DFA10_acceptS =
            "\2\uffff\1\2\72\uffff\1\1";
        static final String DFA10_specialS =
            "\1\uffff\1\0\74\uffff}>";
        static final String[] DFA10_transitionS = {
                "\1\2\3\uffff\15\2\2\uffff\1\75\1\uffff\2\2\14\uffff\5\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\20\2\1\uffff\1\2\3\uffff"+
                "\1\2\4\uffff\2\2\5\uffff\4\2\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA10_eot = DFA.unpackEncodedString(DFA10_eotS);
        static final short[] DFA10_eof = DFA.unpackEncodedString(DFA10_eofS);
        static final char[] DFA10_min = DFA.unpackEncodedStringToUnsignedChars(DFA10_minS);
        static final char[] DFA10_max = DFA.unpackEncodedStringToUnsignedChars(DFA10_maxS);
        static final short[] DFA10_accept = DFA.unpackEncodedString(DFA10_acceptS);
        static final short[] DFA10_special = DFA.unpackEncodedString(DFA10_specialS);
        static final short[][] DFA10_transition;
        static {
            int numStates = DFA10_transitionS.length;
            DFA10_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA10_transition[i] = DFA.unpackEncodedString(DFA10_transitionS[i]);
            }
        }
    }
    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = DFA10_eot;
            this.eof = DFA10_eof;
            this.min = DFA10_min;
            this.max = DFA10_max;
            this.accept = DFA10_accept;
            this.special = DFA10_special;
            this.transition = DFA10_transition;
        }
        public String getDescription() {
            return "()* loopback of 936:11: (b= metaprogramDependencyDeclaration )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_1 = input.LA(1);

                         
                        int index10_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred11_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 61;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index10_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA12_eotS = DFA12Data.DFA12_eotS;
    static final String DFA12_eofS = DFA12Data.DFA12_eofS;
    static final String DFA12_minS = DFA12Data.DFA12_minS;
    static final String DFA12_maxS = DFA12Data.DFA12_maxS;
    static final String DFA12_acceptS = DFA12Data.DFA12_acceptS;
    static final String DFA12_specialS = DFA12Data.DFA12_specialS;
    static final String[] DFA12_transitionS = DFA12Data.DFA12_transitionS;

    static final short[] DFA12_eot = DFA12Data.DFA12_eot;
    static final short[] DFA12_eof = DFA12Data.DFA12_eof;
    static final char[] DFA12_min = DFA12Data.DFA12_min;
    static final char[] DFA12_max = DFA12Data.DFA12_max;
    static final short[] DFA12_accept = DFA12Data.DFA12_accept;
    static final short[] DFA12_special = DFA12Data.DFA12_special;
    static final short[][] DFA12_transition = DFA12Data.DFA12_transition;


    static class DFA12Data {
        static final String DFA12_eotS =
            "\76\uffff";
        static final String DFA12_eofS =
            "\1\3\75\uffff";
        static final String DFA12_minS =
            "\1\4\1\0\74\uffff";
        static final String DFA12_maxS =
            "\1\u0080\1\0\74\uffff";
        static final String DFA12_acceptS =
            "\2\uffff\1\1\1\2\72\uffff";
        static final String DFA12_specialS =
            "\1\uffff\1\0\74\uffff}>";
        static final String[] DFA12_transitionS = {
                "\1\3\3\uffff\15\3\2\uffff\1\2\1\uffff\2\3\14\uffff\5\3\2\uffff"+
                "\2\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1\uffff"+
                "\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\20\3\1\uffff\1\3\3\uffff"+
                "\1\3\4\uffff\2\3\5\uffff\4\3\16\uffff\1\3\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA12_eot = DFA.unpackEncodedString(DFA12_eotS);
        static final short[] DFA12_eof = DFA.unpackEncodedString(DFA12_eofS);
        static final char[] DFA12_min = DFA.unpackEncodedStringToUnsignedChars(DFA12_minS);
        static final char[] DFA12_max = DFA.unpackEncodedStringToUnsignedChars(DFA12_maxS);
        static final short[] DFA12_accept = DFA.unpackEncodedString(DFA12_acceptS);
        static final short[] DFA12_special = DFA.unpackEncodedString(DFA12_specialS);
        static final short[][] DFA12_transition;
        static {
            int numStates = DFA12_transitionS.length;
            DFA12_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA12_transition[i] = DFA.unpackEncodedString(DFA12_transitionS[i]);
            }
        }
    }
    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = DFA12_eot;
            this.eof = DFA12_eof;
            this.min = DFA12_min;
            this.max = DFA12_max;
            this.accept = DFA12_accept;
            this.special = DFA12_special;
            this.transition = DFA12_transition;
        }
        public String getDescription() {
            return "957:1: optionalMetaprogramDependencyDeclarationList returns [NodeUnion<? extends MetaprogramDependencyDeclarationListNode> ret] : ( ( metaprogramDependencyDeclarationList ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_1 = input.LA(1);

                         
                        int index12_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred12_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred12_BsjAntlr())) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index12_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA20_eotS = DFA20Data.DFA20_eotS;
    static final String DFA20_eofS = DFA20Data.DFA20_eofS;
    static final String DFA20_minS = DFA20Data.DFA20_minS;
    static final String DFA20_maxS = DFA20Data.DFA20_maxS;
    static final String DFA20_acceptS = DFA20Data.DFA20_acceptS;
    static final String DFA20_specialS = DFA20Data.DFA20_specialS;
    static final String[] DFA20_transitionS = DFA20Data.DFA20_transitionS;

    static final short[] DFA20_eot = DFA20Data.DFA20_eot;
    static final short[] DFA20_eof = DFA20Data.DFA20_eof;
    static final char[] DFA20_min = DFA20Data.DFA20_min;
    static final char[] DFA20_max = DFA20Data.DFA20_max;
    static final short[] DFA20_accept = DFA20Data.DFA20_accept;
    static final short[] DFA20_special = DFA20Data.DFA20_special;
    static final short[][] DFA20_transition = DFA20Data.DFA20_transition;


    static class DFA20Data {
        static final String DFA20_eotS =
            "\77\uffff";
        static final String DFA20_eofS =
            "\1\2\76\uffff";
        static final String DFA20_minS =
            "\1\4\1\0\75\uffff";
        static final String DFA20_maxS =
            "\1\u0080\1\0\75\uffff";
        static final String DFA20_acceptS =
            "\2\uffff\1\2\73\uffff\1\1";
        static final String DFA20_specialS =
            "\1\uffff\1\0\75\uffff}>";
        static final String[] DFA20_transitionS = {
                "\1\2\3\uffff\15\2\1\uffff\1\76\1\2\1\uffff\2\2\14\uffff\5\2"+
                "\2\uffff\2\2\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2"+
                "\1\uffff\1\2\3\uffff\1\2\1\uffff\2\2\1\uffff\20\2\1\uffff\1"+
                "\2\3\uffff\1\2\4\uffff\2\2\5\uffff\4\2\16\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA20_eot = DFA.unpackEncodedString(DFA20_eotS);
        static final short[] DFA20_eof = DFA.unpackEncodedString(DFA20_eofS);
        static final char[] DFA20_min = DFA.unpackEncodedStringToUnsignedChars(DFA20_minS);
        static final char[] DFA20_max = DFA.unpackEncodedStringToUnsignedChars(DFA20_maxS);
        static final short[] DFA20_accept = DFA.unpackEncodedString(DFA20_acceptS);
        static final short[] DFA20_special = DFA.unpackEncodedString(DFA20_specialS);
        static final short[][] DFA20_transition;
        static {
            int numStates = DFA20_transitionS.length;
            DFA20_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA20_transition[i] = DFA.unpackEncodedString(DFA20_transitionS[i]);
            }
        }
    }
    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;
        }
        public String getDescription() {
            return "()* loopback of 1146:11: (b= metaprogramTarget )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA20_1 = input.LA(1);

                         
                        int index20_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred21_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 62;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index20_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 20, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA22_eotS = DFA22Data.DFA22_eotS;
    static final String DFA22_eofS = DFA22Data.DFA22_eofS;
    static final String DFA22_minS = DFA22Data.DFA22_minS;
    static final String DFA22_maxS = DFA22Data.DFA22_maxS;
    static final String DFA22_acceptS = DFA22Data.DFA22_acceptS;
    static final String DFA22_specialS = DFA22Data.DFA22_specialS;
    static final String[] DFA22_transitionS = DFA22Data.DFA22_transitionS;

    static final short[] DFA22_eot = DFA22Data.DFA22_eot;
    static final short[] DFA22_eof = DFA22Data.DFA22_eof;
    static final char[] DFA22_min = DFA22Data.DFA22_min;
    static final char[] DFA22_max = DFA22Data.DFA22_max;
    static final short[] DFA22_accept = DFA22Data.DFA22_accept;
    static final short[] DFA22_special = DFA22Data.DFA22_special;
    static final short[][] DFA22_transition = DFA22Data.DFA22_transition;


    static class DFA22Data {
        static final String DFA22_eotS =
            "\77\uffff";
        static final String DFA22_eofS =
            "\1\3\76\uffff";
        static final String DFA22_minS =
            "\1\4\1\0\75\uffff";
        static final String DFA22_maxS =
            "\1\u0080\1\0\75\uffff";
        static final String DFA22_acceptS =
            "\2\uffff\1\1\1\2\73\uffff";
        static final String DFA22_specialS =
            "\1\uffff\1\0\75\uffff}>";
        static final String[] DFA22_transitionS = {
                "\1\3\3\uffff\15\3\1\uffff\1\2\1\3\1\uffff\2\3\14\uffff\5\3\2"+
                "\uffff\2\3\1\uffff\1\3\1\uffff\2\3\2\uffff\1\3\1\uffff\2\3\1"+
                "\uffff\1\3\3\uffff\1\3\1\uffff\2\3\1\uffff\20\3\1\uffff\1\3"+
                "\3\uffff\1\3\4\uffff\2\3\5\uffff\4\3\16\uffff\1\3\7\uffff\1"+
                "\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA22_eot = DFA.unpackEncodedString(DFA22_eotS);
        static final short[] DFA22_eof = DFA.unpackEncodedString(DFA22_eofS);
        static final char[] DFA22_min = DFA.unpackEncodedStringToUnsignedChars(DFA22_minS);
        static final char[] DFA22_max = DFA.unpackEncodedStringToUnsignedChars(DFA22_maxS);
        static final short[] DFA22_accept = DFA.unpackEncodedString(DFA22_acceptS);
        static final short[] DFA22_special = DFA.unpackEncodedString(DFA22_specialS);
        static final short[][] DFA22_transition;
        static {
            int numStates = DFA22_transitionS.length;
            DFA22_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA22_transition[i] = DFA.unpackEncodedString(DFA22_transitionS[i]);
            }
        }
    }
    class DFA22 extends DFA {

        public DFA22(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 22;
            this.eot = DFA22_eot;
            this.eof = DFA22_eof;
            this.min = DFA22_min;
            this.max = DFA22_max;
            this.accept = DFA22_accept;
            this.special = DFA22_special;
            this.transition = DFA22_transition;
        }
        public String getDescription() {
            return "1167:1: optionalMetaprogramTargetList returns [NodeUnion<? extends MetaprogramTargetListNode> ret] : ( ( metaprogramTargetList ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA22_1 = input.LA(1);

                         
                        int index22_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred22_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred22_BsjAntlr())) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index22_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 22, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA28_eotS = DFA28Data.DFA28_eotS;
    static final String DFA28_eofS = DFA28Data.DFA28_eofS;
    static final String DFA28_minS = DFA28Data.DFA28_minS;
    static final String DFA28_maxS = DFA28Data.DFA28_maxS;
    static final String DFA28_acceptS = DFA28Data.DFA28_acceptS;
    static final String DFA28_specialS = DFA28Data.DFA28_specialS;
    static final String[] DFA28_transitionS = DFA28Data.DFA28_transitionS;

    static final short[] DFA28_eot = DFA28Data.DFA28_eot;
    static final short[] DFA28_eof = DFA28Data.DFA28_eof;
    static final char[] DFA28_min = DFA28Data.DFA28_min;
    static final char[] DFA28_max = DFA28Data.DFA28_max;
    static final short[] DFA28_accept = DFA28Data.DFA28_accept;
    static final short[] DFA28_special = DFA28Data.DFA28_special;
    static final short[][] DFA28_transition = DFA28Data.DFA28_transition;


    static class DFA28Data {
        static final String DFA28_eotS =
            "\61\uffff";
        static final String DFA28_eofS =
            "\1\1\60\uffff";
        static final String DFA28_minS =
            "\1\4\17\uffff\1\0\40\uffff";
        static final String DFA28_maxS =
            "\1\u0080\17\uffff\1\0\40\uffff";
        static final String DFA28_acceptS =
            "\1\uffff\1\2\56\uffff\1\1";
        static final String DFA28_specialS =
            "\1\0\17\uffff\1\1\40\uffff}>";
        static final String[] DFA28_transitionS = {
                "\1\1\3\uffff\15\1\23\uffff\4\1\2\uffff\1\1\2\uffff\1\1\1\uffff"+
                "\2\1\4\uffff\2\1\1\uffff\1\1\3\uffff\1\1\1\uffff\1\1\5\uffff"+
                "\3\1\1\uffff\3\1\1\uffff\2\1\1\uffff\2\1\1\uffff\1\1\3\uffff"+
                "\1\1\4\uffff\2\1\5\uffff\4\1\16\uffff\1\60\7\uffff\1\20",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA28_eot = DFA.unpackEncodedString(DFA28_eotS);
        static final short[] DFA28_eof = DFA.unpackEncodedString(DFA28_eofS);
        static final char[] DFA28_min = DFA.unpackEncodedStringToUnsignedChars(DFA28_minS);
        static final char[] DFA28_max = DFA.unpackEncodedStringToUnsignedChars(DFA28_maxS);
        static final short[] DFA28_accept = DFA.unpackEncodedString(DFA28_acceptS);
        static final short[] DFA28_special = DFA.unpackEncodedString(DFA28_specialS);
        static final short[][] DFA28_transition;
        static {
            int numStates = DFA28_transitionS.length;
            DFA28_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA28_transition[i] = DFA.unpackEncodedString(DFA28_transitionS[i]);
            }
        }
    }
    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = DFA28_eot;
            this.eof = DFA28_eof;
            this.min = DFA28_min;
            this.max = DFA28_max;
            this.accept = DFA28_accept;
            this.special = DFA28_special;
            this.transition = DFA28_transition;
        }
        public String getDescription() {
            return "()* loopback of 1435:11: (b= metaAnnotation )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA28_0 = input.LA(1);

                         
                        int index28_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA28_0==EOF||LA28_0==CODELITERAL_START||(LA28_0>=SUPER && LA28_0<=IDENTIFIER)||(LA28_0>=ASSERT && LA28_0<=BYTE)||LA28_0==CHAR||LA28_0==CONTINUE||(LA28_0>=DO && LA28_0<=DOUBLE)||(LA28_0>=FLOAT && LA28_0<=FOR)||LA28_0==IF||LA28_0==INT||LA28_0==LONG||(LA28_0>=RETURN && LA28_0<=STATIC)||(LA28_0>=SWITCH && LA28_0<=THROW)||(LA28_0>=TRY && LA28_0<=VOID)||(LA28_0>=WHILE && LA28_0<=LPAREN)||LA28_0==LBRACE||LA28_0==SEMI||(LA28_0>=BANG && LA28_0<=TILDE)||(LA28_0>=PLUSPLUS && LA28_0<=SUB)) ) {s = 1;}

                        else if ( (LA28_0==128) ) {s = 16;}

                        else if ( (LA28_0==MONKEYS_AT) && ((configuration.getMetaAnnotationsSupported()))) {s = 48;}

                         
                        input.seek(index28_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA28_16 = input.LA(1);

                         
                        int index28_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred29_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))) ) {s = 48;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index28_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 28, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA30_eotS = DFA30Data.DFA30_eotS;
    static final String DFA30_eofS = DFA30Data.DFA30_eofS;
    static final String DFA30_minS = DFA30Data.DFA30_minS;
    static final String DFA30_maxS = DFA30Data.DFA30_maxS;
    static final String DFA30_acceptS = DFA30Data.DFA30_acceptS;
    static final String DFA30_specialS = DFA30Data.DFA30_specialS;
    static final String[] DFA30_transitionS = DFA30Data.DFA30_transitionS;

    static final short[] DFA30_eot = DFA30Data.DFA30_eot;
    static final short[] DFA30_eof = DFA30Data.DFA30_eof;
    static final char[] DFA30_min = DFA30Data.DFA30_min;
    static final char[] DFA30_max = DFA30Data.DFA30_max;
    static final short[] DFA30_accept = DFA30Data.DFA30_accept;
    static final short[] DFA30_special = DFA30Data.DFA30_special;
    static final short[][] DFA30_transition = DFA30Data.DFA30_transition;


    static class DFA30Data {
        static final String DFA30_eotS =
            "\60\uffff";
        static final String DFA30_eofS =
            "\60\uffff";
        static final String DFA30_minS =
            "\1\4\1\0\56\uffff";
        static final String DFA30_maxS =
            "\1\u0080\1\0\56\uffff";
        static final String DFA30_acceptS =
            "\2\uffff\1\1\1\2\54\uffff";
        static final String DFA30_specialS =
            "\1\uffff\1\0\56\uffff}>";
        static final String[] DFA30_transitionS = {
                "\1\3\3\uffff\15\3\23\uffff\4\3\2\uffff\1\3\2\uffff\1\3\1\uffff"+
                "\2\3\4\uffff\2\3\1\uffff\1\3\3\uffff\1\3\1\uffff\1\3\5\uffff"+
                "\3\3\1\uffff\3\3\1\uffff\2\3\1\uffff\2\3\1\uffff\1\3\3\uffff"+
                "\1\3\4\uffff\2\3\5\uffff\4\3\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA30_eot = DFA.unpackEncodedString(DFA30_eotS);
        static final short[] DFA30_eof = DFA.unpackEncodedString(DFA30_eofS);
        static final char[] DFA30_min = DFA.unpackEncodedStringToUnsignedChars(DFA30_minS);
        static final char[] DFA30_max = DFA.unpackEncodedStringToUnsignedChars(DFA30_maxS);
        static final short[] DFA30_accept = DFA.unpackEncodedString(DFA30_acceptS);
        static final short[] DFA30_special = DFA.unpackEncodedString(DFA30_specialS);
        static final short[][] DFA30_transition;
        static {
            int numStates = DFA30_transitionS.length;
            DFA30_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA30_transition[i] = DFA.unpackEncodedString(DFA30_transitionS[i]);
            }
        }
    }
    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = DFA30_eot;
            this.eof = DFA30_eof;
            this.min = DFA30_min;
            this.max = DFA30_max;
            this.accept = DFA30_accept;
            this.special = DFA30_special;
            this.transition = DFA30_transition;
        }
        public String getDescription() {
            return "1456:1: optionalMetaAnnotationList returns [NodeUnion<? extends MetaAnnotationListNode> ret] : ( ( metaAnnotationList ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_1 = input.LA(1);

                         
                        int index30_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred30_BsjAntlr()||(synpred30_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index30_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA32_eotS = DFA32Data.DFA32_eotS;
    static final String DFA32_eofS = DFA32Data.DFA32_eofS;
    static final String DFA32_minS = DFA32Data.DFA32_minS;
    static final String DFA32_maxS = DFA32Data.DFA32_maxS;
    static final String DFA32_acceptS = DFA32Data.DFA32_acceptS;
    static final String DFA32_specialS = DFA32Data.DFA32_specialS;
    static final String[] DFA32_transitionS = DFA32Data.DFA32_transitionS;

    static final short[] DFA32_eot = DFA32Data.DFA32_eot;
    static final short[] DFA32_eof = DFA32Data.DFA32_eof;
    static final char[] DFA32_min = DFA32Data.DFA32_min;
    static final char[] DFA32_max = DFA32Data.DFA32_max;
    static final short[] DFA32_accept = DFA32Data.DFA32_accept;
    static final short[] DFA32_special = DFA32Data.DFA32_special;
    static final short[][] DFA32_transition = DFA32Data.DFA32_transition;


    static class DFA32Data {
        static final String DFA32_eotS =
            "\103\uffff";
        static final String DFA32_eofS =
            "\1\2\102\uffff";
        static final String DFA32_minS =
            "\1\4\1\0\101\uffff";
        static final String DFA32_maxS =
            "\1\u0080\1\0\101\uffff";
        static final String DFA32_acceptS =
            "\2\uffff\1\2\77\uffff\1\1";
        static final String DFA32_specialS =
            "\1\uffff\1\0\101\uffff}>";
        static final String[] DFA32_transitionS = {
                "\1\2\3\uffff\15\2\22\uffff\5\2\2\uffff\2\2\1\uffff\1\2\1\uffff"+
                "\2\2\1\uffff\2\2\1\uffff\2\2\1\uffff\1\2\3\uffff\24\2\1\1\3"+
                "\2\2\uffff\2\2\3\uffff\2\2\5\uffff\4\2\16\uffff\1\2\2\uffff"+
                "\1\2\4\uffff\1\2",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA32_eot = DFA.unpackEncodedString(DFA32_eotS);
        static final short[] DFA32_eof = DFA.unpackEncodedString(DFA32_eofS);
        static final char[] DFA32_min = DFA.unpackEncodedStringToUnsignedChars(DFA32_minS);
        static final char[] DFA32_max = DFA.unpackEncodedStringToUnsignedChars(DFA32_maxS);
        static final short[] DFA32_accept = DFA.unpackEncodedString(DFA32_acceptS);
        static final short[] DFA32_special = DFA.unpackEncodedString(DFA32_specialS);
        static final short[][] DFA32_transition;
        static {
            int numStates = DFA32_transitionS.length;
            DFA32_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA32_transition[i] = DFA.unpackEncodedString(DFA32_transitionS[i]);
            }
        }
    }
    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = DFA32_eot;
            this.eof = DFA32_eof;
            this.min = DFA32_min;
            this.max = DFA32_max;
            this.accept = DFA32_accept;
            this.special = DFA32_special;
            this.transition = DFA32_transition;
        }
        public String getDescription() {
            return "1504:13: ( ( '(' ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )? ')' ) | )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_BsjAntlr()) ) {s = 66;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA31_eotS = DFA31Data.DFA31_eotS;
    static final String DFA31_eofS = DFA31Data.DFA31_eofS;
    static final String DFA31_minS = DFA31Data.DFA31_minS;
    static final String DFA31_maxS = DFA31Data.DFA31_maxS;
    static final String DFA31_acceptS = DFA31Data.DFA31_acceptS;
    static final String DFA31_specialS = DFA31Data.DFA31_specialS;
    static final String[] DFA31_transitionS = DFA31Data.DFA31_transitionS;

    static final short[] DFA31_eot = DFA31Data.DFA31_eot;
    static final short[] DFA31_eof = DFA31Data.DFA31_eof;
    static final char[] DFA31_min = DFA31Data.DFA31_min;
    static final char[] DFA31_max = DFA31Data.DFA31_max;
    static final short[] DFA31_accept = DFA31Data.DFA31_accept;
    static final short[] DFA31_special = DFA31Data.DFA31_special;
    static final short[][] DFA31_transition = DFA31Data.DFA31_transition;


    static class DFA31Data {
        static final String DFA31_eotS =
            "\45\uffff";
        static final String DFA31_eofS =
            "\45\uffff";
        static final String DFA31_minS =
            "\1\4\3\0\41\uffff";
        static final String DFA31_maxS =
            "\1\u0080\3\0\41\uffff";
        static final String DFA31_acceptS =
            "\4\uffff\1\2\36\uffff\1\1\1\3";
        static final String DFA31_specialS =
            "\1\uffff\1\0\1\1\1\2\41\uffff}>";
        static final String[] DFA31_transitionS = {
                "\1\4\3\uffff\14\4\1\2\24\uffff\1\4\1\uffff\1\4\2\uffff\1\4\5"+
                "\uffff\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7"+
                "\uffff\1\4\2\uffff\1\4\1\3\1\4\10\uffff\2\4\5\uffff\4\4\16\uffff"+
                "\1\4\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA31_eot = DFA.unpackEncodedString(DFA31_eotS);
        static final short[] DFA31_eof = DFA.unpackEncodedString(DFA31_eofS);
        static final char[] DFA31_min = DFA.unpackEncodedStringToUnsignedChars(DFA31_minS);
        static final char[] DFA31_max = DFA.unpackEncodedStringToUnsignedChars(DFA31_maxS);
        static final short[] DFA31_accept = DFA.unpackEncodedString(DFA31_acceptS);
        static final short[] DFA31_special = DFA.unpackEncodedString(DFA31_specialS);
        static final short[][] DFA31_transition;
        static {
            int numStates = DFA31_transitionS.length;
            DFA31_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA31_transition[i] = DFA.unpackEncodedString(DFA31_transitionS[i]);
            }
        }
    }
    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = DFA31_eot;
            this.eof = DFA31_eof;
            this.min = DFA31_min;
            this.max = DFA31_max;
            this.accept = DFA31_accept;
            this.special = DFA31_special;
            this.transition = DFA31_transition;
        }
        public String getDescription() {
            return "1507:21: ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_1 = input.LA(1);

                         
                        int index31_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred32_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred32_BsjAntlr())) ) {s = 35;}

                        else if ( (((synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred33_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred33_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 4;}

                         
                        input.seek(index31_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_2 = input.LA(1);

                         
                        int index31_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_BsjAntlr()) ) {s = 35;}

                        else if ( (synpred33_BsjAntlr()) ) {s = 4;}

                         
                        input.seek(index31_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA31_3 = input.LA(1);

                         
                        int index31_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_BsjAntlr()) ) {s = 35;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index31_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA38_eotS = DFA38Data.DFA38_eotS;
    static final String DFA38_eofS = DFA38Data.DFA38_eofS;
    static final String DFA38_minS = DFA38Data.DFA38_minS;
    static final String DFA38_maxS = DFA38Data.DFA38_maxS;
    static final String DFA38_acceptS = DFA38Data.DFA38_acceptS;
    static final String DFA38_specialS = DFA38Data.DFA38_specialS;
    static final String[] DFA38_transitionS = DFA38Data.DFA38_transitionS;

    static final short[] DFA38_eot = DFA38Data.DFA38_eot;
    static final short[] DFA38_eof = DFA38Data.DFA38_eof;
    static final char[] DFA38_min = DFA38Data.DFA38_min;
    static final char[] DFA38_max = DFA38Data.DFA38_max;
    static final short[] DFA38_accept = DFA38Data.DFA38_accept;
    static final short[] DFA38_special = DFA38Data.DFA38_special;
    static final short[][] DFA38_transition = DFA38Data.DFA38_transition;


    static class DFA38Data {
        static final String DFA38_eotS =
            "\43\uffff";
        static final String DFA38_eofS =
            "\43\uffff";
        static final String DFA38_minS =
            "\1\4\1\0\41\uffff";
        static final String DFA38_maxS =
            "\1\u0080\1\0\41\uffff";
        static final String DFA38_acceptS =
            "\2\uffff\1\2\35\uffff\1\3\1\4\1\1";
        static final String DFA38_specialS =
            "\1\0\1\1\41\uffff}>";
        static final String[] DFA38_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\41\10\uffff\2\2\5\uffff\4\2\16\uffff"+
                "\1\40\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA38_eot = DFA.unpackEncodedString(DFA38_eotS);
        static final short[] DFA38_eof = DFA.unpackEncodedString(DFA38_eofS);
        static final char[] DFA38_min = DFA.unpackEncodedStringToUnsignedChars(DFA38_minS);
        static final char[] DFA38_max = DFA.unpackEncodedStringToUnsignedChars(DFA38_maxS);
        static final short[] DFA38_accept = DFA.unpackEncodedString(DFA38_acceptS);
        static final short[] DFA38_special = DFA.unpackEncodedString(DFA38_specialS);
        static final short[][] DFA38_transition;
        static {
            int numStates = DFA38_transitionS.length;
            DFA38_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA38_transition[i] = DFA.unpackEncodedString(DFA38_transitionS[i]);
            }
        }
    }
    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = DFA38_eot;
            this.eof = DFA38_eof;
            this.min = DFA38_min;
            this.max = DFA38_max;
            this.accept = DFA38_accept;
            this.special = DFA38_special;
            this.transition = DFA38_transition;
        }
        public String getDescription() {
            return "1659:1: metaAnnotationElementValue returns [NodeUnion<? extends MetaAnnotationValueNode> ret] : ( splice[MetaAnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(MetaAnnotationArrayValueNode.class)] | conditionalExpression | metaAnnotation | metaAnnotationElementValueArrayInitializer );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA38_0 = input.LA(1);

                         
                        int index38_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA38_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA38_0==CODELITERAL_START||(LA38_0>=SUPER && LA38_0<=IDENTIFIER)||LA38_0==BOOLEAN||LA38_0==BYTE||LA38_0==CHAR||LA38_0==DOUBLE||LA38_0==FLOAT||LA38_0==INT||LA38_0==LONG||LA38_0==SHORT||LA38_0==VOID||LA38_0==LPAREN||(LA38_0>=BANG && LA38_0<=TILDE)||(LA38_0>=PLUSPLUS && LA38_0<=SUB)) ) {s = 2;}

                        else if ( (LA38_0==MONKEYS_AT) && ((configuration.getMetaAnnotationsSupported()))) {s = 32;}

                        else if ( (LA38_0==LBRACE) ) {s = 33;}

                         
                        input.seek(index38_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA38_1 = input.LA(1);

                         
                        int index38_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred39_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 34;}

                        else if ( ((((synpred40_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred40_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( (((synpred41_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))) ) {s = 32;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 33;}

                         
                        input.seek(index38_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 38, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA40_eotS = DFA40Data.DFA40_eotS;
    static final String DFA40_eofS = DFA40Data.DFA40_eofS;
    static final String DFA40_minS = DFA40Data.DFA40_minS;
    static final String DFA40_maxS = DFA40Data.DFA40_maxS;
    static final String DFA40_acceptS = DFA40Data.DFA40_acceptS;
    static final String DFA40_specialS = DFA40Data.DFA40_specialS;
    static final String[] DFA40_transitionS = DFA40Data.DFA40_transitionS;

    static final short[] DFA40_eot = DFA40Data.DFA40_eot;
    static final short[] DFA40_eof = DFA40Data.DFA40_eof;
    static final char[] DFA40_min = DFA40Data.DFA40_min;
    static final char[] DFA40_max = DFA40Data.DFA40_max;
    static final short[] DFA40_accept = DFA40Data.DFA40_accept;
    static final short[] DFA40_special = DFA40Data.DFA40_special;
    static final short[][] DFA40_transition = DFA40Data.DFA40_transition;


    static class DFA40Data {
        static final String DFA40_eotS =
            "\43\uffff";
        static final String DFA40_eofS =
            "\43\uffff";
        static final String DFA40_minS =
            "\1\4\1\0\41\uffff";
        static final String DFA40_maxS =
            "\1\u0080\1\0\41\uffff";
        static final String DFA40_acceptS =
            "\2\uffff\1\2\37\uffff\1\1";
        static final String DFA40_specialS =
            "\1\uffff\1\0\41\uffff}>";
        static final String[] DFA40_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\10\uffff\2\2\5\uffff\4\2\16\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA40_eot = DFA.unpackEncodedString(DFA40_eotS);
        static final short[] DFA40_eof = DFA.unpackEncodedString(DFA40_eofS);
        static final char[] DFA40_min = DFA.unpackEncodedStringToUnsignedChars(DFA40_minS);
        static final char[] DFA40_max = DFA.unpackEncodedStringToUnsignedChars(DFA40_maxS);
        static final short[] DFA40_accept = DFA.unpackEncodedString(DFA40_acceptS);
        static final short[] DFA40_special = DFA.unpackEncodedString(DFA40_specialS);
        static final short[][] DFA40_transition;
        static {
            int numStates = DFA40_transitionS.length;
            DFA40_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA40_transition[i] = DFA.unpackEncodedString(DFA40_transitionS[i]);
            }
        }
    }
    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = DFA40_eot;
            this.eof = DFA40_eof;
            this.min = DFA40_min;
            this.max = DFA40_max;
            this.accept = DFA40_accept;
            this.special = DFA40_special;
            this.transition = DFA40_transition;
        }
        public String getDescription() {
            return "1709:9: ( splice[MetaAnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= metaAnnotationElementValue ( ',' b= metaAnnotationElementValue )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred42_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA47_eotS = DFA47Data.DFA47_eotS;
    static final String DFA47_eofS = DFA47Data.DFA47_eofS;
    static final String DFA47_minS = DFA47Data.DFA47_minS;
    static final String DFA47_maxS = DFA47Data.DFA47_maxS;
    static final String DFA47_acceptS = DFA47Data.DFA47_acceptS;
    static final String DFA47_specialS = DFA47Data.DFA47_specialS;
    static final String[] DFA47_transitionS = DFA47Data.DFA47_transitionS;

    static final short[] DFA47_eot = DFA47Data.DFA47_eot;
    static final short[] DFA47_eof = DFA47Data.DFA47_eof;
    static final char[] DFA47_min = DFA47Data.DFA47_min;
    static final char[] DFA47_max = DFA47Data.DFA47_max;
    static final short[] DFA47_accept = DFA47Data.DFA47_accept;
    static final short[] DFA47_special = DFA47Data.DFA47_special;
    static final short[][] DFA47_transition = DFA47Data.DFA47_transition;


    static class DFA47Data {
        static final String DFA47_eotS =
            "\30\uffff";
        static final String DFA47_eofS =
            "\1\2\27\uffff";
        static final String DFA47_minS =
            "\1\25\1\0\26\uffff";
        static final String DFA47_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA47_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA47_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA47_transitionS = {
                "\1\2\3\uffff\1\2\15\uffff\1\2\7\uffff\1\2\6\uffff\2\2\6\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\5\2\2\uffff\2\2\1\uffff\1\2\1\uffff"+
                "\1\2\2\uffff\1\2\7\uffff\1\2\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA47_eot = DFA.unpackEncodedString(DFA47_eotS);
        static final short[] DFA47_eof = DFA.unpackEncodedString(DFA47_eofS);
        static final char[] DFA47_min = DFA.unpackEncodedStringToUnsignedChars(DFA47_minS);
        static final char[] DFA47_max = DFA.unpackEncodedStringToUnsignedChars(DFA47_maxS);
        static final short[] DFA47_accept = DFA.unpackEncodedString(DFA47_acceptS);
        static final short[] DFA47_special = DFA.unpackEncodedString(DFA47_specialS);
        static final short[][] DFA47_transition;
        static {
            int numStates = DFA47_transitionS.length;
            DFA47_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA47_transition[i] = DFA.unpackEncodedString(DFA47_transitionS[i]);
            }
        }
    }
    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = DFA47_eot;
            this.eof = DFA47_eof;
            this.min = DFA47_min;
            this.max = DFA47_max;
            this.accept = DFA47_accept;
            this.special = DFA47_special;
            this.transition = DFA47_transition;
        }
        public String getDescription() {
            return "1939:1: compilationUnit[String name] returns [NodeUnion<? extends CompilationUnitNode> ret] : ( splice[CompilationUnitNode.class, Arrays.<Class<? extends Node>>asList()] | ( packageDeclaration )? optionalMetaImportDeclarations optionalImportDeclarations optionalTypeDeclarations EOF );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA47_1 = input.LA(1);

                         
                        int index47_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred51_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index47_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 47, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA46_eotS = DFA46Data.DFA46_eotS;
    static final String DFA46_eofS = DFA46Data.DFA46_eofS;
    static final String DFA46_minS = DFA46Data.DFA46_minS;
    static final String DFA46_maxS = DFA46Data.DFA46_maxS;
    static final String DFA46_acceptS = DFA46Data.DFA46_acceptS;
    static final String DFA46_specialS = DFA46Data.DFA46_specialS;
    static final String[] DFA46_transitionS = DFA46Data.DFA46_transitionS;

    static final short[] DFA46_eot = DFA46Data.DFA46_eot;
    static final short[] DFA46_eof = DFA46Data.DFA46_eof;
    static final char[] DFA46_min = DFA46Data.DFA46_min;
    static final char[] DFA46_max = DFA46Data.DFA46_max;
    static final short[] DFA46_accept = DFA46Data.DFA46_accept;
    static final short[] DFA46_special = DFA46Data.DFA46_special;
    static final short[][] DFA46_transition = DFA46Data.DFA46_transition;


    static class DFA46Data {
        static final String DFA46_eotS =
            "\27\uffff";
        static final String DFA46_eofS =
            "\1\17\26\uffff";
        static final String DFA46_minS =
            "\1\25\15\0\11\uffff";
        static final String DFA46_maxS =
            "\1\u0080\15\0\11\uffff";
        static final String DFA46_acceptS =
            "\16\uffff\1\1\1\2\7\uffff";
        static final String DFA46_specialS =
            "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
            "\11\uffff}>";
        static final String[] DFA46_transitionS = {
                "\1\17\3\uffff\1\17\15\uffff\1\6\7\uffff\1\17\6\uffff\1\17\1"+
                "\7\6\uffff\1\17\2\uffff\1\17\1\uffff\1\10\1\16\1\5\1\4\1\3\2"+
                "\uffff\1\11\1\12\1\uffff\1\13\1\uffff\1\14\2\uffff\1\15\7\uffff"+
                "\1\17\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
        static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
        static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
        static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
        static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
        static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
        static final short[][] DFA46_transition;
        static {
            int numStates = DFA46_transitionS.length;
            DFA46_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
            }
        }
    }
    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "1954:9: ( packageDeclaration )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred52_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred52_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred52_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_2 = input.LA(1);

                         
                        int index46_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred52_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred52_BsjAntlr())) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_3 = input.LA(1);

                         
                        int index46_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_4 = input.LA(1);

                         
                        int index46_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_5 = input.LA(1);

                         
                        int index46_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_12 = input.LA(1);

                         
                        int index46_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_13 = input.LA(1);

                         
                        int index46_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index46_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA48_eotS = DFA48Data.DFA48_eotS;
    static final String DFA48_eofS = DFA48Data.DFA48_eofS;
    static final String DFA48_minS = DFA48Data.DFA48_minS;
    static final String DFA48_maxS = DFA48Data.DFA48_maxS;
    static final String DFA48_acceptS = DFA48Data.DFA48_acceptS;
    static final String DFA48_specialS = DFA48Data.DFA48_specialS;
    static final String[] DFA48_transitionS = DFA48Data.DFA48_transitionS;

    static final short[] DFA48_eot = DFA48Data.DFA48_eot;
    static final short[] DFA48_eof = DFA48Data.DFA48_eof;
    static final char[] DFA48_min = DFA48Data.DFA48_min;
    static final char[] DFA48_max = DFA48Data.DFA48_max;
    static final short[] DFA48_accept = DFA48Data.DFA48_accept;
    static final short[] DFA48_special = DFA48Data.DFA48_special;
    static final short[][] DFA48_transition = DFA48Data.DFA48_transition;


    static class DFA48Data {
        static final String DFA48_eotS =
            "\20\uffff";
        static final String DFA48_eofS =
            "\20\uffff";
        static final String DFA48_minS =
            "\1\47\1\0\16\uffff";
        static final String DFA48_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA48_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA48_specialS =
            "\1\0\1\1\16\uffff}>";
        static final String[] DFA48_transitionS = {
                "\1\2\17\uffff\1\2\13\uffff\5\2\2\uffff\2\2\1\uffff\1\2\1\uffff"+
                "\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA48_eot = DFA.unpackEncodedString(DFA48_eotS);
        static final short[] DFA48_eof = DFA.unpackEncodedString(DFA48_eofS);
        static final char[] DFA48_min = DFA.unpackEncodedStringToUnsignedChars(DFA48_minS);
        static final char[] DFA48_max = DFA.unpackEncodedStringToUnsignedChars(DFA48_maxS);
        static final short[] DFA48_accept = DFA.unpackEncodedString(DFA48_acceptS);
        static final short[] DFA48_special = DFA.unpackEncodedString(DFA48_specialS);
        static final short[][] DFA48_transition;
        static {
            int numStates = DFA48_transitionS.length;
            DFA48_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA48_transition[i] = DFA.unpackEncodedString(DFA48_transitionS[i]);
            }
        }
    }
    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = DFA48_eot;
            this.eof = DFA48_eof;
            this.min = DFA48_min;
            this.max = DFA48_max;
            this.accept = DFA48_accept;
            this.special = DFA48_special;
            this.transition = DFA48_transition;
        }
        public String getDescription() {
            return "1969:1: packageDeclaration returns [NodeUnion<? extends PackageDeclarationNode> ret] : ( splice[PackageDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | modifiers[false] 'package' name ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA48_0 = input.LA(1);

                         
                        int index48_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA48_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA48_0==ABSTRACT||LA48_0==FINAL||(LA48_0>=NATIVE && LA48_0<=PUBLIC)||(LA48_0>=STATIC && LA48_0<=STRICTFP)||LA48_0==SYNCHRONIZED||LA48_0==TRANSIENT||LA48_0==VOLATILE||LA48_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index48_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA48_1 = input.LA(1);

                         
                        int index48_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred53_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index48_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 48, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA49_eotS = DFA49Data.DFA49_eotS;
    static final String DFA49_eofS = DFA49Data.DFA49_eofS;
    static final String DFA49_minS = DFA49Data.DFA49_minS;
    static final String DFA49_maxS = DFA49Data.DFA49_maxS;
    static final String DFA49_acceptS = DFA49Data.DFA49_acceptS;
    static final String DFA49_specialS = DFA49Data.DFA49_specialS;
    static final String[] DFA49_transitionS = DFA49Data.DFA49_transitionS;

    static final short[] DFA49_eot = DFA49Data.DFA49_eot;
    static final short[] DFA49_eof = DFA49Data.DFA49_eof;
    static final char[] DFA49_min = DFA49Data.DFA49_min;
    static final char[] DFA49_max = DFA49Data.DFA49_max;
    static final short[] DFA49_accept = DFA49Data.DFA49_accept;
    static final short[] DFA49_special = DFA49Data.DFA49_special;
    static final short[][] DFA49_transition = DFA49Data.DFA49_transition;


    static class DFA49Data {
        static final String DFA49_eotS =
            "\104\uffff";
        static final String DFA49_eofS =
            "\1\1\103\uffff";
        static final String DFA49_minS =
            "\1\4\1\uffff\1\0\101\uffff";
        static final String DFA49_maxS =
            "\1\u0080\1\uffff\1\0\101\uffff";
        static final String DFA49_acceptS =
            "\1\uffff\1\2\101\uffff\1\1";
        static final String DFA49_specialS =
            "\2\uffff\1\0\101\uffff}>";
        static final String[] DFA49_transitionS = {
                "\1\1\3\uffff\15\1\1\103\2\1\1\uffff\2\1\14\uffff\5\1\2\uffff"+
                "\2\1\1\uffff\1\1\1\uffff\2\1\1\uffff\2\1\1\uffff\2\1\1\uffff"+
                "\1\1\1\uffff\1\1\1\uffff\4\1\1\uffff\20\1\1\uffff\1\1\3\uffff"+
                "\1\1\4\uffff\2\1\5\uffff\4\1\16\uffff\1\1\6\uffff\1\1\1\2",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA49_eot = DFA.unpackEncodedString(DFA49_eotS);
        static final short[] DFA49_eof = DFA.unpackEncodedString(DFA49_eofS);
        static final char[] DFA49_min = DFA.unpackEncodedStringToUnsignedChars(DFA49_minS);
        static final char[] DFA49_max = DFA.unpackEncodedStringToUnsignedChars(DFA49_maxS);
        static final short[] DFA49_accept = DFA.unpackEncodedString(DFA49_acceptS);
        static final short[] DFA49_special = DFA.unpackEncodedString(DFA49_specialS);
        static final short[][] DFA49_transition;
        static {
            int numStates = DFA49_transitionS.length;
            DFA49_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA49_transition[i] = DFA.unpackEncodedString(DFA49_transitionS[i]);
            }
        }
    }
    class DFA49 extends DFA {

        public DFA49(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 49;
            this.eot = DFA49_eot;
            this.eof = DFA49_eof;
            this.min = DFA49_min;
            this.max = DFA49_max;
            this.accept = DFA49_accept;
            this.special = DFA49_special;
            this.transition = DFA49_transition;
        }
        public String getDescription() {
            return "()* loopback of 2027:11: (b= metaprogramImport )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA49_2 = input.LA(1);

                         
                        int index49_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred55_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index49_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 49, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA51_eotS = DFA51Data.DFA51_eotS;
    static final String DFA51_eofS = DFA51Data.DFA51_eofS;
    static final String DFA51_minS = DFA51Data.DFA51_minS;
    static final String DFA51_maxS = DFA51Data.DFA51_maxS;
    static final String DFA51_acceptS = DFA51Data.DFA51_acceptS;
    static final String DFA51_specialS = DFA51Data.DFA51_specialS;
    static final String[] DFA51_transitionS = DFA51Data.DFA51_transitionS;

    static final short[] DFA51_eot = DFA51Data.DFA51_eot;
    static final short[] DFA51_eof = DFA51Data.DFA51_eof;
    static final char[] DFA51_min = DFA51Data.DFA51_min;
    static final char[] DFA51_max = DFA51Data.DFA51_max;
    static final short[] DFA51_accept = DFA51Data.DFA51_accept;
    static final short[] DFA51_special = DFA51Data.DFA51_special;
    static final short[][] DFA51_transition = DFA51Data.DFA51_transition;


    static class DFA51Data {
        static final String DFA51_eotS =
            "\104\uffff";
        static final String DFA51_eofS =
            "\1\3\103\uffff";
        static final String DFA51_minS =
            "\1\4\1\0\102\uffff";
        static final String DFA51_maxS =
            "\1\u0080\1\0\102\uffff";
        static final String DFA51_acceptS =
            "\2\uffff\1\1\1\2\100\uffff";
        static final String DFA51_specialS =
            "\1\uffff\1\0\102\uffff}>";
        static final String[] DFA51_transitionS = {
                "\1\3\3\uffff\15\3\1\2\2\3\1\uffff\2\3\14\uffff\5\3\2\uffff\2"+
                "\3\1\uffff\1\3\1\uffff\2\3\1\uffff\2\3\1\uffff\2\3\1\uffff\1"+
                "\3\1\uffff\1\3\1\uffff\4\3\1\uffff\20\3\1\uffff\1\3\3\uffff"+
                "\1\3\4\uffff\2\3\5\uffff\4\3\16\uffff\1\3\6\uffff\1\3\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA51_eot = DFA.unpackEncodedString(DFA51_eotS);
        static final short[] DFA51_eof = DFA.unpackEncodedString(DFA51_eofS);
        static final char[] DFA51_min = DFA.unpackEncodedStringToUnsignedChars(DFA51_minS);
        static final char[] DFA51_max = DFA.unpackEncodedStringToUnsignedChars(DFA51_maxS);
        static final short[] DFA51_accept = DFA.unpackEncodedString(DFA51_acceptS);
        static final short[] DFA51_special = DFA.unpackEncodedString(DFA51_specialS);
        static final short[][] DFA51_transition;
        static {
            int numStates = DFA51_transitionS.length;
            DFA51_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA51_transition[i] = DFA.unpackEncodedString(DFA51_transitionS[i]);
            }
        }
    }
    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = DFA51_eot;
            this.eof = DFA51_eof;
            this.min = DFA51_min;
            this.max = DFA51_max;
            this.accept = DFA51_accept;
            this.special = DFA51_special;
            this.transition = DFA51_transition;
        }
        public String getDescription() {
            return "2048:1: optionalMetaImportDeclarations returns [NodeUnion<? extends MetaprogramImportListNode> ret] : ( ( metaImportDeclarations ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_1 = input.LA(1);

                         
                        int index51_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred56_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred56_BsjAntlr())) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index51_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA52_eotS = DFA52Data.DFA52_eotS;
    static final String DFA52_eofS = DFA52Data.DFA52_eofS;
    static final String DFA52_minS = DFA52Data.DFA52_minS;
    static final String DFA52_maxS = DFA52Data.DFA52_maxS;
    static final String DFA52_acceptS = DFA52Data.DFA52_acceptS;
    static final String DFA52_specialS = DFA52Data.DFA52_specialS;
    static final String[] DFA52_transitionS = DFA52Data.DFA52_transitionS;

    static final short[] DFA52_eot = DFA52Data.DFA52_eot;
    static final short[] DFA52_eof = DFA52Data.DFA52_eof;
    static final char[] DFA52_min = DFA52Data.DFA52_min;
    static final char[] DFA52_max = DFA52Data.DFA52_max;
    static final short[] DFA52_accept = DFA52Data.DFA52_accept;
    static final short[] DFA52_special = DFA52Data.DFA52_special;
    static final short[][] DFA52_transition = DFA52Data.DFA52_transition;


    static class DFA52Data {
        static final String DFA52_eotS =
            "\25\uffff";
        static final String DFA52_eofS =
            "\1\2\24\uffff";
        static final String DFA52_minS =
            "\1\31\1\0\23\uffff";
        static final String DFA52_maxS =
            "\1\u0080\1\0\23\uffff";
        static final String DFA52_acceptS =
            "\2\uffff\1\2\21\uffff\1\1";
        static final String DFA52_specialS =
            "\1\uffff\1\0\23\uffff}>";
        static final String[] DFA52_transitionS = {
                "\1\2\15\uffff\1\2\7\uffff\1\2\6\uffff\2\2\6\uffff\1\24\2\uffff"+
                "\1\2\1\uffff\1\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\1\uffff"+
                "\1\2\2\uffff\1\2\7\uffff\1\2\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
        static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
        static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
        static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
        static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
        static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
        static final short[][] DFA52_transition;
        static {
            int numStates = DFA52_transitionS.length;
            DFA52_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
            }
        }
    }
    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = DFA52_eot;
            this.eof = DFA52_eof;
            this.min = DFA52_min;
            this.max = DFA52_max;
            this.accept = DFA52_accept;
            this.special = DFA52_special;
            this.transition = DFA52_transition;
        }
        public String getDescription() {
            return "()* loopback of 2105:11: (b= importDeclaration )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_1 = input.LA(1);

                         
                        int index52_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred58_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 20;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index52_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA54_eotS = DFA54Data.DFA54_eotS;
    static final String DFA54_eofS = DFA54Data.DFA54_eofS;
    static final String DFA54_minS = DFA54Data.DFA54_minS;
    static final String DFA54_maxS = DFA54Data.DFA54_maxS;
    static final String DFA54_acceptS = DFA54Data.DFA54_acceptS;
    static final String DFA54_specialS = DFA54Data.DFA54_specialS;
    static final String[] DFA54_transitionS = DFA54Data.DFA54_transitionS;

    static final short[] DFA54_eot = DFA54Data.DFA54_eot;
    static final short[] DFA54_eof = DFA54Data.DFA54_eof;
    static final char[] DFA54_min = DFA54Data.DFA54_min;
    static final char[] DFA54_max = DFA54Data.DFA54_max;
    static final short[] DFA54_accept = DFA54Data.DFA54_accept;
    static final short[] DFA54_special = DFA54Data.DFA54_special;
    static final short[][] DFA54_transition = DFA54Data.DFA54_transition;


    static class DFA54Data {
        static final String DFA54_eotS =
            "\25\uffff";
        static final String DFA54_eofS =
            "\1\3\24\uffff";
        static final String DFA54_minS =
            "\1\31\1\0\23\uffff";
        static final String DFA54_maxS =
            "\1\u0080\1\0\23\uffff";
        static final String DFA54_acceptS =
            "\2\uffff\1\1\1\2\21\uffff";
        static final String DFA54_specialS =
            "\1\uffff\1\0\23\uffff}>";
        static final String[] DFA54_transitionS = {
                "\1\3\15\uffff\1\3\7\uffff\1\3\6\uffff\2\3\6\uffff\1\2\2\uffff"+
                "\1\3\1\uffff\1\3\1\uffff\3\3\2\uffff\2\3\1\uffff\1\3\1\uffff"+
                "\1\3\2\uffff\1\3\7\uffff\1\3\35\uffff\1\3\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA54_eot = DFA.unpackEncodedString(DFA54_eotS);
        static final short[] DFA54_eof = DFA.unpackEncodedString(DFA54_eofS);
        static final char[] DFA54_min = DFA.unpackEncodedStringToUnsignedChars(DFA54_minS);
        static final char[] DFA54_max = DFA.unpackEncodedStringToUnsignedChars(DFA54_maxS);
        static final short[] DFA54_accept = DFA.unpackEncodedString(DFA54_acceptS);
        static final short[] DFA54_special = DFA.unpackEncodedString(DFA54_specialS);
        static final short[][] DFA54_transition;
        static {
            int numStates = DFA54_transitionS.length;
            DFA54_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA54_transition[i] = DFA.unpackEncodedString(DFA54_transitionS[i]);
            }
        }
    }
    class DFA54 extends DFA {

        public DFA54(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 54;
            this.eot = DFA54_eot;
            this.eof = DFA54_eof;
            this.min = DFA54_min;
            this.max = DFA54_max;
            this.accept = DFA54_accept;
            this.special = DFA54_special;
            this.transition = DFA54_transition;
        }
        public String getDescription() {
            return "2126:1: optionalImportDeclarations returns [NodeUnion<? extends ImportListNode> ret] : ( ( importDeclarations ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA54_1 = input.LA(1);

                         
                        int index54_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred59_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred59_BsjAntlr())) ) {s = 2;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index54_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 54, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA58_eotS = DFA58Data.DFA58_eotS;
    static final String DFA58_eofS = DFA58Data.DFA58_eofS;
    static final String DFA58_minS = DFA58Data.DFA58_minS;
    static final String DFA58_maxS = DFA58Data.DFA58_maxS;
    static final String DFA58_acceptS = DFA58Data.DFA58_acceptS;
    static final String DFA58_specialS = DFA58Data.DFA58_specialS;
    static final String[] DFA58_transitionS = DFA58Data.DFA58_transitionS;

    static final short[] DFA58_eot = DFA58Data.DFA58_eot;
    static final short[] DFA58_eof = DFA58Data.DFA58_eof;
    static final char[] DFA58_min = DFA58Data.DFA58_min;
    static final char[] DFA58_max = DFA58Data.DFA58_max;
    static final short[] DFA58_accept = DFA58Data.DFA58_accept;
    static final short[] DFA58_special = DFA58Data.DFA58_special;
    static final short[][] DFA58_transition = DFA58Data.DFA58_transition;


    static class DFA58Data {
        static final String DFA58_eotS =
            "\24\uffff";
        static final String DFA58_eofS =
            "\24\uffff";
        static final String DFA58_minS =
            "\1\31\1\0\22\uffff";
        static final String DFA58_maxS =
            "\1\u0080\1\0\22\uffff";
        static final String DFA58_acceptS =
            "\2\uffff\1\2\20\uffff\1\1";
        static final String DFA58_specialS =
            "\1\uffff\1\0\22\uffff}>";
        static final String[] DFA58_transitionS = {
                "\1\2\15\uffff\1\2\7\uffff\1\2\6\uffff\2\2\11\uffff\1\2\1\uffff"+
                "\1\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff"+
                "\1\2\7\uffff\1\2\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA58_eot = DFA.unpackEncodedString(DFA58_eotS);
        static final short[] DFA58_eof = DFA.unpackEncodedString(DFA58_eofS);
        static final char[] DFA58_min = DFA.unpackEncodedStringToUnsignedChars(DFA58_minS);
        static final char[] DFA58_max = DFA.unpackEncodedStringToUnsignedChars(DFA58_maxS);
        static final short[] DFA58_accept = DFA.unpackEncodedString(DFA58_acceptS);
        static final short[] DFA58_special = DFA.unpackEncodedString(DFA58_specialS);
        static final short[][] DFA58_transition;
        static {
            int numStates = DFA58_transitionS.length;
            DFA58_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA58_transition[i] = DFA.unpackEncodedString(DFA58_transitionS[i]);
            }
        }
    }
    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = DFA58_eot;
            this.eof = DFA58_eof;
            this.min = DFA58_min;
            this.max = DFA58_max;
            this.accept = DFA58_accept;
            this.special = DFA58_special;
            this.transition = DFA58_transition;
        }
        public String getDescription() {
            return "2311:9: ( splice[TypeDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeDeclaration (b= typeDeclaration )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_1 = input.LA(1);

                         
                        int index58_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred64_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 19;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index58_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA60_eotS = DFA60Data.DFA60_eotS;
    static final String DFA60_eofS = DFA60Data.DFA60_eofS;
    static final String DFA60_minS = DFA60Data.DFA60_minS;
    static final String DFA60_maxS = DFA60Data.DFA60_maxS;
    static final String DFA60_acceptS = DFA60Data.DFA60_acceptS;
    static final String DFA60_specialS = DFA60Data.DFA60_specialS;
    static final String[] DFA60_transitionS = DFA60Data.DFA60_transitionS;

    static final short[] DFA60_eot = DFA60Data.DFA60_eot;
    static final short[] DFA60_eof = DFA60Data.DFA60_eof;
    static final char[] DFA60_min = DFA60Data.DFA60_min;
    static final char[] DFA60_max = DFA60Data.DFA60_max;
    static final short[] DFA60_accept = DFA60Data.DFA60_accept;
    static final short[] DFA60_special = DFA60Data.DFA60_special;
    static final short[][] DFA60_transition = DFA60Data.DFA60_transition;


    static class DFA60Data {
        static final String DFA60_eotS =
            "\24\uffff";
        static final String DFA60_eofS =
            "\24\uffff";
        static final String DFA60_minS =
            "\1\31\2\0\21\uffff";
        static final String DFA60_maxS =
            "\1\u0080\2\0\21\uffff";
        static final String DFA60_acceptS =
            "\3\uffff\1\2\15\uffff\1\3\1\4\1\1";
        static final String DFA60_specialS =
            "\1\0\1\1\1\2\21\uffff}>";
        static final String[] DFA60_transitionS = {
                "\1\22\15\uffff\1\3\7\uffff\1\3\6\uffff\2\3\11\uffff\1\3\1\uffff"+
                "\1\3\1\uffff\3\3\2\uffff\2\3\1\uffff\1\3\1\uffff\1\3\2\uffff"+
                "\1\3\7\uffff\1\21\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA60_eot = DFA.unpackEncodedString(DFA60_eotS);
        static final short[] DFA60_eof = DFA.unpackEncodedString(DFA60_eofS);
        static final char[] DFA60_min = DFA.unpackEncodedStringToUnsignedChars(DFA60_minS);
        static final char[] DFA60_max = DFA.unpackEncodedStringToUnsignedChars(DFA60_maxS);
        static final short[] DFA60_accept = DFA.unpackEncodedString(DFA60_acceptS);
        static final short[] DFA60_special = DFA.unpackEncodedString(DFA60_specialS);
        static final short[][] DFA60_transition;
        static {
            int numStates = DFA60_transitionS.length;
            DFA60_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA60_transition[i] = DFA.unpackEncodedString(DFA60_transitionS[i]);
            }
        }
    }
    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = DFA60_eot;
            this.eof = DFA60_eof;
            this.min = DFA60_min;
            this.max = DFA60_max;
            this.accept = DFA60_accept;
            this.special = DFA60_special;
            this.transition = DFA60_transition;
        }
        public String getDescription() {
            return "2379:1: typeDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( splice[TypeDeclarationNode.class, Arrays.<Class<? extends Node>>asList(ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | classOrInterfaceDeclaration | noOp | {...}? => typeDeclarationBsjMetaprogramAnchor );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_0 = input.LA(1);

                         
                        int index60_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA60_0==128) ) {s = 1;}

                        else if ( (LA60_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA60_0==ABSTRACT||LA60_0==CLASS||(LA60_0>=ENUM && LA60_0<=FINAL)||LA60_0==INTERFACE||LA60_0==NATIVE||(LA60_0>=PRIVATE && LA60_0<=PUBLIC)||(LA60_0>=STATIC && LA60_0<=STRICTFP)||LA60_0==SYNCHRONIZED||LA60_0==TRANSIENT||LA60_0==VOLATILE) ) {s = 3;}

                        else if ( (LA60_0==SEMI) ) {s = 17;}

                        else if ( (LA60_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 18;}

                         
                        input.seek(index60_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred67_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 19;}

                        else if ( ((((synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||((synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||((synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred68_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 3;}

                        else if ( (((synpred69_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred69_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred69_BsjAntlr())) ) {s = 17;}

                        else if ( (((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))) ) {s = 18;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred68_BsjAntlr()||(synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred68_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 3;}

                        else if ( (synpred69_BsjAntlr()) ) {s = 17;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA62_eotS = DFA62Data.DFA62_eotS;
    static final String DFA62_eofS = DFA62Data.DFA62_eofS;
    static final String DFA62_minS = DFA62Data.DFA62_minS;
    static final String DFA62_maxS = DFA62Data.DFA62_maxS;
    static final String DFA62_acceptS = DFA62Data.DFA62_acceptS;
    static final String DFA62_specialS = DFA62Data.DFA62_specialS;
    static final String[] DFA62_transitionS = DFA62Data.DFA62_transitionS;

    static final short[] DFA62_eot = DFA62Data.DFA62_eot;
    static final short[] DFA62_eof = DFA62Data.DFA62_eof;
    static final char[] DFA62_min = DFA62Data.DFA62_min;
    static final char[] DFA62_max = DFA62Data.DFA62_max;
    static final short[] DFA62_accept = DFA62Data.DFA62_accept;
    static final short[] DFA62_special = DFA62Data.DFA62_special;
    static final short[][] DFA62_transition = DFA62Data.DFA62_transition;


    static class DFA62Data {
        static final String DFA62_eotS =
            "\21\uffff";
        static final String DFA62_eofS =
            "\21\uffff";
        static final String DFA62_minS =
            "\1\47\15\0\3\uffff";
        static final String DFA62_maxS =
            "\1\u0080\15\0\3\uffff";
        static final String DFA62_acceptS =
            "\16\uffff\2\1\1\2";
        static final String DFA62_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\3"+
            "\uffff}>";
        static final String[] DFA62_transitionS = {
                "\1\6\7\uffff\1\16\6\uffff\1\17\1\7\11\uffff\1\20\1\uffff\1\10"+
                "\1\uffff\1\5\1\4\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff"+
                "\1\14\2\uffff\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                ""
        };
        static final short[] DFA62_eot = DFA.unpackEncodedString(DFA62_eotS);
        static final short[] DFA62_eof = DFA.unpackEncodedString(DFA62_eofS);
        static final char[] DFA62_min = DFA.unpackEncodedStringToUnsignedChars(DFA62_minS);
        static final char[] DFA62_max = DFA.unpackEncodedStringToUnsignedChars(DFA62_maxS);
        static final short[] DFA62_accept = DFA.unpackEncodedString(DFA62_acceptS);
        static final short[] DFA62_special = DFA.unpackEncodedString(DFA62_specialS);
        static final short[][] DFA62_transition;
        static {
            int numStates = DFA62_transitionS.length;
            DFA62_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA62_transition[i] = DFA.unpackEncodedString(DFA62_transitionS[i]);
            }
        }
    }
    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = DFA62_eot;
            this.eof = DFA62_eof;
            this.min = DFA62_min;
            this.max = DFA62_max;
            this.accept = DFA62_accept;
            this.special = DFA62_special;
            this.transition = DFA62_transition;
        }
        public String getDescription() {
            return "2432:1: classOrInterfaceDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( classHeader | enumHeader )=> classDeclaration | interfaceDeclaration );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_0 = input.LA(1);

                         
                        int index62_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA62_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA62_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA62_0==PUBLIC) ) {s = 3;}

                        else if ( (LA62_0==PROTECTED) ) {s = 4;}

                        else if ( (LA62_0==PRIVATE) ) {s = 5;}

                        else if ( (LA62_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA62_0==FINAL) ) {s = 7;}

                        else if ( (LA62_0==NATIVE) ) {s = 8;}

                        else if ( (LA62_0==STATIC) ) {s = 9;}

                        else if ( (LA62_0==STRICTFP) ) {s = 10;}

                        else if ( (LA62_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA62_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA62_0==VOLATILE) ) {s = 13;}

                        else if ( (LA62_0==CLASS) && (synpred72_BsjAntlr())) {s = 14;}

                        else if ( (LA62_0==ENUM) && (synpred72_BsjAntlr())) {s = 15;}

                        else if ( (LA62_0==INTERFACE) ) {s = 16;}

                         
                        input.seek(index62_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred72_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred72_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred72_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred72_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred72_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred72_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 15;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 16;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA62_2 = input.LA(1);

                         
                        int index62_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred72_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred72_BsjAntlr()||(synpred72_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA62_3 = input.LA(1);

                         
                        int index62_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA62_4 = input.LA(1);

                         
                        int index62_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA62_5 = input.LA(1);

                         
                        int index62_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA62_6 = input.LA(1);

                         
                        int index62_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA62_7 = input.LA(1);

                         
                        int index62_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA62_8 = input.LA(1);

                         
                        int index62_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA62_9 = input.LA(1);

                         
                        int index62_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA62_10 = input.LA(1);

                         
                        int index62_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA62_11 = input.LA(1);

                         
                        int index62_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA62_12 = input.LA(1);

                         
                        int index62_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA62_13 = input.LA(1);

                         
                        int index62_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_BsjAntlr()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index62_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA64_eotS = DFA64Data.DFA64_eotS;
    static final String DFA64_eofS = DFA64Data.DFA64_eofS;
    static final String DFA64_minS = DFA64Data.DFA64_minS;
    static final String DFA64_maxS = DFA64Data.DFA64_maxS;
    static final String DFA64_acceptS = DFA64Data.DFA64_acceptS;
    static final String DFA64_specialS = DFA64Data.DFA64_specialS;
    static final String[] DFA64_transitionS = DFA64Data.DFA64_transitionS;

    static final short[] DFA64_eot = DFA64Data.DFA64_eot;
    static final short[] DFA64_eof = DFA64Data.DFA64_eof;
    static final char[] DFA64_min = DFA64Data.DFA64_min;
    static final char[] DFA64_max = DFA64Data.DFA64_max;
    static final short[] DFA64_accept = DFA64Data.DFA64_accept;
    static final short[] DFA64_special = DFA64Data.DFA64_special;
    static final short[][] DFA64_transition = DFA64Data.DFA64_transition;


    static class DFA64Data {
        static final String DFA64_eotS =
            "\40\uffff";
        static final String DFA64_eofS =
            "\1\1\37\uffff";
        static final String DFA64_minS =
            "\1\24\1\uffff\1\0\12\uffff\1\0\22\uffff";
        static final String DFA64_maxS =
            "\1\u0080\1\uffff\1\0\12\uffff\1\0\22\uffff";
        static final String DFA64_acceptS =
            "\1\uffff\1\14\21\uffff\1\3\2\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
            "\1\13\1\1\1\2";
        static final String DFA64_specialS =
            "\2\uffff\1\0\12\uffff\1\1\22\uffff}>";
        static final String[] DFA64_transitionS = {
                "\1\1\22\uffff\1\26\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff"+
                "\1\1\1\uffff\1\1\1\27\1\uffff\1\1\6\uffff\3\1\1\30\1\1\3\23"+
                "\1\uffff\1\1\1\31\1\32\1\uffff\1\33\1\uffff\1\34\1\uffff\1\1"+
                "\1\35\45\uffff\1\15\2\uffff\1\1\4\uffff\1\2",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA64_eot = DFA.unpackEncodedString(DFA64_eotS);
        static final short[] DFA64_eof = DFA.unpackEncodedString(DFA64_eofS);
        static final char[] DFA64_min = DFA.unpackEncodedStringToUnsignedChars(DFA64_minS);
        static final char[] DFA64_max = DFA.unpackEncodedStringToUnsignedChars(DFA64_maxS);
        static final short[] DFA64_accept = DFA.unpackEncodedString(DFA64_acceptS);
        static final short[] DFA64_special = DFA.unpackEncodedString(DFA64_specialS);
        static final short[][] DFA64_transition;
        static {
            int numStates = DFA64_transitionS.length;
            DFA64_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA64_transition[i] = DFA.unpackEncodedString(DFA64_transitionS[i]);
            }
        }
    }
    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = DFA64_eot;
            this.eof = DFA64_eof;
            this.min = DFA64_min;
            this.max = DFA64_max;
            this.accept = DFA64_accept;
            this.special = DFA64_special;
            this.transition = DFA64_transition;
        }
        public String getDescription() {
            return "()* loopback of 2476:9: ( metaAnnotation | annotation | ( 'public' | 'protected' | 'private' ) | 'abstract' | 'final' | 'native' | 'static' | 'strictfp' | 'synchronized' | 'transient' | 'volatile' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_2 = input.LA(1);

                         
                        int index64_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred73_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))) ) {s = 30;}

                        else if ( ((synpred74_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 31;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index64_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA64_13 = input.LA(1);

                         
                        int index64_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred73_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))) ) {s = 30;}

                        else if ( (synpred74_BsjAntlr()) ) {s = 31;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index64_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA65_eotS = DFA65Data.DFA65_eotS;
    static final String DFA65_eofS = DFA65Data.DFA65_eofS;
    static final String DFA65_minS = DFA65Data.DFA65_minS;
    static final String DFA65_maxS = DFA65Data.DFA65_maxS;
    static final String DFA65_acceptS = DFA65Data.DFA65_acceptS;
    static final String DFA65_specialS = DFA65Data.DFA65_specialS;
    static final String[] DFA65_transitionS = DFA65Data.DFA65_transitionS;

    static final short[] DFA65_eot = DFA65Data.DFA65_eot;
    static final short[] DFA65_eof = DFA65Data.DFA65_eof;
    static final char[] DFA65_min = DFA65Data.DFA65_min;
    static final char[] DFA65_max = DFA65Data.DFA65_max;
    static final short[] DFA65_accept = DFA65Data.DFA65_accept;
    static final short[] DFA65_special = DFA65Data.DFA65_special;
    static final short[][] DFA65_transition = DFA65Data.DFA65_transition;


    static class DFA65Data {
        static final String DFA65_eotS =
            "\20\uffff";
        static final String DFA65_eofS =
            "\20\uffff";
        static final String DFA65_minS =
            "\1\47\15\0\2\uffff";
        static final String DFA65_maxS =
            "\1\u0080\15\0\2\uffff";
        static final String DFA65_acceptS =
            "\16\uffff\1\1\1\2";
        static final String DFA65_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2"+
            "\uffff}>";
        static final String[] DFA65_transitionS = {
                "\1\6\7\uffff\1\16\6\uffff\1\17\1\7\13\uffff\1\10\1\uffff\1\5"+
                "\1\4\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff\1\14\2\uffff"+
                "\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                ""
        };
        static final short[] DFA65_eot = DFA.unpackEncodedString(DFA65_eotS);
        static final short[] DFA65_eof = DFA.unpackEncodedString(DFA65_eofS);
        static final char[] DFA65_min = DFA.unpackEncodedStringToUnsignedChars(DFA65_minS);
        static final char[] DFA65_max = DFA.unpackEncodedStringToUnsignedChars(DFA65_maxS);
        static final short[] DFA65_accept = DFA.unpackEncodedString(DFA65_acceptS);
        static final short[] DFA65_special = DFA.unpackEncodedString(DFA65_specialS);
        static final short[][] DFA65_transition;
        static {
            int numStates = DFA65_transitionS.length;
            DFA65_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA65_transition[i] = DFA.unpackEncodedString(DFA65_transitionS[i]);
            }
        }
    }
    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = DFA65_eot;
            this.eof = DFA65_eof;
            this.min = DFA65_min;
            this.max = DFA65_max;
            this.accept = DFA65_accept;
            this.special = DFA65_special;
            this.transition = DFA65_transition;
        }
        public String getDescription() {
            return "2832:1: classDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( classHeader )=> normalClassDeclaration | enumDeclaration );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA65_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA65_0==PUBLIC) ) {s = 3;}

                        else if ( (LA65_0==PROTECTED) ) {s = 4;}

                        else if ( (LA65_0==PRIVATE) ) {s = 5;}

                        else if ( (LA65_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA65_0==FINAL) ) {s = 7;}

                        else if ( (LA65_0==NATIVE) ) {s = 8;}

                        else if ( (LA65_0==STATIC) ) {s = 9;}

                        else if ( (LA65_0==STRICTFP) ) {s = 10;}

                        else if ( (LA65_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA65_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA65_0==VOLATILE) ) {s = 13;}

                        else if ( (LA65_0==CLASS) && (synpred86_BsjAntlr())) {s = 14;}

                        else if ( (LA65_0==ENUM) ) {s = 15;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_1 = input.LA(1);

                         
                        int index65_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred86_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred86_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred86_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 15;}

                         
                        input.seek(index65_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA65_2 = input.LA(1);

                         
                        int index65_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred86_BsjAntlr()||(synpred86_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA65_3 = input.LA(1);

                         
                        int index65_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA65_4 = input.LA(1);

                         
                        int index65_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA65_5 = input.LA(1);

                         
                        int index65_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA65_6 = input.LA(1);

                         
                        int index65_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA65_7 = input.LA(1);

                         
                        int index65_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA65_8 = input.LA(1);

                         
                        int index65_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA65_9 = input.LA(1);

                         
                        int index65_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA65_10 = input.LA(1);

                         
                        int index65_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA65_11 = input.LA(1);

                         
                        int index65_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA65_12 = input.LA(1);

                         
                        int index65_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA68_eotS = DFA68Data.DFA68_eotS;
    static final String DFA68_eofS = DFA68Data.DFA68_eofS;
    static final String DFA68_minS = DFA68Data.DFA68_minS;
    static final String DFA68_maxS = DFA68Data.DFA68_maxS;
    static final String DFA68_acceptS = DFA68Data.DFA68_acceptS;
    static final String DFA68_specialS = DFA68Data.DFA68_specialS;
    static final String[] DFA68_transitionS = DFA68Data.DFA68_transitionS;

    static final short[] DFA68_eot = DFA68Data.DFA68_eot;
    static final short[] DFA68_eof = DFA68Data.DFA68_eof;
    static final char[] DFA68_min = DFA68Data.DFA68_min;
    static final char[] DFA68_max = DFA68Data.DFA68_max;
    static final short[] DFA68_accept = DFA68Data.DFA68_accept;
    static final short[] DFA68_special = DFA68Data.DFA68_special;
    static final short[][] DFA68_transition = DFA68Data.DFA68_transition;


    static class DFA68Data {
        static final String DFA68_eotS =
            "\20\uffff";
        static final String DFA68_eofS =
            "\20\uffff";
        static final String DFA68_minS =
            "\1\47\1\0\16\uffff";
        static final String DFA68_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA68_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA68_specialS =
            "\1\0\1\1\16\uffff}>";
        static final String[] DFA68_transitionS = {
                "\1\2\7\uffff\1\2\7\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA68_eot = DFA.unpackEncodedString(DFA68_eotS);
        static final short[] DFA68_eof = DFA.unpackEncodedString(DFA68_eofS);
        static final char[] DFA68_min = DFA.unpackEncodedStringToUnsignedChars(DFA68_minS);
        static final char[] DFA68_max = DFA.unpackEncodedStringToUnsignedChars(DFA68_maxS);
        static final short[] DFA68_accept = DFA.unpackEncodedString(DFA68_acceptS);
        static final short[] DFA68_special = DFA.unpackEncodedString(DFA68_specialS);
        static final short[][] DFA68_transition;
        static {
            int numStates = DFA68_transitionS.length;
            DFA68_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA68_transition[i] = DFA.unpackEncodedString(DFA68_transitionS[i]);
            }
        }
    }
    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = DFA68_eot;
            this.eof = DFA68_eof;
            this.min = DFA68_min;
            this.max = DFA68_max;
            this.accept = DFA68_accept;
            this.special = DFA68_special;
            this.transition = DFA68_transition;
        }
        public String getDescription() {
            return "2852:1: normalClassDeclaration returns [NodeUnion<? extends ClassDeclarationNode> ret] : ( splice[ClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc classModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_0 = input.LA(1);

                         
                        int index68_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA68_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA68_0==ABSTRACT||LA68_0==CLASS||LA68_0==FINAL||LA68_0==NATIVE||(LA68_0>=PRIVATE && LA68_0<=PUBLIC)||(LA68_0>=STATIC && LA68_0<=STRICTFP)||LA68_0==SYNCHRONIZED||LA68_0==TRANSIENT||LA68_0==VOLATILE||LA68_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index68_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred87_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported()))) ) {s = 2;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA71_eotS = DFA71Data.DFA71_eotS;
    static final String DFA71_eofS = DFA71Data.DFA71_eofS;
    static final String DFA71_minS = DFA71Data.DFA71_minS;
    static final String DFA71_maxS = DFA71Data.DFA71_maxS;
    static final String DFA71_acceptS = DFA71Data.DFA71_acceptS;
    static final String DFA71_specialS = DFA71Data.DFA71_specialS;
    static final String[] DFA71_transitionS = DFA71Data.DFA71_transitionS;

    static final short[] DFA71_eot = DFA71Data.DFA71_eot;
    static final short[] DFA71_eof = DFA71Data.DFA71_eof;
    static final char[] DFA71_min = DFA71Data.DFA71_min;
    static final char[] DFA71_max = DFA71Data.DFA71_max;
    static final short[] DFA71_accept = DFA71Data.DFA71_accept;
    static final short[] DFA71_special = DFA71Data.DFA71_special;
    static final short[][] DFA71_transition = DFA71Data.DFA71_transition;


    static class DFA71Data {
        static final String DFA71_eotS =
            "\20\uffff";
        static final String DFA71_eofS =
            "\20\uffff";
        static final String DFA71_minS =
            "\1\47\1\0\16\uffff";
        static final String DFA71_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA71_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA71_specialS =
            "\1\0\1\1\16\uffff}>";
        static final String[] DFA71_transitionS = {
                "\1\2\7\uffff\1\2\7\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
        static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
        static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
        static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
        static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
        static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
        static final short[][] DFA71_transition;
        static {
            int numStates = DFA71_transitionS.length;
            DFA71_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
            }
        }
    }
    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = DFA71_eot;
            this.eof = DFA71_eof;
            this.min = DFA71_min;
            this.max = DFA71_max;
            this.accept = DFA71_accept;
            this.special = DFA71_special;
            this.transition = DFA71_transition;
        }
        public String getDescription() {
            return "2892:1: localClassDeclaration returns [NodeUnion<? extends LocalClassDeclarationNode> ret] : ( splice[LocalClassDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc localClassModifiers 'class' id= identifier optionalTypeParameters ( 'extends' classOrInterfaceType )? ( 'implements' declaredTypeList )? classBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA71_0==ABSTRACT||LA71_0==CLASS||LA71_0==FINAL||LA71_0==NATIVE||(LA71_0>=PRIVATE && LA71_0<=PUBLIC)||(LA71_0>=STATIC && LA71_0<=STRICTFP)||LA71_0==SYNCHRONIZED||LA71_0==TRANSIENT||LA71_0==VOLATILE||LA71_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred90_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA81_eotS = DFA81Data.DFA81_eotS;
    static final String DFA81_eofS = DFA81Data.DFA81_eofS;
    static final String DFA81_minS = DFA81Data.DFA81_minS;
    static final String DFA81_maxS = DFA81Data.DFA81_maxS;
    static final String DFA81_acceptS = DFA81Data.DFA81_acceptS;
    static final String DFA81_specialS = DFA81Data.DFA81_specialS;
    static final String[] DFA81_transitionS = DFA81Data.DFA81_transitionS;

    static final short[] DFA81_eot = DFA81Data.DFA81_eot;
    static final short[] DFA81_eof = DFA81Data.DFA81_eof;
    static final char[] DFA81_min = DFA81Data.DFA81_min;
    static final char[] DFA81_max = DFA81Data.DFA81_max;
    static final short[] DFA81_accept = DFA81Data.DFA81_accept;
    static final short[] DFA81_special = DFA81Data.DFA81_special;
    static final short[][] DFA81_transition = DFA81Data.DFA81_transition;


    static class DFA81Data {
        static final String DFA81_eotS =
            "\20\uffff";
        static final String DFA81_eofS =
            "\20\uffff";
        static final String DFA81_minS =
            "\1\47\1\0\16\uffff";
        static final String DFA81_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA81_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA81_specialS =
            "\1\0\1\1\16\uffff}>";
        static final String[] DFA81_transitionS = {
                "\1\2\16\uffff\2\2\13\uffff\1\2\1\uffff\3\2\2\uffff\2\2\1\uffff"+
                "\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA81_eot = DFA.unpackEncodedString(DFA81_eotS);
        static final short[] DFA81_eof = DFA.unpackEncodedString(DFA81_eofS);
        static final char[] DFA81_min = DFA.unpackEncodedStringToUnsignedChars(DFA81_minS);
        static final char[] DFA81_max = DFA.unpackEncodedStringToUnsignedChars(DFA81_maxS);
        static final short[] DFA81_accept = DFA.unpackEncodedString(DFA81_acceptS);
        static final short[] DFA81_special = DFA.unpackEncodedString(DFA81_specialS);
        static final short[][] DFA81_transition;
        static {
            int numStates = DFA81_transitionS.length;
            DFA81_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA81_transition[i] = DFA.unpackEncodedString(DFA81_transitionS[i]);
            }
        }
    }
    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = DFA81_eot;
            this.eof = DFA81_eof;
            this.min = DFA81_min;
            this.max = DFA81_max;
            this.accept = DFA81_accept;
            this.special = DFA81_special;
            this.transition = DFA81_transition;
        }
        public String getDescription() {
            return "3121:1: enumDeclaration returns [NodeUnion<? extends EnumDeclarationNode> ret] : ( splice[EnumDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumModifiers 'enum' id= identifier ( 'implements' declaredTypeList )? enumBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_0 = input.LA(1);

                         
                        int index81_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA81_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA81_0==ABSTRACT||(LA81_0>=ENUM && LA81_0<=FINAL)||LA81_0==NATIVE||(LA81_0>=PRIVATE && LA81_0<=PUBLIC)||(LA81_0>=STATIC && LA81_0<=STRICTFP)||LA81_0==SYNCHRONIZED||LA81_0==TRANSIENT||LA81_0==VOLATILE||LA81_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index81_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred101_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA86_eotS = DFA86Data.DFA86_eotS;
    static final String DFA86_eofS = DFA86Data.DFA86_eofS;
    static final String DFA86_minS = DFA86Data.DFA86_minS;
    static final String DFA86_maxS = DFA86Data.DFA86_maxS;
    static final String DFA86_acceptS = DFA86Data.DFA86_acceptS;
    static final String DFA86_specialS = DFA86Data.DFA86_specialS;
    static final String[] DFA86_transitionS = DFA86Data.DFA86_transitionS;

    static final short[] DFA86_eot = DFA86Data.DFA86_eot;
    static final short[] DFA86_eof = DFA86Data.DFA86_eof;
    static final char[] DFA86_min = DFA86Data.DFA86_min;
    static final char[] DFA86_max = DFA86Data.DFA86_max;
    static final short[] DFA86_accept = DFA86Data.DFA86_accept;
    static final short[] DFA86_special = DFA86Data.DFA86_special;
    static final short[][] DFA86_transition = DFA86Data.DFA86_transition;


    static class DFA86Data {
        static final String DFA86_eotS =
            "\20\uffff";
        static final String DFA86_eofS =
            "\20\uffff";
        static final String DFA86_minS =
            "\1\24\1\0\16\uffff";
        static final String DFA86_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA86_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA86_specialS =
            "\1\uffff\1\0\16\uffff}>";
        static final String[] DFA86_transitionS = {
                "\1\2\22\uffff\1\2\17\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA86_eot = DFA.unpackEncodedString(DFA86_eotS);
        static final short[] DFA86_eof = DFA.unpackEncodedString(DFA86_eofS);
        static final char[] DFA86_min = DFA.unpackEncodedStringToUnsignedChars(DFA86_minS);
        static final char[] DFA86_max = DFA.unpackEncodedStringToUnsignedChars(DFA86_maxS);
        static final short[] DFA86_accept = DFA.unpackEncodedString(DFA86_acceptS);
        static final short[] DFA86_special = DFA.unpackEncodedString(DFA86_specialS);
        static final short[][] DFA86_transition;
        static {
            int numStates = DFA86_transitionS.length;
            DFA86_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA86_transition[i] = DFA.unpackEncodedString(DFA86_transitionS[i]);
            }
        }
    }
    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = DFA86_eot;
            this.eof = DFA86_eof;
            this.min = DFA86_min;
            this.max = DFA86_max;
            this.accept = DFA86_accept;
            this.special = DFA86_special;
            this.transition = DFA86_transition;
        }
        public String getDescription() {
            return "3201:9: ( splice[EnumConstantDeclarationListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= enumConstant ( ',' b= enumConstant )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_1 = input.LA(1);

                         
                        int index86_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred106_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index86_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA90_eotS = DFA90Data.DFA90_eotS;
    static final String DFA90_eofS = DFA90Data.DFA90_eofS;
    static final String DFA90_minS = DFA90Data.DFA90_minS;
    static final String DFA90_maxS = DFA90Data.DFA90_maxS;
    static final String DFA90_acceptS = DFA90Data.DFA90_acceptS;
    static final String DFA90_specialS = DFA90Data.DFA90_specialS;
    static final String[] DFA90_transitionS = DFA90Data.DFA90_transitionS;

    static final short[] DFA90_eot = DFA90Data.DFA90_eot;
    static final short[] DFA90_eof = DFA90Data.DFA90_eof;
    static final char[] DFA90_min = DFA90Data.DFA90_min;
    static final char[] DFA90_max = DFA90Data.DFA90_max;
    static final short[] DFA90_accept = DFA90Data.DFA90_accept;
    static final short[] DFA90_special = DFA90Data.DFA90_special;
    static final short[][] DFA90_transition = DFA90Data.DFA90_transition;


    static class DFA90Data {
        static final String DFA90_eotS =
            "\20\uffff";
        static final String DFA90_eofS =
            "\20\uffff";
        static final String DFA90_minS =
            "\1\24\1\0\16\uffff";
        static final String DFA90_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA90_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA90_specialS =
            "\1\uffff\1\0\16\uffff}>";
        static final String[] DFA90_transitionS = {
                "\1\2\22\uffff\1\2\17\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA90_eot = DFA.unpackEncodedString(DFA90_eotS);
        static final short[] DFA90_eof = DFA.unpackEncodedString(DFA90_eofS);
        static final char[] DFA90_min = DFA.unpackEncodedStringToUnsignedChars(DFA90_minS);
        static final char[] DFA90_max = DFA.unpackEncodedStringToUnsignedChars(DFA90_maxS);
        static final short[] DFA90_accept = DFA.unpackEncodedString(DFA90_acceptS);
        static final short[] DFA90_special = DFA.unpackEncodedString(DFA90_specialS);
        static final short[][] DFA90_transition;
        static {
            int numStates = DFA90_transitionS.length;
            DFA90_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA90_transition[i] = DFA.unpackEncodedString(DFA90_transitionS[i]);
            }
        }
    }
    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = DFA90_eot;
            this.eof = DFA90_eof;
            this.min = DFA90_min;
            this.max = DFA90_max;
            this.accept = DFA90_accept;
            this.special = DFA90_special;
            this.transition = DFA90_transition;
        }
        public String getDescription() {
            return "3270:1: enumConstant returns [NodeUnion<? extends EnumConstantDeclarationNode> ret] : ( splice[EnumConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc enumConstantModifiers id= identifier ( arguments )? ( anonymousClassBody )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_1 = input.LA(1);

                         
                        int index90_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred109_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index90_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA91_eotS = DFA91Data.DFA91_eotS;
    static final String DFA91_eofS = DFA91Data.DFA91_eofS;
    static final String DFA91_minS = DFA91Data.DFA91_minS;
    static final String DFA91_maxS = DFA91Data.DFA91_maxS;
    static final String DFA91_acceptS = DFA91Data.DFA91_acceptS;
    static final String DFA91_specialS = DFA91Data.DFA91_specialS;
    static final String[] DFA91_transitionS = DFA91Data.DFA91_transitionS;

    static final short[] DFA91_eot = DFA91Data.DFA91_eot;
    static final short[] DFA91_eof = DFA91Data.DFA91_eof;
    static final char[] DFA91_min = DFA91Data.DFA91_min;
    static final char[] DFA91_max = DFA91Data.DFA91_max;
    static final short[] DFA91_accept = DFA91Data.DFA91_accept;
    static final short[] DFA91_special = DFA91Data.DFA91_special;
    static final short[][] DFA91_transition = DFA91Data.DFA91_transition;


    static class DFA91Data {
        static final String DFA91_eotS =
            "\20\uffff";
        static final String DFA91_eofS =
            "\20\uffff";
        static final String DFA91_minS =
            "\1\47\15\0\2\uffff";
        static final String DFA91_maxS =
            "\1\u0080\15\0\2\uffff";
        static final String DFA91_acceptS =
            "\16\uffff\1\1\1\2";
        static final String DFA91_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2"+
            "\uffff}>";
        static final String[] DFA91_transitionS = {
                "\1\6\17\uffff\1\7\11\uffff\1\16\1\uffff\1\10\1\uffff\1\5\1\4"+
                "\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff\1\14\2\uffff\1\15"+
                "\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                ""
        };
        static final short[] DFA91_eot = DFA.unpackEncodedString(DFA91_eotS);
        static final short[] DFA91_eof = DFA.unpackEncodedString(DFA91_eofS);
        static final char[] DFA91_min = DFA.unpackEncodedStringToUnsignedChars(DFA91_minS);
        static final char[] DFA91_max = DFA.unpackEncodedStringToUnsignedChars(DFA91_maxS);
        static final short[] DFA91_accept = DFA.unpackEncodedString(DFA91_acceptS);
        static final short[] DFA91_special = DFA.unpackEncodedString(DFA91_specialS);
        static final short[][] DFA91_transition;
        static {
            int numStates = DFA91_transitionS.length;
            DFA91_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA91_transition[i] = DFA.unpackEncodedString(DFA91_transitionS[i]);
            }
        }
    }
    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = DFA91_eot;
            this.eof = DFA91_eof;
            this.min = DFA91_min;
            this.max = DFA91_max;
            this.accept = DFA91_accept;
            this.special = DFA91_special;
            this.transition = DFA91_transition;
        }
        public String getDescription() {
            return "3333:1: interfaceDeclaration returns [NodeUnion<? extends TypeDeclarationNode> ret] : ( ( interfaceHeader )=>a= normalInterfaceDeclaration | b= annotationTypeDeclaration );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_0 = input.LA(1);

                         
                        int index91_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA91_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA91_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA91_0==PUBLIC) ) {s = 3;}

                        else if ( (LA91_0==PROTECTED) ) {s = 4;}

                        else if ( (LA91_0==PRIVATE) ) {s = 5;}

                        else if ( (LA91_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA91_0==FINAL) ) {s = 7;}

                        else if ( (LA91_0==NATIVE) ) {s = 8;}

                        else if ( (LA91_0==STATIC) ) {s = 9;}

                        else if ( (LA91_0==STRICTFP) ) {s = 10;}

                        else if ( (LA91_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA91_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA91_0==VOLATILE) ) {s = 13;}

                        else if ( (LA91_0==INTERFACE) && (synpred112_BsjAntlr())) {s = 14;}

                         
                        input.seek(index91_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA91_1 = input.LA(1);

                         
                        int index91_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred112_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred112_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred112_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 15;}

                         
                        input.seek(index91_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA91_2 = input.LA(1);

                         
                        int index91_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred112_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred112_BsjAntlr())) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA91_3 = input.LA(1);

                         
                        int index91_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA91_4 = input.LA(1);

                         
                        int index91_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA91_5 = input.LA(1);

                         
                        int index91_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA91_6 = input.LA(1);

                         
                        int index91_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA91_7 = input.LA(1);

                         
                        int index91_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA91_8 = input.LA(1);

                         
                        int index91_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA91_9 = input.LA(1);

                         
                        int index91_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA91_10 = input.LA(1);

                         
                        int index91_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA91_11 = input.LA(1);

                         
                        int index91_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA91_12 = input.LA(1);

                         
                        int index91_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA91_13 = input.LA(1);

                         
                        int index91_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index91_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA93_eotS = DFA93Data.DFA93_eotS;
    static final String DFA93_eofS = DFA93Data.DFA93_eofS;
    static final String DFA93_minS = DFA93Data.DFA93_minS;
    static final String DFA93_maxS = DFA93Data.DFA93_maxS;
    static final String DFA93_acceptS = DFA93Data.DFA93_acceptS;
    static final String DFA93_specialS = DFA93Data.DFA93_specialS;
    static final String[] DFA93_transitionS = DFA93Data.DFA93_transitionS;

    static final short[] DFA93_eot = DFA93Data.DFA93_eot;
    static final short[] DFA93_eof = DFA93Data.DFA93_eof;
    static final char[] DFA93_min = DFA93Data.DFA93_min;
    static final char[] DFA93_max = DFA93Data.DFA93_max;
    static final short[] DFA93_accept = DFA93Data.DFA93_accept;
    static final short[] DFA93_special = DFA93Data.DFA93_special;
    static final short[][] DFA93_transition = DFA93Data.DFA93_transition;


    static class DFA93Data {
        static final String DFA93_eotS =
            "\20\uffff";
        static final String DFA93_eofS =
            "\20\uffff";
        static final String DFA93_minS =
            "\1\47\1\0\16\uffff";
        static final String DFA93_maxS =
            "\1\u0080\1\0\16\uffff";
        static final String DFA93_acceptS =
            "\2\uffff\1\2\14\uffff\1\1";
        static final String DFA93_specialS =
            "\1\0\1\1\16\uffff}>";
        static final String[] DFA93_transitionS = {
                "\1\2\17\uffff\1\2\11\uffff\1\2\1\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
        static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
        static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
        static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
        static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
        static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
        static final short[][] DFA93_transition;
        static {
            int numStates = DFA93_transitionS.length;
            DFA93_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
            }
        }
    }
    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = DFA93_eot;
            this.eof = DFA93_eof;
            this.min = DFA93_min;
            this.max = DFA93_max;
            this.accept = DFA93_accept;
            this.special = DFA93_special;
            this.transition = DFA93_transition;
        }
        public String getDescription() {
            return "3353:1: normalInterfaceDeclaration returns [NodeUnion<? extends InterfaceDeclarationNode> ret] : ( splice[InterfaceDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc interfaceModifiers 'interface' id= identifier optionalTypeParameters ( 'extends' declaredTypeList )? interfaceBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_0 = input.LA(1);

                         
                        int index93_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA93_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA93_0==ABSTRACT||LA93_0==FINAL||LA93_0==INTERFACE||LA93_0==NATIVE||(LA93_0>=PRIVATE && LA93_0<=PUBLIC)||(LA93_0>=STATIC && LA93_0<=STRICTFP)||LA93_0==SYNCHRONIZED||LA93_0==TRANSIENT||LA93_0==VOLATILE||LA93_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index93_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred113_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA98_eotS = DFA98Data.DFA98_eotS;
    static final String DFA98_eofS = DFA98Data.DFA98_eofS;
    static final String DFA98_minS = DFA98Data.DFA98_minS;
    static final String DFA98_maxS = DFA98Data.DFA98_maxS;
    static final String DFA98_acceptS = DFA98Data.DFA98_acceptS;
    static final String DFA98_specialS = DFA98Data.DFA98_specialS;
    static final String[] DFA98_transitionS = DFA98Data.DFA98_transitionS;

    static final short[] DFA98_eot = DFA98Data.DFA98_eot;
    static final short[] DFA98_eof = DFA98Data.DFA98_eof;
    static final char[] DFA98_min = DFA98Data.DFA98_min;
    static final char[] DFA98_max = DFA98Data.DFA98_max;
    static final short[] DFA98_accept = DFA98Data.DFA98_accept;
    static final short[] DFA98_special = DFA98Data.DFA98_special;
    static final short[][] DFA98_transition = DFA98Data.DFA98_transition;


    static class DFA98Data {
        static final String DFA98_eotS =
            "\14\uffff";
        static final String DFA98_eofS =
            "\14\uffff";
        static final String DFA98_minS =
            "\1\24\1\0\12\uffff";
        static final String DFA98_maxS =
            "\1\u0080\1\0\12\uffff";
        static final String DFA98_acceptS =
            "\2\uffff\1\2\10\uffff\1\1";
        static final String DFA98_specialS =
            "\1\uffff\1\0\12\uffff}>";
        static final String[] DFA98_transitionS = {
                "\1\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff\1\2\4\uffff"+
                "\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\66\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA98_eot = DFA.unpackEncodedString(DFA98_eotS);
        static final short[] DFA98_eof = DFA.unpackEncodedString(DFA98_eofS);
        static final char[] DFA98_min = DFA.unpackEncodedStringToUnsignedChars(DFA98_minS);
        static final char[] DFA98_max = DFA.unpackEncodedStringToUnsignedChars(DFA98_maxS);
        static final short[] DFA98_accept = DFA.unpackEncodedString(DFA98_acceptS);
        static final short[] DFA98_special = DFA.unpackEncodedString(DFA98_specialS);
        static final short[][] DFA98_transition;
        static {
            int numStates = DFA98_transitionS.length;
            DFA98_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA98_transition[i] = DFA.unpackEncodedString(DFA98_transitionS[i]);
            }
        }
    }
    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = DFA98_eot;
            this.eof = DFA98_eof;
            this.min = DFA98_min;
            this.max = DFA98_max;
            this.accept = DFA98_accept;
            this.special = DFA98_special;
            this.transition = DFA98_transition;
        }
        public String getDescription() {
            return "3480:9: ( splice[ReferenceTypeListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= referenceType ( ',' b= referenceType )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_1 = input.LA(1);

                         
                        int index98_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred118_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 11;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index98_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA106_eotS = DFA106Data.DFA106_eotS;
    static final String DFA106_eofS = DFA106Data.DFA106_eofS;
    static final String DFA106_minS = DFA106Data.DFA106_minS;
    static final String DFA106_maxS = DFA106Data.DFA106_maxS;
    static final String DFA106_acceptS = DFA106Data.DFA106_acceptS;
    static final String DFA106_specialS = DFA106Data.DFA106_specialS;
    static final String[] DFA106_transitionS = DFA106Data.DFA106_transitionS;

    static final short[] DFA106_eot = DFA106Data.DFA106_eot;
    static final short[] DFA106_eof = DFA106Data.DFA106_eof;
    static final char[] DFA106_min = DFA106Data.DFA106_min;
    static final char[] DFA106_max = DFA106Data.DFA106_max;
    static final short[] DFA106_accept = DFA106Data.DFA106_accept;
    static final short[] DFA106_special = DFA106Data.DFA106_special;
    static final short[][] DFA106_transition = DFA106Data.DFA106_transition;


    static class DFA106Data {
        static final String DFA106_eotS =
            "\40\uffff";
        static final String DFA106_eofS =
            "\40\uffff";
        static final String DFA106_minS =
            "\1\24\1\0\36\uffff";
        static final String DFA106_maxS =
            "\1\u0080\1\0\36\uffff";
        static final String DFA106_acceptS =
            "\2\uffff\1\2\34\uffff\1\1";
        static final String DFA106_specialS =
            "\1\uffff\1\0\36\uffff}>";
        static final String[] DFA106_transitionS = {
                "\1\2\4\uffff\1\2\15\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff"+
                "\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\6\uffff\4\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff"+
                "\1\2\3\uffff\1\2\35\uffff\1\2\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA106_eot = DFA.unpackEncodedString(DFA106_eotS);
        static final short[] DFA106_eof = DFA.unpackEncodedString(DFA106_eofS);
        static final char[] DFA106_min = DFA.unpackEncodedStringToUnsignedChars(DFA106_minS);
        static final char[] DFA106_max = DFA.unpackEncodedStringToUnsignedChars(DFA106_maxS);
        static final short[] DFA106_accept = DFA.unpackEncodedString(DFA106_acceptS);
        static final short[] DFA106_special = DFA.unpackEncodedString(DFA106_specialS);
        static final short[][] DFA106_transition;
        static {
            int numStates = DFA106_transitionS.length;
            DFA106_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA106_transition[i] = DFA.unpackEncodedString(DFA106_transitionS[i]);
            }
        }
    }
    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = DFA106_eot;
            this.eof = DFA106_eof;
            this.min = DFA106_min;
            this.max = DFA106_max;
            this.accept = DFA106_accept;
            this.special = DFA106_special;
            this.transition = DFA106_transition;
        }
        public String getDescription() {
            return "3654:9: ( splice[ClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= classBodyDeclaration (b= classBodyDeclaration )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_1 = input.LA(1);

                         
                        int index106_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred126_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 31;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index106_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA108_eotS = DFA108Data.DFA108_eotS;
    static final String DFA108_eofS = DFA108Data.DFA108_eofS;
    static final String DFA108_minS = DFA108Data.DFA108_minS;
    static final String DFA108_maxS = DFA108Data.DFA108_maxS;
    static final String DFA108_acceptS = DFA108Data.DFA108_acceptS;
    static final String DFA108_specialS = DFA108Data.DFA108_specialS;
    static final String[] DFA108_transitionS = DFA108Data.DFA108_transitionS;

    static final short[] DFA108_eot = DFA108Data.DFA108_eot;
    static final short[] DFA108_eof = DFA108Data.DFA108_eof;
    static final char[] DFA108_min = DFA108Data.DFA108_min;
    static final char[] DFA108_max = DFA108Data.DFA108_max;
    static final short[] DFA108_accept = DFA108Data.DFA108_accept;
    static final short[] DFA108_special = DFA108Data.DFA108_special;
    static final short[][] DFA108_transition = DFA108Data.DFA108_transition;


    static class DFA108Data {
        static final String DFA108_eotS =
            "\41\uffff";
        static final String DFA108_eofS =
            "\41\uffff";
        static final String DFA108_minS =
            "\1\24\1\0\1\uffff\1\0\1\uffff\1\0\1\uffff\14\0\16\uffff";
        static final String DFA108_maxS =
            "\1\u0080\1\0\1\uffff\1\0\1\uffff\1\0\1\uffff\14\0\16\uffff";
        static final String DFA108_acceptS =
            "\2\uffff\1\2\1\uffff\1\3\1\uffff\1\4\14\uffff\1\6\13\uffff\1\1\1"+
            "\5";
        static final String DFA108_specialS =
            "\1\0\1\1\1\uffff\1\2\1\uffff\1\3\1\uffff\1\4\1\5\1\6\1\7\1\10\1"+
            "\11\1\12\1\13\1\14\1\15\1\16\1\17\16\uffff}>";
        static final String[] DFA108_transitionS = {
                "\1\22\4\uffff\1\2\15\uffff\1\12\1\uffff\1\23\1\uffff\1\23\2"+
                "\uffff\2\23\4\uffff\1\23\1\uffff\1\23\1\13\1\uffff\1\23\6\uffff"+
                "\3\23\1\14\1\uffff\1\11\1\10\1\7\1\uffff\1\23\1\5\1\15\1\uffff"+
                "\1\16\1\uffff\1\17\1\uffff\1\23\1\20\3\uffff\1\6\3\uffff\1\4"+
                "\35\uffff\1\3\2\uffff\1\21\4\uffff\1\1",
                "\1\uffff",
                "",
                "\1\uffff",
                "",
                "\1\uffff",
                "",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA108_eot = DFA.unpackEncodedString(DFA108_eotS);
        static final short[] DFA108_eof = DFA.unpackEncodedString(DFA108_eofS);
        static final char[] DFA108_min = DFA.unpackEncodedStringToUnsignedChars(DFA108_minS);
        static final char[] DFA108_max = DFA.unpackEncodedStringToUnsignedChars(DFA108_maxS);
        static final short[] DFA108_accept = DFA.unpackEncodedString(DFA108_acceptS);
        static final short[] DFA108_special = DFA.unpackEncodedString(DFA108_specialS);
        static final short[][] DFA108_transition;
        static {
            int numStates = DFA108_transitionS.length;
            DFA108_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA108_transition[i] = DFA.unpackEncodedString(DFA108_transitionS[i]);
            }
        }
    }
    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = DFA108_eot;
            this.eof = DFA108_eof;
            this.min = DFA108_min;
            this.max = DFA108_max;
            this.accept = DFA108_accept;
            this.special = DFA108_special;
            this.transition = DFA108_transition;
        }
        public String getDescription() {
            return "3722:1: classBodyDeclaration returns [NodeUnion<? extends ClassMemberNode> ret] : ( splice[ClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, ConstructorDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | {...}? => classMemberBsjMetaprogramAnchor | noOp | initializerBlock | constructorDeclaration | memberDecl );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_0 = input.LA(1);

                         
                        int index108_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA108_0==128) ) {s = 1;}

                        else if ( (LA108_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 2;}

                        else if ( (LA108_0==MONKEYS_AT) ) {s = 3;}

                        else if ( (LA108_0==SEMI) ) {s = 4;}

                        else if ( (LA108_0==STATIC) ) {s = 5;}

                        else if ( (LA108_0==LBRACE) ) {s = 6;}

                        else if ( (LA108_0==PUBLIC) ) {s = 7;}

                        else if ( (LA108_0==PROTECTED) ) {s = 8;}

                        else if ( (LA108_0==PRIVATE) ) {s = 9;}

                        else if ( (LA108_0==ABSTRACT) ) {s = 10;}

                        else if ( (LA108_0==FINAL) ) {s = 11;}

                        else if ( (LA108_0==NATIVE) ) {s = 12;}

                        else if ( (LA108_0==STRICTFP) ) {s = 13;}

                        else if ( (LA108_0==SYNCHRONIZED) ) {s = 14;}

                        else if ( (LA108_0==TRANSIENT) ) {s = 15;}

                        else if ( (LA108_0==VOLATILE) ) {s = 16;}

                        else if ( (LA108_0==LT) ) {s = 17;}

                        else if ( (LA108_0==IDENTIFIER) ) {s = 18;}

                        else if ( (LA108_0==BOOLEAN||LA108_0==BYTE||(LA108_0>=CHAR && LA108_0<=CLASS)||LA108_0==DOUBLE||LA108_0==ENUM||LA108_0==FLOAT||(LA108_0>=INT && LA108_0<=LONG)||LA108_0==SHORT||LA108_0==VOID) ) {s = 19;}

                         
                        input.seek(index108_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA108_1 = input.LA(1);

                         
                        int index108_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred129_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 31;}

                        else if ( (((synpred130_BsjAntlr()&&(configuration.getMetaprogramsSupported()))&&(configuration.getCodeSplicingSupported()))) ) {s = 2;}

                        else if ( ((synpred131_BsjAntlr()||(synpred131_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred131_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 4;}

                        else if ( ((synpred132_BsjAntlr()||(synpred132_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred132_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 6;}

                        else if ( ((synpred133_BsjAntlr()||((synpred133_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred133_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred133_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA108_3 = input.LA(1);

                         
                        int index108_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred131_BsjAntlr()) ) {s = 4;}

                        else if ( (synpred132_BsjAntlr()) ) {s = 6;}

                        else if ( (((synpred133_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred133_BsjAntlr())) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA108_5 = input.LA(1);

                         
                        int index108_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred132_BsjAntlr()) ) {s = 6;}

                        else if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA108_7 = input.LA(1);

                         
                        int index108_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA108_8 = input.LA(1);

                         
                        int index108_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA108_9 = input.LA(1);

                         
                        int index108_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA108_10 = input.LA(1);

                         
                        int index108_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA108_11 = input.LA(1);

                         
                        int index108_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA108_12 = input.LA(1);

                         
                        int index108_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA108_13 = input.LA(1);

                         
                        int index108_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA108_14 = input.LA(1);

                         
                        int index108_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA108_15 = input.LA(1);

                         
                        int index108_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA108_16 = input.LA(1);

                         
                        int index108_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA108_17 = input.LA(1);

                         
                        int index108_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA108_18 = input.LA(1);

                         
                        int index108_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred133_BsjAntlr()) ) {s = 32;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index108_18);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA110_eotS = DFA110Data.DFA110_eotS;
    static final String DFA110_eofS = DFA110Data.DFA110_eofS;
    static final String DFA110_minS = DFA110Data.DFA110_minS;
    static final String DFA110_maxS = DFA110Data.DFA110_maxS;
    static final String DFA110_acceptS = DFA110Data.DFA110_acceptS;
    static final String DFA110_specialS = DFA110Data.DFA110_specialS;
    static final String[] DFA110_transitionS = DFA110Data.DFA110_transitionS;

    static final short[] DFA110_eot = DFA110Data.DFA110_eot;
    static final short[] DFA110_eof = DFA110Data.DFA110_eof;
    static final char[] DFA110_min = DFA110Data.DFA110_min;
    static final char[] DFA110_max = DFA110Data.DFA110_max;
    static final short[] DFA110_accept = DFA110Data.DFA110_accept;
    static final short[] DFA110_special = DFA110Data.DFA110_special;
    static final short[][] DFA110_transition = DFA110Data.DFA110_transition;


    static class DFA110Data {
        static final String DFA110_eotS =
            "\40\uffff";
        static final String DFA110_eofS =
            "\40\uffff";
        static final String DFA110_minS =
            "\1\24\1\0\36\uffff";
        static final String DFA110_maxS =
            "\1\u0080\1\0\36\uffff";
        static final String DFA110_acceptS =
            "\2\uffff\1\2\34\uffff\1\1";
        static final String DFA110_specialS =
            "\1\uffff\1\0\36\uffff}>";
        static final String[] DFA110_transitionS = {
                "\1\2\4\uffff\1\2\15\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff"+
                "\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\6\uffff\4\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\3\uffff"+
                "\1\2\3\uffff\1\2\35\uffff\1\2\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA110_eot = DFA.unpackEncodedString(DFA110_eotS);
        static final short[] DFA110_eof = DFA.unpackEncodedString(DFA110_eofS);
        static final char[] DFA110_min = DFA.unpackEncodedStringToUnsignedChars(DFA110_minS);
        static final char[] DFA110_max = DFA.unpackEncodedStringToUnsignedChars(DFA110_maxS);
        static final short[] DFA110_accept = DFA.unpackEncodedString(DFA110_acceptS);
        static final short[] DFA110_special = DFA.unpackEncodedString(DFA110_specialS);
        static final short[][] DFA110_transition;
        static {
            int numStates = DFA110_transitionS.length;
            DFA110_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA110_transition[i] = DFA.unpackEncodedString(DFA110_transitionS[i]);
            }
        }
    }
    class DFA110 extends DFA {

        public DFA110(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 110;
            this.eot = DFA110_eot;
            this.eof = DFA110_eof;
            this.min = DFA110_min;
            this.max = DFA110_max;
            this.accept = DFA110_accept;
            this.special = DFA110_special;
            this.transition = DFA110_transition;
        }
        public String getDescription() {
            return "3776:9: ( splice[AnonymousClassMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= anonymousClassBodyDeclaration (b= anonymousClassBodyDeclaration )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA110_1 = input.LA(1);

                         
                        int index110_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred134_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 31;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index110_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 110, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA112_eotS = DFA112Data.DFA112_eotS;
    static final String DFA112_eofS = DFA112Data.DFA112_eofS;
    static final String DFA112_minS = DFA112Data.DFA112_minS;
    static final String DFA112_maxS = DFA112Data.DFA112_maxS;
    static final String DFA112_acceptS = DFA112Data.DFA112_acceptS;
    static final String DFA112_specialS = DFA112Data.DFA112_specialS;
    static final String[] DFA112_transitionS = DFA112Data.DFA112_transitionS;

    static final short[] DFA112_eot = DFA112Data.DFA112_eot;
    static final short[] DFA112_eof = DFA112Data.DFA112_eof;
    static final char[] DFA112_min = DFA112Data.DFA112_min;
    static final char[] DFA112_max = DFA112Data.DFA112_max;
    static final short[] DFA112_accept = DFA112Data.DFA112_accept;
    static final short[] DFA112_special = DFA112Data.DFA112_special;
    static final short[][] DFA112_transition = DFA112Data.DFA112_transition;


    static class DFA112Data {
        static final String DFA112_eotS =
            "\40\uffff";
        static final String DFA112_eofS =
            "\40\uffff";
        static final String DFA112_minS =
            "\1\24\2\0\1\uffff\1\0\33\uffff";
        static final String DFA112_maxS =
            "\1\u0080\2\0\1\uffff\1\0\33\uffff";
        static final String DFA112_acceptS =
            "\3\uffff\1\2\1\uffff\1\3\1\4\27\uffff\1\5\1\1";
        static final String DFA112_specialS =
            "\1\0\1\1\1\2\1\uffff\1\3\33\uffff}>";
        static final String[] DFA112_transitionS = {
                "\1\6\4\uffff\1\36\15\uffff\1\6\1\uffff\1\6\1\uffff\1\6\2\uffff"+
                "\2\6\4\uffff\1\6\1\uffff\2\6\1\uffff\1\6\6\uffff\4\6\1\uffff"+
                "\3\6\1\uffff\1\6\1\4\1\6\1\uffff\1\6\1\uffff\1\6\1\uffff\2\6"+
                "\3\uffff\1\5\3\uffff\1\3\35\uffff\1\2\2\uffff\1\6\4\uffff\1"+
                "\1",
                "\1\uffff",
                "\1\uffff",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA112_eot = DFA.unpackEncodedString(DFA112_eotS);
        static final short[] DFA112_eof = DFA.unpackEncodedString(DFA112_eofS);
        static final char[] DFA112_min = DFA.unpackEncodedStringToUnsignedChars(DFA112_minS);
        static final char[] DFA112_max = DFA.unpackEncodedStringToUnsignedChars(DFA112_maxS);
        static final short[] DFA112_accept = DFA.unpackEncodedString(DFA112_acceptS);
        static final short[] DFA112_special = DFA.unpackEncodedString(DFA112_specialS);
        static final short[][] DFA112_transition;
        static {
            int numStates = DFA112_transitionS.length;
            DFA112_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA112_transition[i] = DFA.unpackEncodedString(DFA112_transitionS[i]);
            }
        }
    }
    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = DFA112_eot;
            this.eof = DFA112_eof;
            this.min = DFA112_min;
            this.max = DFA112_max;
            this.accept = DFA112_accept;
            this.special = DFA112_special;
            this.transition = DFA112_transition;
        }
        public String getDescription() {
            return "3844:1: anonymousClassBodyDeclaration returns [NodeUnion<? extends AnonymousClassMemberNode> ret] : ( splice[AnonymousClassMemberNode.class, Arrays.<Class<? extends Node>>asList(InitializerDeclarationNode.class, FieldDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | noOp | initializerBlock | memberDecl | {...}? => anonymousClassMemberBsjMetaprogramAnchor );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_0 = input.LA(1);

                         
                        int index112_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA112_0==128) ) {s = 1;}

                        else if ( (LA112_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA112_0==SEMI) ) {s = 3;}

                        else if ( (LA112_0==STATIC) ) {s = 4;}

                        else if ( (LA112_0==LBRACE) ) {s = 5;}

                        else if ( (LA112_0==IDENTIFIER||LA112_0==ABSTRACT||LA112_0==BOOLEAN||LA112_0==BYTE||(LA112_0>=CHAR && LA112_0<=CLASS)||LA112_0==DOUBLE||(LA112_0>=ENUM && LA112_0<=FINAL)||LA112_0==FLOAT||(LA112_0>=INT && LA112_0<=NATIVE)||(LA112_0>=PRIVATE && LA112_0<=PUBLIC)||LA112_0==SHORT||LA112_0==STRICTFP||LA112_0==SYNCHRONIZED||LA112_0==TRANSIENT||(LA112_0>=VOID && LA112_0<=VOLATILE)||LA112_0==LT) ) {s = 6;}

                        else if ( (LA112_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 30;}

                         
                        input.seek(index112_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred137_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 31;}

                        else if ( ((synpred138_BsjAntlr()||(synpred138_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred138_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 3;}

                        else if ( (((synpred139_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred139_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred139_BsjAntlr())) ) {s = 5;}

                        else if ( (((synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred140_BsjAntlr()||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred140_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 6;}

                        else if ( (((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))) ) {s = 30;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA112_2 = input.LA(1);

                         
                        int index112_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_BsjAntlr()) ) {s = 3;}

                        else if ( (synpred139_BsjAntlr()) ) {s = 5;}

                        else if ( (((synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred140_BsjAntlr()||(synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred140_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 6;}

                         
                        input.seek(index112_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA112_4 = input.LA(1);

                         
                        int index112_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_BsjAntlr()) ) {s = 5;}

                        else if ( (synpred140_BsjAntlr()) ) {s = 6;}

                         
                        input.seek(index112_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA113_eotS = DFA113Data.DFA113_eotS;
    static final String DFA113_eofS = DFA113Data.DFA113_eofS;
    static final String DFA113_minS = DFA113Data.DFA113_minS;
    static final String DFA113_maxS = DFA113Data.DFA113_maxS;
    static final String DFA113_acceptS = DFA113Data.DFA113_acceptS;
    static final String DFA113_specialS = DFA113Data.DFA113_specialS;
    static final String[] DFA113_transitionS = DFA113Data.DFA113_transitionS;

    static final short[] DFA113_eot = DFA113Data.DFA113_eot;
    static final short[] DFA113_eof = DFA113Data.DFA113_eof;
    static final char[] DFA113_min = DFA113Data.DFA113_min;
    static final char[] DFA113_max = DFA113Data.DFA113_max;
    static final short[] DFA113_accept = DFA113Data.DFA113_accept;
    static final short[] DFA113_special = DFA113Data.DFA113_special;
    static final short[][] DFA113_transition = DFA113Data.DFA113_transition;


    static class DFA113Data {
        static final String DFA113_eotS =
            "\35\uffff";
        static final String DFA113_eofS =
            "\35\uffff";
        static final String DFA113_minS =
            "\1\24\26\0\6\uffff";
        static final String DFA113_maxS =
            "\1\u0080\26\0\6\uffff";
        static final String DFA113_acceptS =
            "\27\uffff\2\2\2\3\1\4\1\1";
        static final String DFA113_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\6\uffff}>";
        static final String[] DFA113_transitionS = {
                "\1\16\22\uffff\1\6\1\uffff\1\17\1\uffff\1\21\2\uffff\1\20\1"+
                "\31\4\uffff\1\26\1\uffff\1\32\1\7\1\uffff\1\25\6\uffff\1\23"+
                "\1\33\1\24\1\10\1\uffff\1\5\1\4\1\3\1\uffff\1\22\1\11\1\12\1"+
                "\uffff\1\13\1\uffff\1\14\1\uffff\1\30\1\15\45\uffff\1\2\2\uffff"+
                "\1\27\4\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA113_eot = DFA.unpackEncodedString(DFA113_eotS);
        static final short[] DFA113_eof = DFA.unpackEncodedString(DFA113_eofS);
        static final char[] DFA113_min = DFA.unpackEncodedStringToUnsignedChars(DFA113_minS);
        static final char[] DFA113_max = DFA.unpackEncodedStringToUnsignedChars(DFA113_maxS);
        static final short[] DFA113_accept = DFA.unpackEncodedString(DFA113_acceptS);
        static final short[] DFA113_special = DFA.unpackEncodedString(DFA113_specialS);
        static final short[][] DFA113_transition;
        static {
            int numStates = DFA113_transitionS.length;
            DFA113_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA113_transition[i] = DFA.unpackEncodedString(DFA113_transitionS[i]);
            }
        }
    }
    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = DFA113_eot;
            this.eof = DFA113_eof;
            this.min = DFA113_min;
            this.max = DFA113_max;
            this.accept = DFA113_accept;
            this.special = DFA113_special;
            this.transition = DFA113_transition;
        }
        public String getDescription() {
            return "3880:1: memberDecl returns [NodeUnion<? extends AnonymousClassMemberNode> ret] : ( ( fieldHeader )=> fieldDeclaration | ( methodHeader )=> methodDeclaration | ( classHeader | enumHeader )=> classDeclaration | ( interfaceHeader | annotationHeader )=> interfaceDeclaration );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_0 = input.LA(1);

                         
                        int index113_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA113_0==128) ) {s = 1;}

                        else if ( (LA113_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA113_0==PUBLIC) ) {s = 3;}

                        else if ( (LA113_0==PROTECTED) ) {s = 4;}

                        else if ( (LA113_0==PRIVATE) ) {s = 5;}

                        else if ( (LA113_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA113_0==FINAL) ) {s = 7;}

                        else if ( (LA113_0==NATIVE) ) {s = 8;}

                        else if ( (LA113_0==STATIC) ) {s = 9;}

                        else if ( (LA113_0==STRICTFP) ) {s = 10;}

                        else if ( (LA113_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA113_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA113_0==VOLATILE) ) {s = 13;}

                        else if ( (LA113_0==IDENTIFIER) ) {s = 14;}

                        else if ( (LA113_0==BOOLEAN) ) {s = 15;}

                        else if ( (LA113_0==CHAR) ) {s = 16;}

                        else if ( (LA113_0==BYTE) ) {s = 17;}

                        else if ( (LA113_0==SHORT) ) {s = 18;}

                        else if ( (LA113_0==INT) ) {s = 19;}

                        else if ( (LA113_0==LONG) ) {s = 20;}

                        else if ( (LA113_0==FLOAT) ) {s = 21;}

                        else if ( (LA113_0==DOUBLE) ) {s = 22;}

                        else if ( (LA113_0==LT) && (synpred142_BsjAntlr())) {s = 23;}

                        else if ( (LA113_0==VOID) && (synpred142_BsjAntlr())) {s = 24;}

                        else if ( (LA113_0==CLASS) && (synpred144_BsjAntlr())) {s = 25;}

                        else if ( (LA113_0==ENUM) && (synpred144_BsjAntlr())) {s = 26;}

                        else if ( (LA113_0==INTERFACE) && (synpred146_BsjAntlr())) {s = 27;}

                         
                        input.seek(index113_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred141_BsjAntlr()||(synpred141_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred141_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred141_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 28;}

                        else if ( (((synpred142_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred142_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred142_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred142_BsjAntlr())) ) {s = 24;}

                        else if ( (((synpred144_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred144_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||((synpred144_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred144_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred144_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred144_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 26;}

                        else if ( ((((synpred146_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred146_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred146_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred146_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred146_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred146_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 27;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA113_2 = input.LA(1);

                         
                        int index113_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred141_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred141_BsjAntlr())) ) {s = 28;}

                        else if ( (((synpred142_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred142_BsjAntlr())) ) {s = 24;}

                        else if ( (((synpred144_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred144_BsjAntlr()||(synpred144_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 26;}

                        else if ( ((synpred146_BsjAntlr()||(synpred146_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred146_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 27;}

                         
                        input.seek(index113_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA113_3 = input.LA(1);

                         
                        int index113_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA113_4 = input.LA(1);

                         
                        int index113_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA113_5 = input.LA(1);

                         
                        int index113_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA113_6 = input.LA(1);

                         
                        int index113_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA113_7 = input.LA(1);

                         
                        int index113_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA113_8 = input.LA(1);

                         
                        int index113_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA113_9 = input.LA(1);

                         
                        int index113_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA113_10 = input.LA(1);

                         
                        int index113_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA113_11 = input.LA(1);

                         
                        int index113_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA113_12 = input.LA(1);

                         
                        int index113_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA113_13 = input.LA(1);

                         
                        int index113_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred144_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred146_BsjAntlr()) ) {s = 27;}

                         
                        input.seek(index113_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA113_14 = input.LA(1);

                         
                        int index113_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA113_15 = input.LA(1);

                         
                        int index113_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA113_16 = input.LA(1);

                         
                        int index113_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA113_17 = input.LA(1);

                         
                        int index113_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA113_18 = input.LA(1);

                         
                        int index113_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA113_19 = input.LA(1);

                         
                        int index113_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA113_20 = input.LA(1);

                         
                        int index113_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA113_21 = input.LA(1);

                         
                        int index113_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA113_22 = input.LA(1);

                         
                        int index113_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred141_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred142_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index113_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA114_eotS = DFA114Data.DFA114_eotS;
    static final String DFA114_eofS = DFA114Data.DFA114_eofS;
    static final String DFA114_minS = DFA114Data.DFA114_minS;
    static final String DFA114_maxS = DFA114Data.DFA114_maxS;
    static final String DFA114_acceptS = DFA114Data.DFA114_acceptS;
    static final String DFA114_specialS = DFA114Data.DFA114_specialS;
    static final String[] DFA114_transitionS = DFA114Data.DFA114_transitionS;

    static final short[] DFA114_eot = DFA114Data.DFA114_eot;
    static final short[] DFA114_eof = DFA114Data.DFA114_eof;
    static final char[] DFA114_min = DFA114Data.DFA114_min;
    static final char[] DFA114_max = DFA114Data.DFA114_max;
    static final short[] DFA114_accept = DFA114Data.DFA114_accept;
    static final short[] DFA114_special = DFA114Data.DFA114_special;
    static final short[][] DFA114_transition = DFA114Data.DFA114_transition;


    static class DFA114Data {
        static final String DFA114_eotS =
            "\15\uffff";
        static final String DFA114_eofS =
            "\15\uffff";
        static final String DFA114_minS =
            "\1\24\1\0\13\uffff";
        static final String DFA114_maxS =
            "\1\u0080\1\0\13\uffff";
        static final String DFA114_acceptS =
            "\2\uffff\1\2\10\uffff\1\3\1\1";
        static final String DFA114_specialS =
            "\1\uffff\1\0\13\uffff}>";
        static final String[] DFA114_transitionS = {
                "\1\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff\1\2\4\uffff"+
                "\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff\1\13\56\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA114_eot = DFA.unpackEncodedString(DFA114_eotS);
        static final short[] DFA114_eof = DFA.unpackEncodedString(DFA114_eofS);
        static final char[] DFA114_min = DFA.unpackEncodedStringToUnsignedChars(DFA114_minS);
        static final char[] DFA114_max = DFA.unpackEncodedStringToUnsignedChars(DFA114_maxS);
        static final short[] DFA114_accept = DFA.unpackEncodedString(DFA114_acceptS);
        static final short[] DFA114_special = DFA.unpackEncodedString(DFA114_specialS);
        static final short[][] DFA114_transition;
        static {
            int numStates = DFA114_transitionS.length;
            DFA114_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA114_transition[i] = DFA.unpackEncodedString(DFA114_transitionS[i]);
            }
        }
    }
    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = DFA114_eot;
            this.eof = DFA114_eof;
            this.min = DFA114_min;
            this.max = DFA114_max;
            this.accept = DFA114_accept;
            this.special = DFA114_special;
            this.transition = DFA114_transition;
        }
        public String getDescription() {
            return "3910:1: methodReturnType returns [NodeUnion<? extends TypeNode> ret] : ( splice[VoidTypeNode.class, Arrays.<Class<? extends Node>>asList()] | type | 'void' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_1 = input.LA(1);

                         
                        int index114_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred147_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 12;}

                        else if ( (((synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred148_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index114_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA116_eotS = DFA116Data.DFA116_eotS;
    static final String DFA116_eofS = DFA116Data.DFA116_eofS;
    static final String DFA116_minS = DFA116Data.DFA116_minS;
    static final String DFA116_maxS = DFA116Data.DFA116_maxS;
    static final String DFA116_acceptS = DFA116Data.DFA116_acceptS;
    static final String DFA116_specialS = DFA116Data.DFA116_specialS;
    static final String[] DFA116_transitionS = DFA116Data.DFA116_transitionS;

    static final short[] DFA116_eot = DFA116Data.DFA116_eot;
    static final short[] DFA116_eof = DFA116Data.DFA116_eof;
    static final char[] DFA116_min = DFA116Data.DFA116_min;
    static final char[] DFA116_max = DFA116Data.DFA116_max;
    static final short[] DFA116_accept = DFA116Data.DFA116_accept;
    static final short[] DFA116_special = DFA116Data.DFA116_special;
    static final short[][] DFA116_transition = DFA116Data.DFA116_transition;


    static class DFA116Data {
        static final String DFA116_eotS =
            "\21\uffff";
        static final String DFA116_eofS =
            "\21\uffff";
        static final String DFA116_minS =
            "\1\24\1\0\17\uffff";
        static final String DFA116_maxS =
            "\1\u0080\1\0\17\uffff";
        static final String DFA116_acceptS =
            "\2\uffff\1\2\15\uffff\1\1";
        static final String DFA116_specialS =
            "\1\uffff\1\0\17\uffff}>";
        static final String[] DFA116_transitionS = {
                "\1\2\22\uffff\1\2\17\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff"+
                "\2\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\2\uffff"+
                "\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA116_eot = DFA.unpackEncodedString(DFA116_eotS);
        static final short[] DFA116_eof = DFA.unpackEncodedString(DFA116_eofS);
        static final char[] DFA116_min = DFA.unpackEncodedStringToUnsignedChars(DFA116_minS);
        static final char[] DFA116_max = DFA.unpackEncodedStringToUnsignedChars(DFA116_maxS);
        static final short[] DFA116_accept = DFA.unpackEncodedString(DFA116_acceptS);
        static final short[] DFA116_special = DFA.unpackEncodedString(DFA116_specialS);
        static final short[][] DFA116_transition;
        static {
            int numStates = DFA116_transitionS.length;
            DFA116_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA116_transition[i] = DFA.unpackEncodedString(DFA116_transitionS[i]);
            }
        }
    }
    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = DFA116_eot;
            this.eof = DFA116_eof;
            this.min = DFA116_min;
            this.max = DFA116_max;
            this.accept = DFA116_accept;
            this.special = DFA116_special;
            this.transition = DFA116_transition;
        }
        public String getDescription() {
            return "3936:1: constructorDeclaration returns [NodeUnion<? extends ConstructorDeclarationNode> ret] : ( splice[ConstructorDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constructorModifiers optionalTypeParameters identifier formalParameters ( throwsClause )? constructorBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred149_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 16;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA117_eotS = DFA117Data.DFA117_eotS;
    static final String DFA117_eofS = DFA117Data.DFA117_eofS;
    static final String DFA117_minS = DFA117Data.DFA117_minS;
    static final String DFA117_maxS = DFA117Data.DFA117_maxS;
    static final String DFA117_acceptS = DFA117Data.DFA117_acceptS;
    static final String DFA117_specialS = DFA117Data.DFA117_specialS;
    static final String[] DFA117_transitionS = DFA117Data.DFA117_transitionS;

    static final short[] DFA117_eot = DFA117Data.DFA117_eot;
    static final short[] DFA117_eof = DFA117Data.DFA117_eof;
    static final char[] DFA117_min = DFA117Data.DFA117_min;
    static final char[] DFA117_max = DFA117Data.DFA117_max;
    static final short[] DFA117_accept = DFA117Data.DFA117_accept;
    static final short[] DFA117_special = DFA117Data.DFA117_special;
    static final short[][] DFA117_transition = DFA117Data.DFA117_transition;


    static class DFA117Data {
        static final String DFA117_eotS =
            "\75\uffff";
        static final String DFA117_eofS =
            "\75\uffff";
        static final String DFA117_minS =
            "\1\4\1\0\1\uffff\30\0\42\uffff";
        static final String DFA117_maxS =
            "\1\u0080\1\0\1\uffff\30\0\42\uffff";
        static final String DFA117_acceptS =
            "\2\uffff\1\1\30\uffff\1\2\41\uffff";
        static final String DFA117_specialS =
            "\1\uffff\1\0\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
            "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
            "\1\30\42\uffff}>";
        static final String[] DFA117_transitionS = {
                "\1\16\3\uffff\1\32\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
                "\14\1\15\1\27\4\uffff\1\33\15\uffff\2\33\1\17\1\33\1\21\2\uffff"+
                "\1\20\1\33\1\uffff\1\33\1\uffff\1\33\1\26\2\uffff\1\33\1\uffff"+
                "\1\25\1\33\1\uffff\1\33\3\uffff\1\23\1\uffff\1\24\1\33\1\uffff"+
                "\4\33\1\22\7\33\1\30\2\33\1\31\1\uffff\2\33\2\uffff\1\33\4\uffff"+
                "\2\33\5\uffff\4\33\16\uffff\1\33\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA117_eot = DFA.unpackEncodedString(DFA117_eotS);
        static final short[] DFA117_eof = DFA.unpackEncodedString(DFA117_eofS);
        static final char[] DFA117_min = DFA.unpackEncodedStringToUnsignedChars(DFA117_minS);
        static final char[] DFA117_max = DFA.unpackEncodedStringToUnsignedChars(DFA117_maxS);
        static final short[] DFA117_accept = DFA.unpackEncodedString(DFA117_acceptS);
        static final short[] DFA117_special = DFA.unpackEncodedString(DFA117_specialS);
        static final short[][] DFA117_transition;
        static {
            int numStates = DFA117_transitionS.length;
            DFA117_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA117_transition[i] = DFA.unpackEncodedString(DFA117_transitionS[i]);
            }
        }
    }
    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = DFA117_eot;
            this.eof = DFA117_eof;
            this.min = DFA117_min;
            this.max = DFA117_max;
            this.accept = DFA117_accept;
            this.special = DFA117_special;
            this.transition = DFA117_transition;
        }
        public String getDescription() {
            return "3993:9: ( explicitConstructorInvocation )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred152_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred152_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA117_3 = input.LA(1);

                         
                        int index117_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA117_4 = input.LA(1);

                         
                        int index117_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA117_5 = input.LA(1);

                         
                        int index117_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA117_6 = input.LA(1);

                         
                        int index117_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA117_7 = input.LA(1);

                         
                        int index117_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA117_8 = input.LA(1);

                         
                        int index117_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA117_9 = input.LA(1);

                         
                        int index117_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA117_10 = input.LA(1);

                         
                        int index117_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA117_11 = input.LA(1);

                         
                        int index117_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA117_12 = input.LA(1);

                         
                        int index117_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA117_13 = input.LA(1);

                         
                        int index117_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA117_14 = input.LA(1);

                         
                        int index117_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred152_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA117_15 = input.LA(1);

                         
                        int index117_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA117_16 = input.LA(1);

                         
                        int index117_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA117_17 = input.LA(1);

                         
                        int index117_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA117_18 = input.LA(1);

                         
                        int index117_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA117_19 = input.LA(1);

                         
                        int index117_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA117_20 = input.LA(1);

                         
                        int index117_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA117_21 = input.LA(1);

                         
                        int index117_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA117_22 = input.LA(1);

                         
                        int index117_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA117_23 = input.LA(1);

                         
                        int index117_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA117_24 = input.LA(1);

                         
                        int index117_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA117_25 = input.LA(1);

                         
                        int index117_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA117_26 = input.LA(1);

                         
                        int index117_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred152_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 27;}

                         
                        input.seek(index117_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA122_eotS = DFA122Data.DFA122_eotS;
    static final String DFA122_eofS = DFA122Data.DFA122_eofS;
    static final String DFA122_minS = DFA122Data.DFA122_minS;
    static final String DFA122_maxS = DFA122Data.DFA122_maxS;
    static final String DFA122_acceptS = DFA122Data.DFA122_acceptS;
    static final String DFA122_specialS = DFA122Data.DFA122_specialS;
    static final String[] DFA122_transitionS = DFA122Data.DFA122_transitionS;

    static final short[] DFA122_eot = DFA122Data.DFA122_eot;
    static final short[] DFA122_eof = DFA122Data.DFA122_eof;
    static final char[] DFA122_min = DFA122Data.DFA122_min;
    static final char[] DFA122_max = DFA122Data.DFA122_max;
    static final short[] DFA122_accept = DFA122Data.DFA122_accept;
    static final short[] DFA122_special = DFA122Data.DFA122_special;
    static final short[][] DFA122_transition = DFA122Data.DFA122_transition;


    static class DFA122Data {
        static final String DFA122_eotS =
            "\32\uffff";
        static final String DFA122_eofS =
            "\32\uffff";
        static final String DFA122_minS =
            "\1\24\1\0\30\uffff";
        static final String DFA122_maxS =
            "\1\u0080\1\0\30\uffff";
        static final String DFA122_acceptS =
            "\2\uffff\1\2\26\uffff\1\1";
        static final String DFA122_specialS =
            "\1\uffff\1\0\30\uffff}>";
        static final String[] DFA122_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\45\uffff"+
                "\1\2\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA122_eot = DFA.unpackEncodedString(DFA122_eotS);
        static final short[] DFA122_eof = DFA.unpackEncodedString(DFA122_eofS);
        static final char[] DFA122_min = DFA.unpackEncodedStringToUnsignedChars(DFA122_minS);
        static final char[] DFA122_max = DFA.unpackEncodedStringToUnsignedChars(DFA122_maxS);
        static final short[] DFA122_accept = DFA.unpackEncodedString(DFA122_acceptS);
        static final short[] DFA122_special = DFA.unpackEncodedString(DFA122_specialS);
        static final short[][] DFA122_transition;
        static {
            int numStates = DFA122_transitionS.length;
            DFA122_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA122_transition[i] = DFA.unpackEncodedString(DFA122_transitionS[i]);
            }
        }
    }
    class DFA122 extends DFA {

        public DFA122(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 122;
            this.eot = DFA122_eot;
            this.eof = DFA122_eof;
            this.min = DFA122_min;
            this.max = DFA122_max;
            this.accept = DFA122_accept;
            this.special = DFA122_special;
            this.transition = DFA122_transition;
        }
        public String getDescription() {
            return "4004:1: methodDeclaration returns [NodeUnion<? extends MethodDeclarationNode> ret] : ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ( block | ';' ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA122_1 = input.LA(1);

                         
                        int index122_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred153_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index122_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 122, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA123_eotS = DFA123Data.DFA123_eotS;
    static final String DFA123_eofS = DFA123Data.DFA123_eofS;
    static final String DFA123_minS = DFA123Data.DFA123_minS;
    static final String DFA123_maxS = DFA123Data.DFA123_maxS;
    static final String DFA123_acceptS = DFA123Data.DFA123_acceptS;
    static final String DFA123_specialS = DFA123Data.DFA123_specialS;
    static final String[] DFA123_transitionS = DFA123Data.DFA123_transitionS;

    static final short[] DFA123_eot = DFA123Data.DFA123_eot;
    static final short[] DFA123_eof = DFA123Data.DFA123_eof;
    static final char[] DFA123_min = DFA123Data.DFA123_min;
    static final char[] DFA123_max = DFA123Data.DFA123_max;
    static final short[] DFA123_accept = DFA123Data.DFA123_accept;
    static final short[] DFA123_special = DFA123Data.DFA123_special;
    static final short[][] DFA123_transition = DFA123Data.DFA123_transition;


    static class DFA123Data {
        static final String DFA123_eotS =
            "\30\uffff";
        static final String DFA123_eofS =
            "\30\uffff";
        static final String DFA123_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA123_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA123_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA123_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA123_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA123_eot = DFA.unpackEncodedString(DFA123_eotS);
        static final short[] DFA123_eof = DFA.unpackEncodedString(DFA123_eofS);
        static final char[] DFA123_min = DFA.unpackEncodedStringToUnsignedChars(DFA123_minS);
        static final char[] DFA123_max = DFA.unpackEncodedStringToUnsignedChars(DFA123_maxS);
        static final short[] DFA123_accept = DFA.unpackEncodedString(DFA123_acceptS);
        static final short[] DFA123_special = DFA.unpackEncodedString(DFA123_specialS);
        static final short[][] DFA123_transition;
        static {
            int numStates = DFA123_transitionS.length;
            DFA123_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA123_transition[i] = DFA.unpackEncodedString(DFA123_transitionS[i]);
            }
        }
    }
    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = DFA123_eot;
            this.eof = DFA123_eof;
            this.min = DFA123_min;
            this.max = DFA123_max;
            this.accept = DFA123_accept;
            this.special = DFA123_special;
            this.transition = DFA123_transition;
        }
        public String getDescription() {
            return "4067:1: fieldDeclaration returns [NodeUnion<? extends FieldDeclarationNode> ret] : ( splice[FieldDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc fieldModifiers type variableDeclarators ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_1 = input.LA(1);

                         
                        int index123_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred157_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index123_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA125_eotS = DFA125Data.DFA125_eotS;
    static final String DFA125_eofS = DFA125Data.DFA125_eofS;
    static final String DFA125_minS = DFA125Data.DFA125_minS;
    static final String DFA125_maxS = DFA125Data.DFA125_maxS;
    static final String DFA125_acceptS = DFA125Data.DFA125_acceptS;
    static final String DFA125_specialS = DFA125Data.DFA125_specialS;
    static final String[] DFA125_transitionS = DFA125Data.DFA125_transitionS;

    static final short[] DFA125_eot = DFA125Data.DFA125_eot;
    static final short[] DFA125_eof = DFA125Data.DFA125_eof;
    static final char[] DFA125_min = DFA125Data.DFA125_min;
    static final char[] DFA125_max = DFA125Data.DFA125_max;
    static final short[] DFA125_accept = DFA125Data.DFA125_accept;
    static final short[] DFA125_special = DFA125Data.DFA125_special;
    static final short[][] DFA125_transition = DFA125Data.DFA125_transition;


    static class DFA125Data {
        static final String DFA125_eotS =
            "\37\uffff";
        static final String DFA125_eofS =
            "\37\uffff";
        static final String DFA125_minS =
            "\1\24\1\0\35\uffff";
        static final String DFA125_maxS =
            "\1\u0080\1\0\35\uffff";
        static final String DFA125_acceptS =
            "\2\uffff\1\2\33\uffff\1\1";
        static final String DFA125_specialS =
            "\1\uffff\1\0\35\uffff}>";
        static final String[] DFA125_transitionS = {
                "\1\2\4\uffff\1\2\15\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff"+
                "\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\6\uffff\4\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\7\uffff"+
                "\1\2\35\uffff\1\2\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA125_eot = DFA.unpackEncodedString(DFA125_eotS);
        static final short[] DFA125_eof = DFA.unpackEncodedString(DFA125_eofS);
        static final char[] DFA125_min = DFA.unpackEncodedStringToUnsignedChars(DFA125_minS);
        static final char[] DFA125_max = DFA.unpackEncodedStringToUnsignedChars(DFA125_maxS);
        static final short[] DFA125_accept = DFA.unpackEncodedString(DFA125_acceptS);
        static final short[] DFA125_special = DFA.unpackEncodedString(DFA125_specialS);
        static final short[][] DFA125_transition;
        static {
            int numStates = DFA125_transitionS.length;
            DFA125_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA125_transition[i] = DFA.unpackEncodedString(DFA125_transitionS[i]);
            }
        }
    }
    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = DFA125_eot;
            this.eof = DFA125_eof;
            this.min = DFA125_min;
            this.max = DFA125_max;
            this.accept = DFA125_accept;
            this.special = DFA125_special;
            this.transition = DFA125_transition;
        }
        public String getDescription() {
            return "4105:9: ( splice[InterfaceMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= interfaceBodyDeclaration (b= interfaceBodyDeclaration )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_1 = input.LA(1);

                         
                        int index125_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred158_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 30;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index125_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA127_eotS = DFA127Data.DFA127_eotS;
    static final String DFA127_eofS = DFA127Data.DFA127_eofS;
    static final String DFA127_minS = DFA127Data.DFA127_minS;
    static final String DFA127_maxS = DFA127Data.DFA127_maxS;
    static final String DFA127_acceptS = DFA127Data.DFA127_acceptS;
    static final String DFA127_specialS = DFA127Data.DFA127_specialS;
    static final String[] DFA127_transitionS = DFA127Data.DFA127_transitionS;

    static final short[] DFA127_eot = DFA127Data.DFA127_eot;
    static final short[] DFA127_eof = DFA127Data.DFA127_eof;
    static final char[] DFA127_min = DFA127Data.DFA127_min;
    static final char[] DFA127_max = DFA127Data.DFA127_max;
    static final short[] DFA127_accept = DFA127Data.DFA127_accept;
    static final short[] DFA127_special = DFA127Data.DFA127_special;
    static final short[][] DFA127_transition = DFA127Data.DFA127_transition;


    static class DFA127Data {
        static final String DFA127_eotS =
            "\40\uffff";
        static final String DFA127_eofS =
            "\40\uffff";
        static final String DFA127_minS =
            "\1\24\26\0\11\uffff";
        static final String DFA127_maxS =
            "\1\u0080\26\0\11\uffff";
        static final String DFA127_acceptS =
            "\27\uffff\1\3\1\uffff\1\4\1\5\1\uffff\1\6\1\7\1\1\1\2";
        static final String DFA127_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\11\uffff}>";
        static final String[] DFA127_transitionS = {
                "\1\16\4\uffff\1\35\15\uffff\1\6\1\uffff\1\17\1\uffff\1\21\2"+
                "\uffff\1\20\1\32\4\uffff\1\26\1\uffff\1\32\1\7\1\uffff\1\25"+
                "\6\uffff\1\23\1\31\1\24\1\10\1\uffff\1\5\1\4\1\3\1\uffff\1\22"+
                "\1\11\1\12\1\uffff\1\13\1\uffff\1\14\1\uffff\1\27\1\15\7\uffff"+
                "\1\34\35\uffff\1\2\2\uffff\1\27\4\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
        static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
        static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
        static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
        static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
        static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
        static final short[][] DFA127_transition;
        static {
            int numStates = DFA127_transitionS.length;
            DFA127_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
            }
        }
    }
    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = DFA127_eot;
            this.eof = DFA127_eof;
            this.min = DFA127_min;
            this.max = DFA127_max;
            this.accept = DFA127_accept;
            this.special = DFA127_special;
            this.transition = DFA127_transition;
        }
        public String getDescription() {
            return "4173:1: interfaceBodyDeclaration returns [NodeUnion<? extends InterfaceMemberNode> ret] : ( splice[InterfaceMemberNode.class, Arrays.<Class<? extends Node>>asList(ConstantDeclarationNode.class, MethodDeclarationNode.class, ClassDeclarationNode.class, EnumDeclarationNode.class, InterfaceDeclarationNode.class, AnnotationDeclarationNode.class, NoOperationNode.class)] | constantDeclaration | interfaceMethodDeclaration | interfaceDeclaration | classDeclaration | noOp | {...}? => interfaceMemberBsjMetaprogramAnchor );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_0 = input.LA(1);

                         
                        int index127_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA127_0==128) ) {s = 1;}

                        else if ( (LA127_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA127_0==PUBLIC) ) {s = 3;}

                        else if ( (LA127_0==PROTECTED) ) {s = 4;}

                        else if ( (LA127_0==PRIVATE) ) {s = 5;}

                        else if ( (LA127_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA127_0==FINAL) ) {s = 7;}

                        else if ( (LA127_0==NATIVE) ) {s = 8;}

                        else if ( (LA127_0==STATIC) ) {s = 9;}

                        else if ( (LA127_0==STRICTFP) ) {s = 10;}

                        else if ( (LA127_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA127_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA127_0==VOLATILE) ) {s = 13;}

                        else if ( (LA127_0==IDENTIFIER) ) {s = 14;}

                        else if ( (LA127_0==BOOLEAN) ) {s = 15;}

                        else if ( (LA127_0==CHAR) ) {s = 16;}

                        else if ( (LA127_0==BYTE) ) {s = 17;}

                        else if ( (LA127_0==SHORT) ) {s = 18;}

                        else if ( (LA127_0==INT) ) {s = 19;}

                        else if ( (LA127_0==LONG) ) {s = 20;}

                        else if ( (LA127_0==FLOAT) ) {s = 21;}

                        else if ( (LA127_0==DOUBLE) ) {s = 22;}

                        else if ( (LA127_0==VOID||LA127_0==LT) ) {s = 23;}

                        else if ( (LA127_0==INTERFACE) ) {s = 25;}

                        else if ( (LA127_0==CLASS||LA127_0==ENUM) ) {s = 26;}

                        else if ( (LA127_0==SEMI) ) {s = 28;}

                        else if ( (LA127_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 29;}

                         
                        input.seek(index127_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_1 = input.LA(1);

                         
                        int index127_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred161_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 30;}

                        else if ( ((synpred162_BsjAntlr()||(synpred162_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred162_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred162_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 31;}

                        else if ( ((synpred163_BsjAntlr()||((synpred163_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred163_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred163_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 23;}

                        else if ( (((synpred164_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred164_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred164_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred164_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred164_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred164_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 25;}

                        else if ( (((synpred165_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred165_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred165_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred165_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred165_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||((synpred165_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 26;}

                        else if ( (((synpred166_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred166_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred166_BsjAntlr())) ) {s = 28;}

                        else if ( (((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))) ) {s = 29;}

                         
                        input.seek(index127_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_2 = input.LA(1);

                         
                        int index127_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred162_BsjAntlr()||(synpred162_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 31;}

                        else if ( ((synpred163_BsjAntlr()||(synpred163_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 23;}

                        else if ( ((synpred164_BsjAntlr()||(synpred164_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred164_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 25;}

                        else if ( ((synpred165_BsjAntlr()||(synpred165_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||(synpred165_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 26;}

                        else if ( (synpred166_BsjAntlr()) ) {s = 28;}

                         
                        input.seek(index127_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_3 = input.LA(1);

                         
                        int index127_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_4 = input.LA(1);

                         
                        int index127_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_5 = input.LA(1);

                         
                        int index127_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_6 = input.LA(1);

                         
                        int index127_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_7 = input.LA(1);

                         
                        int index127_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA127_8 = input.LA(1);

                         
                        int index127_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA127_9 = input.LA(1);

                         
                        int index127_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA127_10 = input.LA(1);

                         
                        int index127_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA127_11 = input.LA(1);

                         
                        int index127_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA127_12 = input.LA(1);

                         
                        int index127_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA127_13 = input.LA(1);

                         
                        int index127_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred164_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred165_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index127_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA127_14 = input.LA(1);

                         
                        int index127_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA127_15 = input.LA(1);

                         
                        int index127_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA127_16 = input.LA(1);

                         
                        int index127_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA127_17 = input.LA(1);

                         
                        int index127_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA127_18 = input.LA(1);

                         
                        int index127_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA127_19 = input.LA(1);

                         
                        int index127_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA127_20 = input.LA(1);

                         
                        int index127_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA127_21 = input.LA(1);

                         
                        int index127_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA127_22 = input.LA(1);

                         
                        int index127_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred162_BsjAntlr()) ) {s = 31;}

                        else if ( (synpred163_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index127_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA130_eotS = DFA130Data.DFA130_eotS;
    static final String DFA130_eofS = DFA130Data.DFA130_eofS;
    static final String DFA130_minS = DFA130Data.DFA130_minS;
    static final String DFA130_maxS = DFA130Data.DFA130_maxS;
    static final String DFA130_acceptS = DFA130Data.DFA130_acceptS;
    static final String DFA130_specialS = DFA130Data.DFA130_specialS;
    static final String[] DFA130_transitionS = DFA130Data.DFA130_transitionS;

    static final short[] DFA130_eot = DFA130Data.DFA130_eot;
    static final short[] DFA130_eof = DFA130Data.DFA130_eof;
    static final char[] DFA130_min = DFA130Data.DFA130_min;
    static final char[] DFA130_max = DFA130Data.DFA130_max;
    static final short[] DFA130_accept = DFA130Data.DFA130_accept;
    static final short[] DFA130_special = DFA130Data.DFA130_special;
    static final short[][] DFA130_transition = DFA130Data.DFA130_transition;


    static class DFA130Data {
        static final String DFA130_eotS =
            "\32\uffff";
        static final String DFA130_eofS =
            "\32\uffff";
        static final String DFA130_minS =
            "\1\24\1\0\30\uffff";
        static final String DFA130_maxS =
            "\1\u0080\1\0\30\uffff";
        static final String DFA130_acceptS =
            "\2\uffff\1\2\26\uffff\1\1";
        static final String DFA130_specialS =
            "\1\uffff\1\0\30\uffff}>";
        static final String[] DFA130_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\45\uffff"+
                "\1\2\2\uffff\1\2\4\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA130_eot = DFA.unpackEncodedString(DFA130_eotS);
        static final short[] DFA130_eof = DFA.unpackEncodedString(DFA130_eofS);
        static final char[] DFA130_min = DFA.unpackEncodedStringToUnsignedChars(DFA130_minS);
        static final char[] DFA130_max = DFA.unpackEncodedStringToUnsignedChars(DFA130_maxS);
        static final short[] DFA130_accept = DFA.unpackEncodedString(DFA130_acceptS);
        static final short[] DFA130_special = DFA.unpackEncodedString(DFA130_specialS);
        static final short[][] DFA130_transition;
        static {
            int numStates = DFA130_transitionS.length;
            DFA130_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA130_transition[i] = DFA.unpackEncodedString(DFA130_transitionS[i]);
            }
        }
    }
    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = DFA130_eot;
            this.eof = DFA130_eof;
            this.min = DFA130_min;
            this.max = DFA130_max;
            this.accept = DFA130_accept;
            this.special = DFA130_special;
            this.transition = DFA130_transition;
        }
        public String getDescription() {
            return "4219:1: interfaceMethodDeclaration returns [NodeUnion<? extends MethodDeclarationNode> ret] : ( splice[MethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc methodModifiers optionalTypeParameters methodReturnType id= identifier formalParameters ( arrayTypeCounter )? ( throwsClause )? ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred167_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 25;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA131_eotS = DFA131Data.DFA131_eotS;
    static final String DFA131_eofS = DFA131Data.DFA131_eofS;
    static final String DFA131_minS = DFA131Data.DFA131_minS;
    static final String DFA131_maxS = DFA131Data.DFA131_maxS;
    static final String DFA131_acceptS = DFA131Data.DFA131_acceptS;
    static final String DFA131_specialS = DFA131Data.DFA131_specialS;
    static final String[] DFA131_transitionS = DFA131Data.DFA131_transitionS;

    static final short[] DFA131_eot = DFA131Data.DFA131_eot;
    static final short[] DFA131_eof = DFA131Data.DFA131_eof;
    static final char[] DFA131_min = DFA131Data.DFA131_min;
    static final char[] DFA131_max = DFA131Data.DFA131_max;
    static final short[] DFA131_accept = DFA131Data.DFA131_accept;
    static final short[] DFA131_special = DFA131Data.DFA131_special;
    static final short[][] DFA131_transition = DFA131Data.DFA131_transition;


    static class DFA131Data {
        static final String DFA131_eotS =
            "\30\uffff";
        static final String DFA131_eofS =
            "\30\uffff";
        static final String DFA131_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA131_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA131_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA131_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA131_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA131_eot = DFA.unpackEncodedString(DFA131_eotS);
        static final short[] DFA131_eof = DFA.unpackEncodedString(DFA131_eofS);
        static final char[] DFA131_min = DFA.unpackEncodedStringToUnsignedChars(DFA131_minS);
        static final char[] DFA131_max = DFA.unpackEncodedStringToUnsignedChars(DFA131_maxS);
        static final short[] DFA131_accept = DFA.unpackEncodedString(DFA131_acceptS);
        static final short[] DFA131_special = DFA.unpackEncodedString(DFA131_specialS);
        static final short[][] DFA131_transition;
        static {
            int numStates = DFA131_transitionS.length;
            DFA131_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA131_transition[i] = DFA.unpackEncodedString(DFA131_transitionS[i]);
            }
        }
    }
    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = DFA131_eot;
            this.eof = DFA131_eof;
            this.min = DFA131_min;
            this.max = DFA131_max;
            this.accept = DFA131_accept;
            this.special = DFA131_special;
            this.transition = DFA131_transition;
        }
        public String getDescription() {
            return "4275:1: constantDeclaration returns [NodeUnion<? extends ConstantDeclarationNode> ret] : ( splice[ConstantDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc constantModifiers type variableDeclarators ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_1 = input.LA(1);

                         
                        int index131_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred170_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index131_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA143_eotS = DFA143Data.DFA143_eotS;
    static final String DFA143_eofS = DFA143Data.DFA143_eofS;
    static final String DFA143_minS = DFA143Data.DFA143_minS;
    static final String DFA143_maxS = DFA143Data.DFA143_maxS;
    static final String DFA143_acceptS = DFA143Data.DFA143_acceptS;
    static final String DFA143_specialS = DFA143Data.DFA143_specialS;
    static final String[] DFA143_transitionS = DFA143Data.DFA143_transitionS;

    static final short[] DFA143_eot = DFA143Data.DFA143_eot;
    static final short[] DFA143_eof = DFA143Data.DFA143_eof;
    static final char[] DFA143_min = DFA143Data.DFA143_min;
    static final char[] DFA143_max = DFA143Data.DFA143_max;
    static final short[] DFA143_accept = DFA143Data.DFA143_accept;
    static final short[] DFA143_special = DFA143Data.DFA143_special;
    static final short[][] DFA143_transition = DFA143Data.DFA143_transition;


    static class DFA143Data {
        static final String DFA143_eotS =
            "\13\uffff";
        static final String DFA143_eofS =
            "\13\uffff";
        static final String DFA143_minS =
            "\1\24\1\0\11\uffff";
        static final String DFA143_maxS =
            "\1\u0080\1\0\11\uffff";
        static final String DFA143_acceptS =
            "\2\uffff\1\1\1\2\7\uffff";
        static final String DFA143_specialS =
            "\1\0\1\1\11\uffff}>";
        static final String[] DFA143_transitionS = {
                "\1\2\24\uffff\1\3\1\uffff\1\3\2\uffff\1\3\5\uffff\1\3\4\uffff"+
                "\1\3\6\uffff\1\3\1\uffff\1\3\6\uffff\1\3\66\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA143_eot = DFA.unpackEncodedString(DFA143_eotS);
        static final short[] DFA143_eof = DFA.unpackEncodedString(DFA143_eofS);
        static final char[] DFA143_min = DFA.unpackEncodedStringToUnsignedChars(DFA143_minS);
        static final char[] DFA143_max = DFA.unpackEncodedStringToUnsignedChars(DFA143_maxS);
        static final short[] DFA143_accept = DFA.unpackEncodedString(DFA143_acceptS);
        static final short[] DFA143_special = DFA.unpackEncodedString(DFA143_specialS);
        static final short[][] DFA143_transition;
        static {
            int numStates = DFA143_transitionS.length;
            DFA143_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA143_transition[i] = DFA.unpackEncodedString(DFA143_transitionS[i]);
            }
        }
    }
    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = DFA143_eot;
            this.eof = DFA143_eof;
            this.min = DFA143_min;
            this.max = DFA143_max;
            this.accept = DFA143_accept;
            this.special = DFA143_special;
            this.transition = DFA143_transition;
        }
        public String getDescription() {
            return "4537:1: referenceType returns [NodeUnion<? extends ReferenceTypeNode> ret] : ( classOrInterfaceType ( arrayTypeCounter )? | primitiveType arrayTypeCounter );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA143_0 = input.LA(1);

                         
                        int index143_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA143_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA143_0==IDENTIFIER) ) {s = 2;}

                        else if ( (LA143_0==BOOLEAN||LA143_0==BYTE||LA143_0==CHAR||LA143_0==DOUBLE||LA143_0==FLOAT||LA143_0==INT||LA143_0==LONG||LA143_0==SHORT) ) {s = 3;}

                         
                        input.seek(index143_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA143_1 = input.LA(1);

                         
                        int index143_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred182_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred182_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred182_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred182_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred182_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 3;}

                         
                        input.seek(index143_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 143, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA145_eotS = DFA145Data.DFA145_eotS;
    static final String DFA145_eofS = DFA145Data.DFA145_eofS;
    static final String DFA145_minS = DFA145Data.DFA145_minS;
    static final String DFA145_maxS = DFA145Data.DFA145_maxS;
    static final String DFA145_acceptS = DFA145Data.DFA145_acceptS;
    static final String DFA145_specialS = DFA145Data.DFA145_specialS;
    static final String[] DFA145_transitionS = DFA145Data.DFA145_transitionS;

    static final short[] DFA145_eot = DFA145Data.DFA145_eot;
    static final short[] DFA145_eof = DFA145Data.DFA145_eof;
    static final char[] DFA145_min = DFA145Data.DFA145_min;
    static final char[] DFA145_max = DFA145Data.DFA145_max;
    static final short[] DFA145_accept = DFA145Data.DFA145_accept;
    static final short[] DFA145_special = DFA145Data.DFA145_special;
    static final short[][] DFA145_transition = DFA145Data.DFA145_transition;


    static class DFA145Data {
        static final String DFA145_eotS =
            "\14\uffff";
        static final String DFA145_eofS =
            "\14\uffff";
        static final String DFA145_minS =
            "\1\24\1\0\12\uffff";
        static final String DFA145_maxS =
            "\1\u0080\1\0\12\uffff";
        static final String DFA145_acceptS =
            "\2\uffff\1\2\10\uffff\1\1";
        static final String DFA145_specialS =
            "\1\0\1\1\12\uffff}>";
        static final String[] DFA145_transitionS = {
                "\1\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff\1\2\4\uffff"+
                "\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\66\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA145_eot = DFA.unpackEncodedString(DFA145_eotS);
        static final short[] DFA145_eof = DFA.unpackEncodedString(DFA145_eofS);
        static final char[] DFA145_min = DFA.unpackEncodedStringToUnsignedChars(DFA145_minS);
        static final char[] DFA145_max = DFA.unpackEncodedStringToUnsignedChars(DFA145_maxS);
        static final short[] DFA145_accept = DFA.unpackEncodedString(DFA145_acceptS);
        static final short[] DFA145_special = DFA.unpackEncodedString(DFA145_specialS);
        static final short[][] DFA145_transition;
        static {
            int numStates = DFA145_transitionS.length;
            DFA145_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA145_transition[i] = DFA.unpackEncodedString(DFA145_transitionS[i]);
            }
        }
    }
    class DFA145 extends DFA {

        public DFA145(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 145;
            this.eot = DFA145_eot;
            this.eof = DFA145_eof;
            this.min = DFA145_min;
            this.max = DFA145_max;
            this.accept = DFA145_accept;
            this.special = DFA145_special;
            this.transition = DFA145_transition;
        }
        public String getDescription() {
            return "4583:9: ( splice[TypeNode.class, Arrays.<Class<? extends Node>>asList(PrimitiveTypeNode.class, DeclaredTypeNode.class, VoidTypeNode.class)] | ( classOrInterfaceType | primitiveType ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA145_0 = input.LA(1);

                         
                        int index145_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA145_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA145_0==IDENTIFIER||LA145_0==BOOLEAN||LA145_0==BYTE||LA145_0==CHAR||LA145_0==DOUBLE||LA145_0==FLOAT||LA145_0==INT||LA145_0==LONG||LA145_0==SHORT) ) {s = 2;}

                         
                        input.seek(index145_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA145_1 = input.LA(1);

                         
                        int index145_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred183_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 11;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 2;}

                         
                        input.seek(index145_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 145, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA144_eotS = DFA144Data.DFA144_eotS;
    static final String DFA144_eofS = DFA144Data.DFA144_eofS;
    static final String DFA144_minS = DFA144Data.DFA144_minS;
    static final String DFA144_maxS = DFA144Data.DFA144_maxS;
    static final String DFA144_acceptS = DFA144Data.DFA144_acceptS;
    static final String DFA144_specialS = DFA144Data.DFA144_specialS;
    static final String[] DFA144_transitionS = DFA144Data.DFA144_transitionS;

    static final short[] DFA144_eot = DFA144Data.DFA144_eot;
    static final short[] DFA144_eof = DFA144Data.DFA144_eof;
    static final char[] DFA144_min = DFA144Data.DFA144_min;
    static final char[] DFA144_max = DFA144Data.DFA144_max;
    static final short[] DFA144_accept = DFA144Data.DFA144_accept;
    static final short[] DFA144_special = DFA144Data.DFA144_special;
    static final short[][] DFA144_transition = DFA144Data.DFA144_transition;


    static class DFA144Data {
        static final String DFA144_eotS =
            "\13\uffff";
        static final String DFA144_eofS =
            "\13\uffff";
        static final String DFA144_minS =
            "\1\24\1\0\11\uffff";
        static final String DFA144_maxS =
            "\1\u0080\1\0\11\uffff";
        static final String DFA144_acceptS =
            "\2\uffff\1\1\1\2\7\uffff";
        static final String DFA144_specialS =
            "\1\0\1\1\11\uffff}>";
        static final String[] DFA144_transitionS = {
                "\1\2\24\uffff\1\3\1\uffff\1\3\2\uffff\1\3\5\uffff\1\3\4\uffff"+
                "\1\3\6\uffff\1\3\1\uffff\1\3\6\uffff\1\3\66\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA144_eot = DFA.unpackEncodedString(DFA144_eotS);
        static final short[] DFA144_eof = DFA.unpackEncodedString(DFA144_eofS);
        static final char[] DFA144_min = DFA.unpackEncodedStringToUnsignedChars(DFA144_minS);
        static final char[] DFA144_max = DFA.unpackEncodedStringToUnsignedChars(DFA144_maxS);
        static final short[] DFA144_accept = DFA.unpackEncodedString(DFA144_acceptS);
        static final short[] DFA144_special = DFA.unpackEncodedString(DFA144_specialS);
        static final short[][] DFA144_transition;
        static {
            int numStates = DFA144_transitionS.length;
            DFA144_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA144_transition[i] = DFA.unpackEncodedString(DFA144_transitionS[i]);
            }
        }
    }
    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = DFA144_eot;
            this.eof = DFA144_eof;
            this.min = DFA144_min;
            this.max = DFA144_max;
            this.accept = DFA144_accept;
            this.special = DFA144_special;
            this.transition = DFA144_transition;
        }
        public String getDescription() {
            return "4590:13: ( classOrInterfaceType | primitiveType )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA144_0==IDENTIFIER) ) {s = 2;}

                        else if ( (LA144_0==BOOLEAN||LA144_0==BYTE||LA144_0==CHAR||LA144_0==DOUBLE||LA144_0==FLOAT||LA144_0==INT||LA144_0==LONG||LA144_0==SHORT) ) {s = 3;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred184_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred184_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred184_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred184_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred184_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 3;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA151_eotS = DFA151Data.DFA151_eotS;
    static final String DFA151_eofS = DFA151Data.DFA151_eofS;
    static final String DFA151_minS = DFA151Data.DFA151_minS;
    static final String DFA151_maxS = DFA151Data.DFA151_maxS;
    static final String DFA151_acceptS = DFA151Data.DFA151_acceptS;
    static final String DFA151_specialS = DFA151Data.DFA151_specialS;
    static final String[] DFA151_transitionS = DFA151Data.DFA151_transitionS;

    static final short[] DFA151_eot = DFA151Data.DFA151_eot;
    static final short[] DFA151_eof = DFA151Data.DFA151_eof;
    static final char[] DFA151_min = DFA151Data.DFA151_min;
    static final char[] DFA151_max = DFA151Data.DFA151_max;
    static final short[] DFA151_accept = DFA151Data.DFA151_accept;
    static final short[] DFA151_special = DFA151Data.DFA151_special;
    static final short[][] DFA151_transition = DFA151Data.DFA151_transition;


    static class DFA151Data {
        static final String DFA151_eotS =
            "\12\uffff";
        static final String DFA151_eofS =
            "\12\uffff";
        static final String DFA151_minS =
            "\1\51\11\uffff";
        static final String DFA151_maxS =
            "\1\u0080\11\uffff";
        static final String DFA151_acceptS =
            "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
        static final String DFA151_specialS =
            "\1\0\11\uffff}>";
        static final String[] DFA151_transitionS = {
                "\1\2\1\uffff\1\4\2\uffff\1\3\5\uffff\1\11\4\uffff\1\10\6\uffff"+
                "\1\6\1\uffff\1\7\6\uffff\1\5\66\uffff\1\1",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA151_eot = DFA.unpackEncodedString(DFA151_eotS);
        static final short[] DFA151_eof = DFA.unpackEncodedString(DFA151_eofS);
        static final char[] DFA151_min = DFA.unpackEncodedStringToUnsignedChars(DFA151_minS);
        static final char[] DFA151_max = DFA.unpackEncodedStringToUnsignedChars(DFA151_maxS);
        static final short[] DFA151_accept = DFA.unpackEncodedString(DFA151_acceptS);
        static final short[] DFA151_special = DFA.unpackEncodedString(DFA151_specialS);
        static final short[][] DFA151_transition;
        static {
            int numStates = DFA151_transitionS.length;
            DFA151_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA151_transition[i] = DFA.unpackEncodedString(DFA151_transitionS[i]);
            }
        }
    }
    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = DFA151_eot;
            this.eof = DFA151_eof;
            this.min = DFA151_min;
            this.max = DFA151_max;
            this.accept = DFA151_accept;
            this.special = DFA151_special;
            this.transition = DFA151_transition;
        }
        public String getDescription() {
            return "4677:1: primitiveType returns [NodeUnion<? extends PrimitiveTypeNode> ret] : ( splice[PrimitiveTypeNode.class, Arrays.<Class<? extends Node>>asList()] | 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_0 = input.LA(1);

                         
                        int index151_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA151_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA151_0==BOOLEAN) ) {s = 2;}

                        else if ( (LA151_0==CHAR) ) {s = 3;}

                        else if ( (LA151_0==BYTE) ) {s = 4;}

                        else if ( (LA151_0==SHORT) ) {s = 5;}

                        else if ( (LA151_0==INT) ) {s = 6;}

                        else if ( (LA151_0==LONG) ) {s = 7;}

                        else if ( (LA151_0==FLOAT) ) {s = 8;}

                        else if ( (LA151_0==DOUBLE) ) {s = 9;}

                         
                        input.seek(index151_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA153_eotS = DFA153Data.DFA153_eotS;
    static final String DFA153_eofS = DFA153Data.DFA153_eofS;
    static final String DFA153_minS = DFA153Data.DFA153_minS;
    static final String DFA153_maxS = DFA153Data.DFA153_maxS;
    static final String DFA153_acceptS = DFA153Data.DFA153_acceptS;
    static final String DFA153_specialS = DFA153Data.DFA153_specialS;
    static final String[] DFA153_transitionS = DFA153Data.DFA153_transitionS;

    static final short[] DFA153_eot = DFA153Data.DFA153_eot;
    static final short[] DFA153_eof = DFA153Data.DFA153_eof;
    static final char[] DFA153_min = DFA153Data.DFA153_min;
    static final char[] DFA153_max = DFA153Data.DFA153_max;
    static final short[] DFA153_accept = DFA153Data.DFA153_accept;
    static final short[] DFA153_special = DFA153Data.DFA153_special;
    static final short[][] DFA153_transition = DFA153Data.DFA153_transition;


    static class DFA153Data {
        static final String DFA153_eotS =
            "\15\uffff";
        static final String DFA153_eofS =
            "\15\uffff";
        static final String DFA153_minS =
            "\1\24\1\0\13\uffff";
        static final String DFA153_maxS =
            "\1\u0080\1\0\13\uffff";
        static final String DFA153_acceptS =
            "\2\uffff\1\2\11\uffff\1\1";
        static final String DFA153_specialS =
            "\1\uffff\1\0\13\uffff}>";
        static final String[] DFA153_transitionS = {
                "\1\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff\1\2\4\uffff"+
                "\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\27\uffff\1\2\36\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA153_eot = DFA.unpackEncodedString(DFA153_eotS);
        static final short[] DFA153_eof = DFA.unpackEncodedString(DFA153_eofS);
        static final char[] DFA153_min = DFA.unpackEncodedStringToUnsignedChars(DFA153_minS);
        static final char[] DFA153_max = DFA.unpackEncodedStringToUnsignedChars(DFA153_maxS);
        static final short[] DFA153_accept = DFA.unpackEncodedString(DFA153_acceptS);
        static final short[] DFA153_special = DFA.unpackEncodedString(DFA153_specialS);
        static final short[][] DFA153_transition;
        static {
            int numStates = DFA153_transitionS.length;
            DFA153_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA153_transition[i] = DFA.unpackEncodedString(DFA153_transitionS[i]);
            }
        }
    }
    class DFA153 extends DFA {

        public DFA153(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 153;
            this.eot = DFA153_eot;
            this.eof = DFA153_eof;
            this.min = DFA153_min;
            this.max = DFA153_max;
            this.accept = DFA153_accept;
            this.special = DFA153_special;
            this.transition = DFA153_transition;
        }
        public String getDescription() {
            return "4751:9: ( splice[TypeArgumentListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= typeArgument ( ',' b= typeArgument )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA153_1 = input.LA(1);

                         
                        int index153_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred199_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 12;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index153_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 153, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA155_eotS = DFA155Data.DFA155_eotS;
    static final String DFA155_eofS = DFA155Data.DFA155_eofS;
    static final String DFA155_minS = DFA155Data.DFA155_minS;
    static final String DFA155_maxS = DFA155Data.DFA155_maxS;
    static final String DFA155_acceptS = DFA155Data.DFA155_acceptS;
    static final String DFA155_specialS = DFA155Data.DFA155_specialS;
    static final String[] DFA155_transitionS = DFA155Data.DFA155_transitionS;

    static final short[] DFA155_eot = DFA155Data.DFA155_eot;
    static final short[] DFA155_eof = DFA155Data.DFA155_eof;
    static final char[] DFA155_min = DFA155Data.DFA155_min;
    static final char[] DFA155_max = DFA155Data.DFA155_max;
    static final short[] DFA155_accept = DFA155Data.DFA155_accept;
    static final short[] DFA155_special = DFA155Data.DFA155_special;
    static final short[][] DFA155_transition = DFA155Data.DFA155_transition;


    static class DFA155Data {
        static final String DFA155_eotS =
            "\15\uffff";
        static final String DFA155_eofS =
            "\15\uffff";
        static final String DFA155_minS =
            "\1\24\1\0\13\uffff";
        static final String DFA155_maxS =
            "\1\u0080\1\0\13\uffff";
        static final String DFA155_acceptS =
            "\2\uffff\1\2\10\uffff\1\3\1\1";
        static final String DFA155_specialS =
            "\1\0\1\1\13\uffff}>";
        static final String[] DFA155_transitionS = {
                "\1\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff\1\2\4\uffff"+
                "\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\27\uffff\1\13\36\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA155_eot = DFA.unpackEncodedString(DFA155_eotS);
        static final short[] DFA155_eof = DFA.unpackEncodedString(DFA155_eofS);
        static final char[] DFA155_min = DFA.unpackEncodedStringToUnsignedChars(DFA155_minS);
        static final char[] DFA155_max = DFA.unpackEncodedStringToUnsignedChars(DFA155_maxS);
        static final short[] DFA155_accept = DFA.unpackEncodedString(DFA155_acceptS);
        static final short[] DFA155_special = DFA.unpackEncodedString(DFA155_specialS);
        static final short[][] DFA155_transition;
        static {
            int numStates = DFA155_transitionS.length;
            DFA155_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA155_transition[i] = DFA.unpackEncodedString(DFA155_transitionS[i]);
            }
        }
    }
    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = DFA155_eot;
            this.eof = DFA155_eof;
            this.min = DFA155_min;
            this.max = DFA155_max;
            this.accept = DFA155_accept;
            this.special = DFA155_special;
            this.transition = DFA155_transition;
        }
        public String getDescription() {
            return "4828:1: typeArgument returns [NodeUnion<? extends TypeArgumentNode> ret] : ( splice[TypeArgumentNode.class, Arrays.<Class<? extends Node>>asList(ReferenceTypeNode.class, WildcardTypeNode.class)] | referenceType | wildcard );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_0 = input.LA(1);

                         
                        int index155_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA155_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA155_0==IDENTIFIER||LA155_0==BOOLEAN||LA155_0==BYTE||LA155_0==CHAR||LA155_0==DOUBLE||LA155_0==FLOAT||LA155_0==INT||LA155_0==LONG||LA155_0==SHORT) ) {s = 2;}

                        else if ( (LA155_0==QUES) ) {s = 11;}

                         
                        input.seek(index155_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred202_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 12;}

                        else if ( (((synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred203_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 11;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA160_eotS = DFA160Data.DFA160_eotS;
    static final String DFA160_eofS = DFA160Data.DFA160_eofS;
    static final String DFA160_minS = DFA160Data.DFA160_minS;
    static final String DFA160_maxS = DFA160Data.DFA160_maxS;
    static final String DFA160_acceptS = DFA160Data.DFA160_acceptS;
    static final String DFA160_specialS = DFA160Data.DFA160_specialS;
    static final String[] DFA160_transitionS = DFA160Data.DFA160_transitionS;

    static final short[] DFA160_eot = DFA160Data.DFA160_eot;
    static final short[] DFA160_eof = DFA160Data.DFA160_eof;
    static final char[] DFA160_min = DFA160Data.DFA160_min;
    static final char[] DFA160_max = DFA160Data.DFA160_max;
    static final short[] DFA160_accept = DFA160Data.DFA160_accept;
    static final short[] DFA160_special = DFA160Data.DFA160_special;
    static final short[][] DFA160_transition = DFA160Data.DFA160_transition;


    static class DFA160Data {
        static final String DFA160_eotS =
            "\32\uffff";
        static final String DFA160_eofS =
            "\32\uffff";
        static final String DFA160_minS =
            "\1\24\26\0\3\uffff";
        static final String DFA160_maxS =
            "\1\u0080\26\0\3\uffff";
        static final String DFA160_acceptS =
            "\27\uffff\1\1\1\2\1\3";
        static final String DFA160_specialS =
            "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
            "\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\3\uffff}>";
        static final String[] DFA160_transitionS = {
                "\1\16\22\uffff\1\6\1\uffff\1\17\1\uffff\1\21\2\uffff\1\20\5"+
                "\uffff\1\26\2\uffff\1\7\1\uffff\1\25\6\uffff\1\23\1\uffff\1"+
                "\24\1\10\1\uffff\1\5\1\4\1\3\1\uffff\1\22\1\11\1\12\1\uffff"+
                "\1\13\1\uffff\1\14\2\uffff\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                ""
        };
        static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
        static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
        static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
        static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
        static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
        static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
        static final short[][] DFA160_transition;
        static {
            int numStates = DFA160_transitionS.length;
            DFA160_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
            }
        }
    }
    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = DFA160_eot;
            this.eof = DFA160_eof;
            this.min = DFA160_min;
            this.max = DFA160_max;
            this.accept = DFA160_accept;
            this.special = DFA160_special;
            this.transition = DFA160_transition;
        }
        public String getDescription() {
            return "4915:1: formalParameterDecls returns [NodeUnion<? extends VariableListNode> parameters, NodeUnion<? extends VariableNode> varargParameter] : ( normalParameterDecls ',' ellipsisParameterDecl | normalParameterDecls | ellipsisParameterDecl );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA160_1 = input.LA(1);

                         
                        int index160_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred208_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred208_BsjAntlr())) ) {s = 23;}

                        else if ( (((synpred209_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred209_BsjAntlr())) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA160_2 = input.LA(1);

                         
                        int index160_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA160_3 = input.LA(1);

                         
                        int index160_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA160_4 = input.LA(1);

                         
                        int index160_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA160_5 = input.LA(1);

                         
                        int index160_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA160_6 = input.LA(1);

                         
                        int index160_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA160_7 = input.LA(1);

                         
                        int index160_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA160_8 = input.LA(1);

                         
                        int index160_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA160_9 = input.LA(1);

                         
                        int index160_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA160_10 = input.LA(1);

                         
                        int index160_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA160_11 = input.LA(1);

                         
                        int index160_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA160_12 = input.LA(1);

                         
                        int index160_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA160_13 = input.LA(1);

                         
                        int index160_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA160_14 = input.LA(1);

                         
                        int index160_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA160_15 = input.LA(1);

                         
                        int index160_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA160_16 = input.LA(1);

                         
                        int index160_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA160_17 = input.LA(1);

                         
                        int index160_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA160_18 = input.LA(1);

                         
                        int index160_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA160_19 = input.LA(1);

                         
                        int index160_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA160_20 = input.LA(1);

                         
                        int index160_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA160_21 = input.LA(1);

                         
                        int index160_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA160_22 = input.LA(1);

                         
                        int index160_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred208_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred209_BsjAntlr()) ) {s = 24;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index160_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 160, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA162_eotS = DFA162Data.DFA162_eotS;
    static final String DFA162_eofS = DFA162Data.DFA162_eofS;
    static final String DFA162_minS = DFA162Data.DFA162_minS;
    static final String DFA162_maxS = DFA162Data.DFA162_maxS;
    static final String DFA162_acceptS = DFA162Data.DFA162_acceptS;
    static final String DFA162_specialS = DFA162Data.DFA162_specialS;
    static final String[] DFA162_transitionS = DFA162Data.DFA162_transitionS;

    static final short[] DFA162_eot = DFA162Data.DFA162_eot;
    static final short[] DFA162_eof = DFA162Data.DFA162_eof;
    static final char[] DFA162_min = DFA162Data.DFA162_min;
    static final char[] DFA162_max = DFA162Data.DFA162_max;
    static final short[] DFA162_accept = DFA162Data.DFA162_accept;
    static final short[] DFA162_special = DFA162Data.DFA162_special;
    static final short[][] DFA162_transition = DFA162Data.DFA162_transition;


    static class DFA162Data {
        static final String DFA162_eotS =
            "\30\uffff";
        static final String DFA162_eofS =
            "\30\uffff";
        static final String DFA162_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA162_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA162_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA162_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA162_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA162_eot = DFA.unpackEncodedString(DFA162_eotS);
        static final short[] DFA162_eof = DFA.unpackEncodedString(DFA162_eofS);
        static final char[] DFA162_min = DFA.unpackEncodedStringToUnsignedChars(DFA162_minS);
        static final char[] DFA162_max = DFA.unpackEncodedStringToUnsignedChars(DFA162_maxS);
        static final short[] DFA162_accept = DFA.unpackEncodedString(DFA162_acceptS);
        static final short[] DFA162_special = DFA.unpackEncodedString(DFA162_specialS);
        static final short[][] DFA162_transition;
        static {
            int numStates = DFA162_transitionS.length;
            DFA162_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA162_transition[i] = DFA.unpackEncodedString(DFA162_transitionS[i]);
            }
        }
    }
    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = DFA162_eot;
            this.eof = DFA162_eof;
            this.min = DFA162_min;
            this.max = DFA162_max;
            this.accept = DFA162_accept;
            this.special = DFA162_special;
            this.transition = DFA162_transition;
        }
        public String getDescription() {
            return "4955:9: ( splice[VariableListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= normalParameterDecl ( ',' b= normalParameterDecl )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_1 = input.LA(1);

                         
                        int index162_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred210_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index162_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA165_eotS = DFA165Data.DFA165_eotS;
    static final String DFA165_eofS = DFA165Data.DFA165_eofS;
    static final String DFA165_minS = DFA165Data.DFA165_minS;
    static final String DFA165_maxS = DFA165Data.DFA165_maxS;
    static final String DFA165_acceptS = DFA165Data.DFA165_acceptS;
    static final String DFA165_specialS = DFA165Data.DFA165_specialS;
    static final String[] DFA165_transitionS = DFA165Data.DFA165_transitionS;

    static final short[] DFA165_eot = DFA165Data.DFA165_eot;
    static final short[] DFA165_eof = DFA165Data.DFA165_eof;
    static final char[] DFA165_min = DFA165Data.DFA165_min;
    static final char[] DFA165_max = DFA165Data.DFA165_max;
    static final short[] DFA165_accept = DFA165Data.DFA165_accept;
    static final short[] DFA165_special = DFA165Data.DFA165_special;
    static final short[][] DFA165_transition = DFA165Data.DFA165_transition;


    static class DFA165Data {
        static final String DFA165_eotS =
            "\30\uffff";
        static final String DFA165_eofS =
            "\30\uffff";
        static final String DFA165_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA165_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA165_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA165_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA165_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA165_eot = DFA.unpackEncodedString(DFA165_eotS);
        static final short[] DFA165_eof = DFA.unpackEncodedString(DFA165_eofS);
        static final char[] DFA165_min = DFA.unpackEncodedStringToUnsignedChars(DFA165_minS);
        static final char[] DFA165_max = DFA.unpackEncodedStringToUnsignedChars(DFA165_maxS);
        static final short[] DFA165_accept = DFA.unpackEncodedString(DFA165_acceptS);
        static final short[] DFA165_special = DFA.unpackEncodedString(DFA165_specialS);
        static final short[][] DFA165_transition;
        static {
            int numStates = DFA165_transitionS.length;
            DFA165_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA165_transition[i] = DFA.unpackEncodedString(DFA165_transitionS[i]);
            }
        }
    }
    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = DFA165_eot;
            this.eof = DFA165_eof;
            this.min = DFA165_min;
            this.max = DFA165_max;
            this.accept = DFA165_accept;
            this.special = DFA165_special;
            this.transition = DFA165_transition;
        }
        public String getDescription() {
            return "5024:1: normalParameterDecl returns [NodeUnion<? extends VariableNode> ret] : ( splice[VariableNode.class, Arrays.<Class<? extends Node>>asList()] | mod= variableModifiers t= type id= identifier ( arrayTypeCounter )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_1 = input.LA(1);

                         
                        int index165_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred213_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index165_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA168_eotS = DFA168Data.DFA168_eotS;
    static final String DFA168_eofS = DFA168Data.DFA168_eofS;
    static final String DFA168_minS = DFA168Data.DFA168_minS;
    static final String DFA168_maxS = DFA168Data.DFA168_maxS;
    static final String DFA168_acceptS = DFA168Data.DFA168_acceptS;
    static final String DFA168_specialS = DFA168Data.DFA168_specialS;
    static final String[] DFA168_transitionS = DFA168Data.DFA168_transitionS;

    static final short[] DFA168_eot = DFA168Data.DFA168_eot;
    static final short[] DFA168_eof = DFA168Data.DFA168_eof;
    static final char[] DFA168_min = DFA168Data.DFA168_min;
    static final char[] DFA168_max = DFA168Data.DFA168_max;
    static final short[] DFA168_accept = DFA168Data.DFA168_accept;
    static final short[] DFA168_special = DFA168Data.DFA168_special;
    static final short[][] DFA168_transition = DFA168Data.DFA168_transition;


    static class DFA168Data {
        static final String DFA168_eotS =
            "\35\uffff";
        static final String DFA168_eofS =
            "\35\uffff";
        static final String DFA168_minS =
            "\1\4\3\0\31\uffff";
        static final String DFA168_maxS =
            "\1\u0080\3\0\31\uffff";
        static final String DFA168_acceptS =
            "\4\uffff\1\3\11\uffff\2\3\13\uffff\1\1\1\2";
        static final String DFA168_specialS =
            "\1\0\1\1\1\2\1\3\31\uffff}>";
        static final String[] DFA168_transitionS = {
                "\1\16\3\uffff\1\17\1\3\12\4\1\17\24\uffff\1\17\1\uffff\1\17"+
                "\2\uffff\1\17\5\uffff\1\17\4\uffff\1\17\6\uffff\1\17\1\uffff"+
                "\1\17\6\uffff\1\17\7\uffff\1\17\2\uffff\1\17\46\uffff\1\2\4"+
                "\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA168_eot = DFA.unpackEncodedString(DFA168_eotS);
        static final short[] DFA168_eof = DFA.unpackEncodedString(DFA168_eofS);
        static final char[] DFA168_min = DFA.unpackEncodedStringToUnsignedChars(DFA168_minS);
        static final char[] DFA168_max = DFA.unpackEncodedStringToUnsignedChars(DFA168_maxS);
        static final short[] DFA168_accept = DFA.unpackEncodedString(DFA168_acceptS);
        static final short[] DFA168_special = DFA.unpackEncodedString(DFA168_specialS);
        static final short[][] DFA168_transition;
        static {
            int numStates = DFA168_transitionS.length;
            DFA168_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA168_transition[i] = DFA.unpackEncodedString(DFA168_transitionS[i]);
            }
        }
    }
    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = DFA168_eot;
            this.eof = DFA168_eof;
            this.min = DFA168_min;
            this.max = DFA168_max;
            this.accept = DFA168_accept;
            this.special = DFA168_special;
            this.transition = DFA168_transition;
        }
        public String getDescription() {
            return "5124:1: explicitConstructorInvocation returns [NodeUnion<? extends ConstructorInvocationNode> ret] : ( splice[ConstructorInvocationNode.class, Arrays.<Class<? extends Node>>asList()] | alternateConstructorInvocation | superclassConstructorInvocation );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA168_0 = input.LA(1);

                         
                        int index168_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA168_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA168_0==LT) ) {s = 2;}

                        else if ( (LA168_0==THIS) ) {s = 3;}

                        else if ( ((LA168_0>=NEW && LA168_0<=NULL)) ) {s = 4;}

                        else if ( (LA168_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 14;}

                        else if ( (LA168_0==SUPER||LA168_0==IDENTIFIER||LA168_0==BOOLEAN||LA168_0==BYTE||LA168_0==CHAR||LA168_0==DOUBLE||LA168_0==FLOAT||LA168_0==INT||LA168_0==LONG||LA168_0==SHORT||LA168_0==VOID||LA168_0==LPAREN) ) {s = 15;}

                         
                        input.seek(index168_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA168_1 = input.LA(1);

                         
                        int index168_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred217_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 27;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 15;}

                         
                        input.seek(index168_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA168_2 = input.LA(1);

                         
                        int index168_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_BsjAntlr()) ) {s = 28;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index168_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA168_3 = input.LA(1);

                         
                        int index168_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_BsjAntlr()) ) {s = 28;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index168_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 168, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA172_eotS = DFA172Data.DFA172_eotS;
    static final String DFA172_eofS = DFA172Data.DFA172_eofS;
    static final String DFA172_minS = DFA172Data.DFA172_minS;
    static final String DFA172_maxS = DFA172Data.DFA172_maxS;
    static final String DFA172_acceptS = DFA172Data.DFA172_acceptS;
    static final String DFA172_specialS = DFA172Data.DFA172_specialS;
    static final String[] DFA172_transitionS = DFA172Data.DFA172_transitionS;

    static final short[] DFA172_eot = DFA172Data.DFA172_eot;
    static final short[] DFA172_eof = DFA172Data.DFA172_eof;
    static final char[] DFA172_min = DFA172Data.DFA172_min;
    static final char[] DFA172_max = DFA172Data.DFA172_max;
    static final short[] DFA172_accept = DFA172Data.DFA172_accept;
    static final short[] DFA172_special = DFA172Data.DFA172_special;
    static final short[][] DFA172_transition = DFA172Data.DFA172_transition;


    static class DFA172Data {
        static final String DFA172_eotS =
            "\45\uffff";
        static final String DFA172_eofS =
            "\45\uffff";
        static final String DFA172_minS =
            "\1\4\3\0\41\uffff";
        static final String DFA172_maxS =
            "\1\u0080\3\0\41\uffff";
        static final String DFA172_acceptS =
            "\4\uffff\1\2\36\uffff\1\1\1\3";
        static final String DFA172_specialS =
            "\1\uffff\1\0\1\1\1\2\41\uffff}>";
        static final String[] DFA172_transitionS = {
                "\1\4\3\uffff\14\4\1\2\24\uffff\1\4\1\uffff\1\4\2\uffff\1\4\5"+
                "\uffff\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7"+
                "\uffff\1\4\2\uffff\1\4\1\3\1\4\10\uffff\2\4\5\uffff\4\4\16\uffff"+
                "\1\4\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA172_eot = DFA.unpackEncodedString(DFA172_eotS);
        static final short[] DFA172_eof = DFA.unpackEncodedString(DFA172_eofS);
        static final char[] DFA172_min = DFA.unpackEncodedStringToUnsignedChars(DFA172_minS);
        static final char[] DFA172_max = DFA.unpackEncodedStringToUnsignedChars(DFA172_maxS);
        static final short[] DFA172_accept = DFA.unpackEncodedString(DFA172_acceptS);
        static final short[] DFA172_special = DFA.unpackEncodedString(DFA172_specialS);
        static final short[][] DFA172_transition;
        static {
            int numStates = DFA172_transitionS.length;
            DFA172_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA172_transition[i] = DFA.unpackEncodedString(DFA172_transitionS[i]);
            }
        }
    }
    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = DFA172_eot;
            this.eof = DFA172_eof;
            this.min = DFA172_min;
            this.max = DFA172_max;
            this.accept = DFA172_accept;
            this.special = DFA172_special;
            this.transition = DFA172_transition;
        }
        public String getDescription() {
            return "5253:17: ( optionalElementValuePairs | elementValue )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA172_1 = input.LA(1);

                         
                        int index172_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred223_BsjAntlr()||(synpred223_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 35;}

                        else if ( (((synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred224_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred224_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 4;}

                         
                        input.seek(index172_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA172_2 = input.LA(1);

                         
                        int index172_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_BsjAntlr()) ) {s = 35;}

                        else if ( (synpred224_BsjAntlr()) ) {s = 4;}

                         
                        input.seek(index172_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA172_3 = input.LA(1);

                         
                        int index172_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred223_BsjAntlr()) ) {s = 35;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index172_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 172, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA179_eotS = DFA179Data.DFA179_eotS;
    static final String DFA179_eofS = DFA179Data.DFA179_eofS;
    static final String DFA179_minS = DFA179Data.DFA179_minS;
    static final String DFA179_maxS = DFA179Data.DFA179_maxS;
    static final String DFA179_acceptS = DFA179Data.DFA179_acceptS;
    static final String DFA179_specialS = DFA179Data.DFA179_specialS;
    static final String[] DFA179_transitionS = DFA179Data.DFA179_transitionS;

    static final short[] DFA179_eot = DFA179Data.DFA179_eot;
    static final short[] DFA179_eof = DFA179Data.DFA179_eof;
    static final char[] DFA179_min = DFA179Data.DFA179_min;
    static final char[] DFA179_max = DFA179Data.DFA179_max;
    static final short[] DFA179_accept = DFA179Data.DFA179_accept;
    static final short[] DFA179_special = DFA179Data.DFA179_special;
    static final short[][] DFA179_transition = DFA179Data.DFA179_transition;


    static class DFA179Data {
        static final String DFA179_eotS =
            "\43\uffff";
        static final String DFA179_eofS =
            "\43\uffff";
        static final String DFA179_minS =
            "\1\4\1\0\41\uffff";
        static final String DFA179_maxS =
            "\1\u0080\1\0\41\uffff";
        static final String DFA179_acceptS =
            "\2\uffff\1\2\35\uffff\1\3\1\4\1\1";
        static final String DFA179_specialS =
            "\1\0\1\1\41\uffff}>";
        static final String[] DFA179_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\41\10\uffff\2\2\5\uffff\4\2\16\uffff"+
                "\1\40\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA179_eot = DFA.unpackEncodedString(DFA179_eotS);
        static final short[] DFA179_eof = DFA.unpackEncodedString(DFA179_eofS);
        static final char[] DFA179_min = DFA.unpackEncodedStringToUnsignedChars(DFA179_minS);
        static final char[] DFA179_max = DFA.unpackEncodedStringToUnsignedChars(DFA179_maxS);
        static final short[] DFA179_accept = DFA.unpackEncodedString(DFA179_acceptS);
        static final short[] DFA179_special = DFA.unpackEncodedString(DFA179_specialS);
        static final short[][] DFA179_transition;
        static {
            int numStates = DFA179_transitionS.length;
            DFA179_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA179_transition[i] = DFA.unpackEncodedString(DFA179_transitionS[i]);
            }
        }
    }
    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = DFA179_eot;
            this.eof = DFA179_eof;
            this.min = DFA179_min;
            this.max = DFA179_max;
            this.accept = DFA179_accept;
            this.special = DFA179_special;
            this.transition = DFA179_transition;
        }
        public String getDescription() {
            return "5400:1: elementValue returns [NodeUnion<? extends AnnotationValueNode> ret] : ( splice[AnnotationValueNode.class, Arrays.<Class<? extends Node>>asList(AnnotationArrayValueNode.class)] | conditionalExpression | annotation | elementValueArrayInitializer );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_0 = input.LA(1);

                         
                        int index179_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA179_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA179_0==CODELITERAL_START||(LA179_0>=SUPER && LA179_0<=IDENTIFIER)||LA179_0==BOOLEAN||LA179_0==BYTE||LA179_0==CHAR||LA179_0==DOUBLE||LA179_0==FLOAT||LA179_0==INT||LA179_0==LONG||LA179_0==SHORT||LA179_0==VOID||LA179_0==LPAREN||(LA179_0>=BANG && LA179_0<=TILDE)||(LA179_0>=PLUSPLUS && LA179_0<=SUB)) ) {s = 2;}

                        else if ( (LA179_0==MONKEYS_AT) ) {s = 32;}

                        else if ( (LA179_0==LBRACE) ) {s = 33;}

                         
                        input.seek(index179_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA179_1 = input.LA(1);

                         
                        int index179_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred230_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 34;}

                        else if ( (((synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred231_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred231_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( ((synpred232_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 32;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 33;}

                         
                        input.seek(index179_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA182_eotS = DFA182Data.DFA182_eotS;
    static final String DFA182_eofS = DFA182Data.DFA182_eofS;
    static final String DFA182_minS = DFA182Data.DFA182_minS;
    static final String DFA182_maxS = DFA182Data.DFA182_maxS;
    static final String DFA182_acceptS = DFA182Data.DFA182_acceptS;
    static final String DFA182_specialS = DFA182Data.DFA182_specialS;
    static final String[] DFA182_transitionS = DFA182Data.DFA182_transitionS;

    static final short[] DFA182_eot = DFA182Data.DFA182_eot;
    static final short[] DFA182_eof = DFA182Data.DFA182_eof;
    static final char[] DFA182_min = DFA182Data.DFA182_min;
    static final char[] DFA182_max = DFA182Data.DFA182_max;
    static final short[] DFA182_accept = DFA182Data.DFA182_accept;
    static final short[] DFA182_special = DFA182Data.DFA182_special;
    static final short[][] DFA182_transition = DFA182Data.DFA182_transition;


    static class DFA182Data {
        static final String DFA182_eotS =
            "\43\uffff";
        static final String DFA182_eofS =
            "\43\uffff";
        static final String DFA182_minS =
            "\1\4\1\0\41\uffff";
        static final String DFA182_maxS =
            "\1\u0080\1\0\41\uffff";
        static final String DFA182_acceptS =
            "\2\uffff\1\2\37\uffff\1\1";
        static final String DFA182_specialS =
            "\1\uffff\1\0\41\uffff}>";
        static final String[] DFA182_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\10\uffff\2\2\5\uffff\4\2\16\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA182_eot = DFA.unpackEncodedString(DFA182_eotS);
        static final short[] DFA182_eof = DFA.unpackEncodedString(DFA182_eofS);
        static final char[] DFA182_min = DFA.unpackEncodedStringToUnsignedChars(DFA182_minS);
        static final char[] DFA182_max = DFA.unpackEncodedStringToUnsignedChars(DFA182_maxS);
        static final short[] DFA182_accept = DFA.unpackEncodedString(DFA182_acceptS);
        static final short[] DFA182_special = DFA.unpackEncodedString(DFA182_specialS);
        static final short[][] DFA182_transition;
        static {
            int numStates = DFA182_transitionS.length;
            DFA182_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA182_transition[i] = DFA.unpackEncodedString(DFA182_transitionS[i]);
            }
        }
    }
    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = DFA182_eot;
            this.eof = DFA182_eof;
            this.min = DFA182_min;
            this.max = DFA182_max;
            this.accept = DFA182_accept;
            this.special = DFA182_special;
            this.transition = DFA182_transition;
        }
        public String getDescription() {
            return "5442:9: ( splice[AnnotationValueListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= elementValue ( ',' b= elementValue )* ) ( ',' )? )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_1 = input.LA(1);

                         
                        int index182_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred233_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index182_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA185_eotS = DFA185Data.DFA185_eotS;
    static final String DFA185_eofS = DFA185Data.DFA185_eofS;
    static final String DFA185_minS = DFA185Data.DFA185_minS;
    static final String DFA185_maxS = DFA185Data.DFA185_maxS;
    static final String DFA185_acceptS = DFA185Data.DFA185_acceptS;
    static final String DFA185_specialS = DFA185Data.DFA185_specialS;
    static final String[] DFA185_transitionS = DFA185Data.DFA185_transitionS;

    static final short[] DFA185_eot = DFA185Data.DFA185_eot;
    static final short[] DFA185_eof = DFA185Data.DFA185_eof;
    static final char[] DFA185_min = DFA185Data.DFA185_min;
    static final char[] DFA185_max = DFA185Data.DFA185_max;
    static final short[] DFA185_accept = DFA185Data.DFA185_accept;
    static final short[] DFA185_special = DFA185Data.DFA185_special;
    static final short[][] DFA185_transition = DFA185Data.DFA185_transition;


    static class DFA185Data {
        static final String DFA185_eotS =
            "\17\uffff";
        static final String DFA185_eofS =
            "\17\uffff";
        static final String DFA185_minS =
            "\1\47\1\0\15\uffff";
        static final String DFA185_maxS =
            "\1\u0080\1\0\15\uffff";
        static final String DFA185_acceptS =
            "\2\uffff\1\2\13\uffff\1\1";
        static final String DFA185_specialS =
            "\1\0\1\1\15\uffff}>";
        static final String[] DFA185_transitionS = {
                "\1\2\17\uffff\1\2\13\uffff\1\2\1\uffff\3\2\2\uffff\2\2\1\uffff"+
                "\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA185_eot = DFA.unpackEncodedString(DFA185_eotS);
        static final short[] DFA185_eof = DFA.unpackEncodedString(DFA185_eofS);
        static final char[] DFA185_min = DFA.unpackEncodedStringToUnsignedChars(DFA185_minS);
        static final char[] DFA185_max = DFA.unpackEncodedStringToUnsignedChars(DFA185_maxS);
        static final short[] DFA185_accept = DFA.unpackEncodedString(DFA185_acceptS);
        static final short[] DFA185_special = DFA.unpackEncodedString(DFA185_specialS);
        static final short[][] DFA185_transition;
        static {
            int numStates = DFA185_transitionS.length;
            DFA185_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA185_transition[i] = DFA.unpackEncodedString(DFA185_transitionS[i]);
            }
        }
    }
    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = DFA185_eot;
            this.eof = DFA185_eof;
            this.min = DFA185_min;
            this.max = DFA185_max;
            this.accept = DFA185_accept;
            this.special = DFA185_special;
            this.transition = DFA185_transition;
        }
        public String getDescription() {
            return "5544:1: annotationTypeDeclaration returns [NodeUnion<? extends AnnotationDeclarationNode> ret] : ( splice[AnnotationDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationModifiers '@' 'interface' id= identifier annotationTypeBody );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA185_0 = input.LA(1);

                         
                        int index185_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA185_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA185_0==ABSTRACT||LA185_0==FINAL||LA185_0==NATIVE||(LA185_0>=PRIVATE && LA185_0<=PUBLIC)||(LA185_0>=STATIC && LA185_0<=STRICTFP)||LA185_0==SYNCHRONIZED||LA185_0==TRANSIENT||LA185_0==VOLATILE||LA185_0==MONKEYS_AT) ) {s = 2;}

                         
                        input.seek(index185_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA185_1 = input.LA(1);

                         
                        int index185_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred238_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 14;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                         
                        input.seek(index185_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 185, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA188_eotS = DFA188Data.DFA188_eotS;
    static final String DFA188_eofS = DFA188Data.DFA188_eofS;
    static final String DFA188_minS = DFA188Data.DFA188_minS;
    static final String DFA188_maxS = DFA188Data.DFA188_maxS;
    static final String DFA188_acceptS = DFA188Data.DFA188_acceptS;
    static final String DFA188_specialS = DFA188Data.DFA188_specialS;
    static final String[] DFA188_transitionS = DFA188Data.DFA188_transitionS;

    static final short[] DFA188_eot = DFA188Data.DFA188_eot;
    static final short[] DFA188_eof = DFA188Data.DFA188_eof;
    static final char[] DFA188_min = DFA188Data.DFA188_min;
    static final char[] DFA188_max = DFA188Data.DFA188_max;
    static final short[] DFA188_accept = DFA188Data.DFA188_accept;
    static final short[] DFA188_special = DFA188Data.DFA188_special;
    static final short[][] DFA188_transition = DFA188Data.DFA188_transition;


    static class DFA188Data {
        static final String DFA188_eotS =
            "\35\uffff";
        static final String DFA188_eofS =
            "\35\uffff";
        static final String DFA188_minS =
            "\1\24\1\0\33\uffff";
        static final String DFA188_maxS =
            "\1\u0080\1\0\33\uffff";
        static final String DFA188_acceptS =
            "\2\uffff\1\2\31\uffff\1\1";
        static final String DFA188_specialS =
            "\1\uffff\1\0\33\uffff}>";
        static final String[] DFA188_transitionS = {
                "\1\2\4\uffff\1\2\15\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff"+
                "\2\2\4\uffff\1\2\1\uffff\2\2\1\uffff\1\2\6\uffff\4\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\7\uffff"+
                "\1\2\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA188_eot = DFA.unpackEncodedString(DFA188_eotS);
        static final short[] DFA188_eof = DFA.unpackEncodedString(DFA188_eofS);
        static final char[] DFA188_min = DFA.unpackEncodedStringToUnsignedChars(DFA188_minS);
        static final char[] DFA188_max = DFA.unpackEncodedStringToUnsignedChars(DFA188_maxS);
        static final short[] DFA188_accept = DFA.unpackEncodedString(DFA188_acceptS);
        static final short[] DFA188_special = DFA.unpackEncodedString(DFA188_specialS);
        static final short[][] DFA188_transition;
        static {
            int numStates = DFA188_transitionS.length;
            DFA188_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA188_transition[i] = DFA.unpackEncodedString(DFA188_transitionS[i]);
            }
        }
    }
    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = DFA188_eot;
            this.eof = DFA188_eof;
            this.min = DFA188_min;
            this.max = DFA188_max;
            this.accept = DFA188_accept;
            this.special = DFA188_special;
            this.transition = DFA188_transition;
        }
        public String getDescription() {
            return "5609:9: ( splice[AnnotationMemberListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= annotationTypeElementDeclaration (b= annotationTypeElementDeclaration )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA188_1 = input.LA(1);

                         
                        int index188_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred240_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 28;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index188_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 188, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA190_eotS = DFA190Data.DFA190_eotS;
    static final String DFA190_eofS = DFA190Data.DFA190_eofS;
    static final String DFA190_minS = DFA190Data.DFA190_minS;
    static final String DFA190_maxS = DFA190Data.DFA190_maxS;
    static final String DFA190_acceptS = DFA190Data.DFA190_acceptS;
    static final String DFA190_specialS = DFA190Data.DFA190_specialS;
    static final String[] DFA190_transitionS = DFA190Data.DFA190_transitionS;

    static final short[] DFA190_eot = DFA190Data.DFA190_eot;
    static final short[] DFA190_eof = DFA190Data.DFA190_eof;
    static final char[] DFA190_min = DFA190Data.DFA190_min;
    static final char[] DFA190_max = DFA190Data.DFA190_max;
    static final short[] DFA190_accept = DFA190Data.DFA190_accept;
    static final short[] DFA190_special = DFA190Data.DFA190_special;
    static final short[][] DFA190_transition = DFA190Data.DFA190_transition;


    static class DFA190Data {
        static final String DFA190_eotS =
            "\37\uffff";
        static final String DFA190_eofS =
            "\37\uffff";
        static final String DFA190_minS =
            "\1\24\26\0\10\uffff";
        static final String DFA190_maxS =
            "\1\u0080\26\0\10\uffff";
        static final String DFA190_acceptS =
            "\27\uffff\1\3\1\4\1\5\1\7\1\10\1\1\1\2\1\6";
        static final String DFA190_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\10\uffff}>";
        static final String[] DFA190_transitionS = {
                "\1\16\4\uffff\1\33\15\uffff\1\6\1\uffff\1\17\1\uffff\1\21\2"+
                "\uffff\1\20\1\27\4\uffff\1\26\1\uffff\1\31\1\7\1\uffff\1\25"+
                "\6\uffff\1\23\1\30\1\24\1\10\1\uffff\1\5\1\4\1\3\1\uffff\1\22"+
                "\1\11\1\12\1\uffff\1\13\1\uffff\1\14\2\uffff\1\15\7\uffff\1"+
                "\32\35\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA190_eot = DFA.unpackEncodedString(DFA190_eotS);
        static final short[] DFA190_eof = DFA.unpackEncodedString(DFA190_eofS);
        static final char[] DFA190_min = DFA.unpackEncodedStringToUnsignedChars(DFA190_minS);
        static final char[] DFA190_max = DFA.unpackEncodedStringToUnsignedChars(DFA190_maxS);
        static final short[] DFA190_accept = DFA.unpackEncodedString(DFA190_acceptS);
        static final short[] DFA190_special = DFA.unpackEncodedString(DFA190_specialS);
        static final short[][] DFA190_transition;
        static {
            int numStates = DFA190_transitionS.length;
            DFA190_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA190_transition[i] = DFA.unpackEncodedString(DFA190_transitionS[i]);
            }
        }
    }
    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = DFA190_eot;
            this.eof = DFA190_eof;
            this.min = DFA190_min;
            this.max = DFA190_max;
            this.accept = DFA190_accept;
            this.special = DFA190_special;
            this.transition = DFA190_transition;
        }
        public String getDescription() {
            return "5677:1: annotationTypeElementDeclaration returns [NodeUnion<? extends AnnotationMemberNode> ret] : ( annotationMethodDeclaration | constantDeclaration | normalClassDeclaration | normalInterfaceDeclaration | enumDeclaration | annotationTypeDeclaration | noOp | {...}? => annotationMemberBsjMetaprogramAnchor );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_0 = input.LA(1);

                         
                        int index190_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA190_0==128) ) {s = 1;}

                        else if ( (LA190_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA190_0==PUBLIC) ) {s = 3;}

                        else if ( (LA190_0==PROTECTED) ) {s = 4;}

                        else if ( (LA190_0==PRIVATE) ) {s = 5;}

                        else if ( (LA190_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA190_0==FINAL) ) {s = 7;}

                        else if ( (LA190_0==NATIVE) ) {s = 8;}

                        else if ( (LA190_0==STATIC) ) {s = 9;}

                        else if ( (LA190_0==STRICTFP) ) {s = 10;}

                        else if ( (LA190_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA190_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA190_0==VOLATILE) ) {s = 13;}

                        else if ( (LA190_0==IDENTIFIER) ) {s = 14;}

                        else if ( (LA190_0==BOOLEAN) ) {s = 15;}

                        else if ( (LA190_0==CHAR) ) {s = 16;}

                        else if ( (LA190_0==BYTE) ) {s = 17;}

                        else if ( (LA190_0==SHORT) ) {s = 18;}

                        else if ( (LA190_0==INT) ) {s = 19;}

                        else if ( (LA190_0==LONG) ) {s = 20;}

                        else if ( (LA190_0==FLOAT) ) {s = 21;}

                        else if ( (LA190_0==DOUBLE) ) {s = 22;}

                        else if ( (LA190_0==CLASS) ) {s = 23;}

                        else if ( (LA190_0==INTERFACE) ) {s = 24;}

                        else if ( (LA190_0==ENUM) ) {s = 25;}

                        else if ( (LA190_0==SEMI) ) {s = 26;}

                        else if ( (LA190_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 27;}

                         
                        input.seek(index190_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA190_1 = input.LA(1);

                         
                        int index190_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred243_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred243_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred243_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||synpred243_BsjAntlr())) ) {s = 28;}

                        else if ( ((((synpred244_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred244_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred244_BsjAntlr()||(synpred244_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 29;}

                        else if ( (((synpred245_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred245_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred245_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 23;}

                        else if ( ((((synpred246_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred246_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred246_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 24;}

                        else if ( (((synpred247_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred247_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred247_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 25;}

                        else if ( (((synpred248_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred248_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred248_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 30;}

                        else if ( ((synpred249_BsjAntlr()||(synpred249_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred249_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 26;}

                        else if ( (((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))) ) {s = 27;}

                         
                        input.seek(index190_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA190_2 = input.LA(1);

                         
                        int index190_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred243_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred243_BsjAntlr())) ) {s = 28;}

                        else if ( (((synpred244_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred244_BsjAntlr())) ) {s = 29;}

                        else if ( (((synpred245_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred245_BsjAntlr())) ) {s = 23;}

                        else if ( ((synpred246_BsjAntlr()||(synpred246_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 24;}

                        else if ( (((synpred247_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred247_BsjAntlr())) ) {s = 25;}

                        else if ( (((synpred248_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred248_BsjAntlr())) ) {s = 30;}

                        else if ( (synpred249_BsjAntlr()) ) {s = 26;}

                         
                        input.seek(index190_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA190_3 = input.LA(1);

                         
                        int index190_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA190_4 = input.LA(1);

                         
                        int index190_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA190_5 = input.LA(1);

                         
                        int index190_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA190_6 = input.LA(1);

                         
                        int index190_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA190_7 = input.LA(1);

                         
                        int index190_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA190_8 = input.LA(1);

                         
                        int index190_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA190_9 = input.LA(1);

                         
                        int index190_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA190_10 = input.LA(1);

                         
                        int index190_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA190_11 = input.LA(1);

                         
                        int index190_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA190_12 = input.LA(1);

                         
                        int index190_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA190_13 = input.LA(1);

                         
                        int index190_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred245_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred246_BsjAntlr()) ) {s = 24;}

                        else if ( (synpred247_BsjAntlr()) ) {s = 25;}

                        else if ( (synpred248_BsjAntlr()) ) {s = 30;}

                         
                        input.seek(index190_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA190_14 = input.LA(1);

                         
                        int index190_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA190_15 = input.LA(1);

                         
                        int index190_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA190_16 = input.LA(1);

                         
                        int index190_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA190_17 = input.LA(1);

                         
                        int index190_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA190_18 = input.LA(1);

                         
                        int index190_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA190_19 = input.LA(1);

                         
                        int index190_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA190_20 = input.LA(1);

                         
                        int index190_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA190_21 = input.LA(1);

                         
                        int index190_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA190_22 = input.LA(1);

                         
                        int index190_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred244_BsjAntlr()) ) {s = 29;}

                         
                        input.seek(index190_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA192_eotS = DFA192Data.DFA192_eotS;
    static final String DFA192_eofS = DFA192Data.DFA192_eofS;
    static final String DFA192_minS = DFA192Data.DFA192_minS;
    static final String DFA192_maxS = DFA192Data.DFA192_maxS;
    static final String DFA192_acceptS = DFA192Data.DFA192_acceptS;
    static final String DFA192_specialS = DFA192Data.DFA192_specialS;
    static final String[] DFA192_transitionS = DFA192Data.DFA192_transitionS;

    static final short[] DFA192_eot = DFA192Data.DFA192_eot;
    static final short[] DFA192_eof = DFA192Data.DFA192_eof;
    static final char[] DFA192_min = DFA192Data.DFA192_min;
    static final char[] DFA192_max = DFA192Data.DFA192_max;
    static final short[] DFA192_accept = DFA192Data.DFA192_accept;
    static final short[] DFA192_special = DFA192Data.DFA192_special;
    static final short[][] DFA192_transition = DFA192Data.DFA192_transition;


    static class DFA192Data {
        static final String DFA192_eotS =
            "\30\uffff";
        static final String DFA192_eofS =
            "\30\uffff";
        static final String DFA192_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA192_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA192_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA192_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA192_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA192_eot = DFA.unpackEncodedString(DFA192_eotS);
        static final short[] DFA192_eof = DFA.unpackEncodedString(DFA192_eofS);
        static final char[] DFA192_min = DFA.unpackEncodedStringToUnsignedChars(DFA192_minS);
        static final char[] DFA192_max = DFA.unpackEncodedStringToUnsignedChars(DFA192_maxS);
        static final short[] DFA192_accept = DFA.unpackEncodedString(DFA192_acceptS);
        static final short[] DFA192_special = DFA.unpackEncodedString(DFA192_specialS);
        static final short[][] DFA192_transition;
        static {
            int numStates = DFA192_transitionS.length;
            DFA192_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA192_transition[i] = DFA.unpackEncodedString(DFA192_transitionS[i]);
            }
        }
    }
    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = DFA192_eot;
            this.eof = DFA192_eof;
            this.min = DFA192_min;
            this.max = DFA192_max;
            this.accept = DFA192_accept;
            this.special = DFA192_special;
            this.transition = DFA192_transition;
        }
        public String getDescription() {
            return "5727:1: annotationMethodDeclaration returns [NodeUnion<? extends AnnotationMethodDeclarationNode> ret] : ( splice[AnnotationMethodDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | javadoc annotationMethodModifiers type id= identifier '(' ')' ( 'default' elementValue )? ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_1 = input.LA(1);

                         
                        int index192_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred250_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index192_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA194_eotS = DFA194Data.DFA194_eotS;
    static final String DFA194_eofS = DFA194Data.DFA194_eofS;
    static final String DFA194_minS = DFA194Data.DFA194_minS;
    static final String DFA194_maxS = DFA194Data.DFA194_maxS;
    static final String DFA194_acceptS = DFA194Data.DFA194_acceptS;
    static final String DFA194_specialS = DFA194Data.DFA194_specialS;
    static final String[] DFA194_transitionS = DFA194Data.DFA194_transitionS;

    static final short[] DFA194_eot = DFA194Data.DFA194_eot;
    static final short[] DFA194_eof = DFA194Data.DFA194_eof;
    static final char[] DFA194_min = DFA194Data.DFA194_min;
    static final char[] DFA194_max = DFA194Data.DFA194_max;
    static final short[] DFA194_accept = DFA194Data.DFA194_accept;
    static final short[] DFA194_special = DFA194Data.DFA194_special;
    static final short[][] DFA194_transition = DFA194Data.DFA194_transition;


    static class DFA194Data {
        static final String DFA194_eotS =
            "\74\uffff";
        static final String DFA194_eofS =
            "\74\uffff";
        static final String DFA194_minS =
            "\1\4\1\0\72\uffff";
        static final String DFA194_maxS =
            "\1\u0080\1\0\72\uffff";
        static final String DFA194_acceptS =
            "\2\uffff\1\2\70\uffff\1\1";
        static final String DFA194_specialS =
            "\1\uffff\1\0\72\uffff}>";
        static final String[] DFA194_transitionS = {
                "\1\2\3\uffff\15\2\4\uffff\1\2\15\uffff\5\2\2\uffff\2\2\1\uffff"+
                "\1\2\1\uffff\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1\2\3\uffff"+
                "\1\2\1\uffff\2\2\1\uffff\20\2\1\uffff\1\2\3\uffff\1\2\4\uffff"+
                "\2\2\5\uffff\4\2\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA194_eot = DFA.unpackEncodedString(DFA194_eotS);
        static final short[] DFA194_eof = DFA.unpackEncodedString(DFA194_eofS);
        static final char[] DFA194_min = DFA.unpackEncodedStringToUnsignedChars(DFA194_minS);
        static final char[] DFA194_max = DFA.unpackEncodedStringToUnsignedChars(DFA194_maxS);
        static final short[] DFA194_accept = DFA.unpackEncodedString(DFA194_acceptS);
        static final short[] DFA194_special = DFA.unpackEncodedString(DFA194_specialS);
        static final short[][] DFA194_transition;
        static {
            int numStates = DFA194_transitionS.length;
            DFA194_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA194_transition[i] = DFA.unpackEncodedString(DFA194_transitionS[i]);
            }
        }
    }
    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = DFA194_eot;
            this.eof = DFA194_eof;
            this.min = DFA194_min;
            this.max = DFA194_max;
            this.accept = DFA194_accept;
            this.special = DFA194_special;
            this.transition = DFA194_transition;
        }
        public String getDescription() {
            return "5788:9: ( splice[BlockStatementListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= blockStatement (b= blockStatement )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA194_1 = input.LA(1);

                         
                        int index194_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred252_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index194_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 194, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA193_eotS = DFA193Data.DFA193_eotS;
    static final String DFA193_eofS = DFA193Data.DFA193_eofS;
    static final String DFA193_minS = DFA193Data.DFA193_minS;
    static final String DFA193_maxS = DFA193Data.DFA193_maxS;
    static final String DFA193_acceptS = DFA193Data.DFA193_acceptS;
    static final String DFA193_specialS = DFA193Data.DFA193_specialS;
    static final String[] DFA193_transitionS = DFA193Data.DFA193_transitionS;

    static final short[] DFA193_eot = DFA193Data.DFA193_eot;
    static final short[] DFA193_eof = DFA193Data.DFA193_eof;
    static final char[] DFA193_min = DFA193Data.DFA193_min;
    static final char[] DFA193_max = DFA193Data.DFA193_max;
    static final short[] DFA193_accept = DFA193Data.DFA193_accept;
    static final short[] DFA193_special = DFA193Data.DFA193_special;
    static final short[][] DFA193_transition = DFA193Data.DFA193_transition;


    static class DFA193Data {
        static final String DFA193_eotS =
            "\100\uffff";
        static final String DFA193_eofS =
            "\1\1\77\uffff";
        static final String DFA193_minS =
            "\1\4\2\uffff\1\0\74\uffff";
        static final String DFA193_maxS =
            "\1\u0080\2\uffff\1\0\74\uffff";
        static final String DFA193_acceptS =
            "\1\uffff\1\2\5\uffff\1\1\70\uffff";
        static final String DFA193_specialS =
            "\3\uffff\1\0\74\uffff}>";
        static final String[] DFA193_transitionS = {
                "\1\7\3\uffff\15\7\4\uffff\1\7\1\1\14\uffff\5\7\1\1\1\uffff\2"+
                "\7\1\uffff\1\7\1\1\2\7\2\uffff\1\7\1\uffff\2\7\1\uffff\1\7\3"+
                "\uffff\1\7\1\uffff\2\7\1\uffff\20\7\1\uffff\1\7\1\1\2\uffff"+
                "\1\7\4\uffff\2\7\5\uffff\4\7\16\uffff\1\7\7\uffff\1\3",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA193_eot = DFA.unpackEncodedString(DFA193_eotS);
        static final short[] DFA193_eof = DFA.unpackEncodedString(DFA193_eofS);
        static final char[] DFA193_min = DFA.unpackEncodedStringToUnsignedChars(DFA193_minS);
        static final char[] DFA193_max = DFA.unpackEncodedStringToUnsignedChars(DFA193_maxS);
        static final short[] DFA193_accept = DFA.unpackEncodedString(DFA193_acceptS);
        static final short[] DFA193_special = DFA.unpackEncodedString(DFA193_specialS);
        static final short[][] DFA193_transition;
        static {
            int numStates = DFA193_transitionS.length;
            DFA193_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA193_transition[i] = DFA.unpackEncodedString(DFA193_transitionS[i]);
            }
        }
    }
    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 193;
            this.eot = DFA193_eot;
            this.eof = DFA193_eof;
            this.min = DFA193_min;
            this.max = DFA193_max;
            this.accept = DFA193_accept;
            this.special = DFA193_special;
            this.transition = DFA193_transition;
        }
        public String getDescription() {
            return "()* loopback of 5811:11: (b= blockStatement )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA193_3 = input.LA(1);

                         
                        int index193_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred253_BsjAntlr()||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred253_BsjAntlr()&&(configuration.getMetaprogramsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred253_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred253_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred253_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 7;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index193_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 193, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA195_eotS = DFA195Data.DFA195_eotS;
    static final String DFA195_eofS = DFA195Data.DFA195_eofS;
    static final String DFA195_minS = DFA195Data.DFA195_minS;
    static final String DFA195_maxS = DFA195Data.DFA195_maxS;
    static final String DFA195_acceptS = DFA195Data.DFA195_acceptS;
    static final String DFA195_specialS = DFA195Data.DFA195_specialS;
    static final String[] DFA195_transitionS = DFA195Data.DFA195_transitionS;

    static final short[] DFA195_eot = DFA195Data.DFA195_eot;
    static final short[] DFA195_eof = DFA195Data.DFA195_eof;
    static final char[] DFA195_min = DFA195Data.DFA195_min;
    static final char[] DFA195_max = DFA195Data.DFA195_max;
    static final short[] DFA195_accept = DFA195Data.DFA195_accept;
    static final short[] DFA195_special = DFA195Data.DFA195_special;
    static final short[][] DFA195_transition = DFA195Data.DFA195_transition;


    static class DFA195Data {
        static final String DFA195_eotS =
            "\100\uffff";
        static final String DFA195_eofS =
            "\1\73\77\uffff";
        static final String DFA195_minS =
            "\1\4\1\0\76\uffff";
        static final String DFA195_maxS =
            "\1\u0080\1\0\76\uffff";
        static final String DFA195_acceptS =
            "\2\uffff\1\1\70\uffff\1\2\4\uffff";
        static final String DFA195_specialS =
            "\1\uffff\1\0\76\uffff}>";
        static final String[] DFA195_transitionS = {
                "\1\2\3\uffff\15\2\4\uffff\1\2\1\73\14\uffff\5\2\1\73\1\uffff"+
                "\2\2\1\uffff\1\2\1\73\2\2\2\uffff\1\2\1\uffff\2\2\1\uffff\1"+
                "\2\3\uffff\1\2\1\uffff\2\2\1\uffff\20\2\1\uffff\1\2\1\73\2\uffff"+
                "\1\2\4\uffff\2\2\5\uffff\4\2\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA195_eot = DFA.unpackEncodedString(DFA195_eotS);
        static final short[] DFA195_eof = DFA.unpackEncodedString(DFA195_eofS);
        static final char[] DFA195_min = DFA.unpackEncodedStringToUnsignedChars(DFA195_minS);
        static final char[] DFA195_max = DFA.unpackEncodedStringToUnsignedChars(DFA195_maxS);
        static final short[] DFA195_accept = DFA.unpackEncodedString(DFA195_acceptS);
        static final short[] DFA195_special = DFA.unpackEncodedString(DFA195_specialS);
        static final short[][] DFA195_transition;
        static {
            int numStates = DFA195_transitionS.length;
            DFA195_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA195_transition[i] = DFA.unpackEncodedString(DFA195_transitionS[i]);
            }
        }
    }
    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = DFA195_eot;
            this.eof = DFA195_eof;
            this.min = DFA195_min;
            this.max = DFA195_max;
            this.accept = DFA195_accept;
            this.special = DFA195_special;
            this.transition = DFA195_transition;
        }
        public String getDescription() {
            return "5832:1: optionalBlockStatementList returns [NodeUnion<? extends BlockStatementListNode> ret] : ( ( blockStatementList ) | () );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_1 = input.LA(1);

                         
                        int index195_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred254_BsjAntlr()||(synpred254_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index195_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA196_eotS = DFA196Data.DFA196_eotS;
    static final String DFA196_eofS = DFA196Data.DFA196_eofS;
    static final String DFA196_minS = DFA196Data.DFA196_minS;
    static final String DFA196_maxS = DFA196Data.DFA196_maxS;
    static final String DFA196_acceptS = DFA196Data.DFA196_acceptS;
    static final String DFA196_specialS = DFA196Data.DFA196_specialS;
    static final String[] DFA196_transitionS = DFA196Data.DFA196_transitionS;

    static final short[] DFA196_eot = DFA196Data.DFA196_eot;
    static final short[] DFA196_eof = DFA196Data.DFA196_eof;
    static final char[] DFA196_min = DFA196Data.DFA196_min;
    static final char[] DFA196_max = DFA196Data.DFA196_max;
    static final short[] DFA196_accept = DFA196Data.DFA196_accept;
    static final short[] DFA196_special = DFA196Data.DFA196_special;
    static final short[][] DFA196_transition = DFA196Data.DFA196_transition;


    static class DFA196Data {
        static final String DFA196_eotS =
            "\75\uffff";
        static final String DFA196_eofS =
            "\75\uffff";
        static final String DFA196_minS =
            "\1\4\26\0\46\uffff";
        static final String DFA196_maxS =
            "\1\u0080\26\0\46\uffff";
        static final String DFA196_acceptS =
            "\27\uffff\1\3\1\4\41\uffff\1\5\1\1\1\2";
        static final String DFA196_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1"+
            "\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\46\uffff}>";
        static final String[] DFA196_transitionS = {
                "\1\30\3\uffff\14\30\1\16\4\uffff\1\72\15\uffff\1\6\1\30\1\17"+
                "\1\30\1\21\2\uffff\1\20\1\27\1\uffff\1\30\1\uffff\1\30\1\26"+
                "\2\uffff\1\7\1\uffff\1\25\1\30\1\uffff\1\30\3\uffff\1\23\1\uffff"+
                "\1\24\1\10\1\uffff\1\5\1\4\1\3\1\30\1\22\1\11\1\12\1\30\1\13"+
                "\1\30\1\14\2\30\1\15\2\30\1\uffff\1\30\3\uffff\1\30\4\uffff"+
                "\2\30\5\uffff\4\30\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA196_eot = DFA.unpackEncodedString(DFA196_eotS);
        static final short[] DFA196_eof = DFA.unpackEncodedString(DFA196_eofS);
        static final char[] DFA196_min = DFA.unpackEncodedStringToUnsignedChars(DFA196_minS);
        static final char[] DFA196_max = DFA.unpackEncodedStringToUnsignedChars(DFA196_maxS);
        static final short[] DFA196_accept = DFA.unpackEncodedString(DFA196_acceptS);
        static final short[] DFA196_special = DFA.unpackEncodedString(DFA196_specialS);
        static final short[][] DFA196_transition;
        static {
            int numStates = DFA196_transitionS.length;
            DFA196_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA196_transition[i] = DFA.unpackEncodedString(DFA196_transitionS[i]);
            }
        }
    }
    class DFA196 extends DFA {

        public DFA196(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 196;
            this.eot = DFA196_eot;
            this.eof = DFA196_eof;
            this.min = DFA196_min;
            this.max = DFA196_max;
            this.accept = DFA196_accept;
            this.special = DFA196_special;
            this.transition = DFA196_transition;
        }
        public String getDescription() {
            return "5857:1: blockStatement returns [NodeUnion<? extends BlockStatementNode> ret] : ( splice[BlockStatementNode.class, Arrays.<Class<? extends Node>>asList(LocalVariableDeclarationNode.class, LocalClassDeclarationNode.class, StatementNode.class)] | ( localVariableHeader )=> localVariableDeclarationStatement | ( typeHeader )=> localClassDeclaration | statement | {...}? => blockStatementBsjMetaprogramAnchor );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA196_0 = input.LA(1);

                         
                        int index196_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA196_0==128) ) {s = 1;}

                        else if ( (LA196_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA196_0==PUBLIC) ) {s = 3;}

                        else if ( (LA196_0==PROTECTED) ) {s = 4;}

                        else if ( (LA196_0==PRIVATE) ) {s = 5;}

                        else if ( (LA196_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA196_0==FINAL) ) {s = 7;}

                        else if ( (LA196_0==NATIVE) ) {s = 8;}

                        else if ( (LA196_0==STATIC) ) {s = 9;}

                        else if ( (LA196_0==STRICTFP) ) {s = 10;}

                        else if ( (LA196_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA196_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA196_0==VOLATILE) ) {s = 13;}

                        else if ( (LA196_0==IDENTIFIER) ) {s = 14;}

                        else if ( (LA196_0==BOOLEAN) ) {s = 15;}

                        else if ( (LA196_0==CHAR) ) {s = 16;}

                        else if ( (LA196_0==BYTE) ) {s = 17;}

                        else if ( (LA196_0==SHORT) ) {s = 18;}

                        else if ( (LA196_0==INT) ) {s = 19;}

                        else if ( (LA196_0==LONG) ) {s = 20;}

                        else if ( (LA196_0==FLOAT) ) {s = 21;}

                        else if ( (LA196_0==DOUBLE) ) {s = 22;}

                        else if ( (LA196_0==CLASS) && (synpred257_BsjAntlr())) {s = 23;}

                        else if ( (LA196_0==CODELITERAL_START||(LA196_0>=SUPER && LA196_0<=NULL)||LA196_0==ASSERT||LA196_0==BREAK||LA196_0==CONTINUE||LA196_0==DO||LA196_0==FOR||LA196_0==IF||LA196_0==RETURN||LA196_0==SWITCH||LA196_0==THROW||(LA196_0>=TRY && LA196_0<=VOID)||(LA196_0>=WHILE && LA196_0<=LPAREN)||LA196_0==LBRACE||LA196_0==SEMI||(LA196_0>=BANG && LA196_0<=TILDE)||(LA196_0>=PLUSPLUS && LA196_0<=SUB)) ) {s = 24;}

                        else if ( (LA196_0==METAPROGRAM_START) && ((configuration.getMetaprogramsSupported()))) {s = 58;}

                         
                        input.seek(index196_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA196_1 = input.LA(1);

                         
                        int index196_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred255_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 59;}

                        else if ( ((synpred256_BsjAntlr()||(synpred256_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred256_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred256_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 60;}

                        else if ( (((synpred257_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred257_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred257_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 23;}

                        else if ( (((synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred258_BsjAntlr()||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred258_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 24;}

                        else if ( (((configuration.getMetaprogramsSupported())&&(configuration.getCodeSplicingSupported()))) ) {s = 58;}

                         
                        input.seek(index196_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA196_2 = input.LA(1);

                         
                        int index196_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred256_BsjAntlr()||(synpred256_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 60;}

                        else if ( (((synpred257_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred257_BsjAntlr())) ) {s = 23;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA196_3 = input.LA(1);

                         
                        int index196_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA196_4 = input.LA(1);

                         
                        int index196_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA196_5 = input.LA(1);

                         
                        int index196_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA196_6 = input.LA(1);

                         
                        int index196_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA196_7 = input.LA(1);

                         
                        int index196_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA196_8 = input.LA(1);

                         
                        int index196_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA196_9 = input.LA(1);

                         
                        int index196_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA196_10 = input.LA(1);

                         
                        int index196_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA196_11 = input.LA(1);

                         
                        int index196_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA196_12 = input.LA(1);

                         
                        int index196_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA196_13 = input.LA(1);

                         
                        int index196_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred257_BsjAntlr()) ) {s = 23;}

                         
                        input.seek(index196_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA196_14 = input.LA(1);

                         
                        int index196_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA196_15 = input.LA(1);

                         
                        int index196_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA196_16 = input.LA(1);

                         
                        int index196_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA196_17 = input.LA(1);

                         
                        int index196_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA196_18 = input.LA(1);

                         
                        int index196_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA196_19 = input.LA(1);

                         
                        int index196_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA196_20 = input.LA(1);

                         
                        int index196_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA196_21 = input.LA(1);

                         
                        int index196_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA196_22 = input.LA(1);

                         
                        int index196_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred256_BsjAntlr()) ) {s = 60;}

                        else if ( (synpred258_BsjAntlr()) ) {s = 24;}

                         
                        input.seek(index196_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 196, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA197_eotS = DFA197Data.DFA197_eotS;
    static final String DFA197_eofS = DFA197Data.DFA197_eofS;
    static final String DFA197_minS = DFA197Data.DFA197_minS;
    static final String DFA197_maxS = DFA197Data.DFA197_maxS;
    static final String DFA197_acceptS = DFA197Data.DFA197_acceptS;
    static final String DFA197_specialS = DFA197Data.DFA197_specialS;
    static final String[] DFA197_transitionS = DFA197Data.DFA197_transitionS;

    static final short[] DFA197_eot = DFA197Data.DFA197_eot;
    static final short[] DFA197_eof = DFA197Data.DFA197_eof;
    static final char[] DFA197_min = DFA197Data.DFA197_min;
    static final char[] DFA197_max = DFA197Data.DFA197_max;
    static final short[] DFA197_accept = DFA197Data.DFA197_accept;
    static final short[] DFA197_special = DFA197Data.DFA197_special;
    static final short[][] DFA197_transition = DFA197Data.DFA197_transition;


    static class DFA197Data {
        static final String DFA197_eotS =
            "\30\uffff";
        static final String DFA197_eofS =
            "\30\uffff";
        static final String DFA197_minS =
            "\1\24\1\0\26\uffff";
        static final String DFA197_maxS =
            "\1\u0080\1\0\26\uffff";
        static final String DFA197_acceptS =
            "\2\uffff\1\2\24\uffff\1\1";
        static final String DFA197_specialS =
            "\1\uffff\1\0\26\uffff}>";
        static final String[] DFA197_transitionS = {
                "\1\2\22\uffff\1\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\6\uffff\1\2\1\uffff\2\2\1\uffff"+
                "\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\2\uffff\1\2\45\uffff"+
                "\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA197_eot = DFA.unpackEncodedString(DFA197_eotS);
        static final short[] DFA197_eof = DFA.unpackEncodedString(DFA197_eofS);
        static final char[] DFA197_min = DFA.unpackEncodedStringToUnsignedChars(DFA197_minS);
        static final char[] DFA197_max = DFA.unpackEncodedStringToUnsignedChars(DFA197_maxS);
        static final short[] DFA197_accept = DFA.unpackEncodedString(DFA197_acceptS);
        static final short[] DFA197_special = DFA.unpackEncodedString(DFA197_specialS);
        static final short[][] DFA197_transition;
        static {
            int numStates = DFA197_transitionS.length;
            DFA197_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA197_transition[i] = DFA.unpackEncodedString(DFA197_transitionS[i]);
            }
        }
    }
    class DFA197 extends DFA {

        public DFA197(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 197;
            this.eot = DFA197_eot;
            this.eof = DFA197_eof;
            this.min = DFA197_min;
            this.max = DFA197_max;
            this.accept = DFA197_accept;
            this.special = DFA197_special;
            this.transition = DFA197_transition;
        }
        public String getDescription() {
            return "5896:1: localVariableDeclarationStatement returns [NodeUnion<? extends LocalVariableDeclarationNode> ret] : ( splice[LocalVariableDeclarationNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA197_1 = input.LA(1);

                         
                        int index197_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred259_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 23;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index197_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 197, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA199_eotS = DFA199Data.DFA199_eotS;
    static final String DFA199_eofS = DFA199Data.DFA199_eofS;
    static final String DFA199_minS = DFA199Data.DFA199_minS;
    static final String DFA199_maxS = DFA199Data.DFA199_maxS;
    static final String DFA199_acceptS = DFA199Data.DFA199_acceptS;
    static final String DFA199_specialS = DFA199Data.DFA199_specialS;
    static final String[] DFA199_transitionS = DFA199Data.DFA199_transitionS;

    static final short[] DFA199_eot = DFA199Data.DFA199_eot;
    static final short[] DFA199_eof = DFA199Data.DFA199_eof;
    static final char[] DFA199_min = DFA199Data.DFA199_min;
    static final char[] DFA199_max = DFA199Data.DFA199_max;
    static final short[] DFA199_accept = DFA199Data.DFA199_accept;
    static final short[] DFA199_special = DFA199Data.DFA199_special;
    static final short[][] DFA199_transition = DFA199Data.DFA199_transition;


    static class DFA199Data {
        static final String DFA199_eotS =
            "\60\uffff";
        static final String DFA199_eofS =
            "\60\uffff";
        static final String DFA199_minS =
            "\1\4\1\0\56\uffff";
        static final String DFA199_maxS =
            "\1\u0080\1\0\56\uffff";
        static final String DFA199_acceptS =
            "\2\uffff\1\2\54\uffff\1\1";
        static final String DFA199_specialS =
            "\1\uffff\1\0\56\uffff}>";
        static final String[] DFA199_transitionS = {
                "\1\2\3\uffff\15\2\23\uffff\4\2\2\uffff\1\2\2\uffff\1\2\1\uffff"+
                "\2\2\4\uffff\2\2\1\uffff\1\2\3\uffff\1\2\1\uffff\1\2\5\uffff"+
                "\2\2\2\uffff\3\2\1\uffff\2\2\1\uffff\2\2\1\uffff\1\2\3\uffff"+
                "\1\2\4\uffff\2\2\5\uffff\4\2\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA199_eot = DFA.unpackEncodedString(DFA199_eotS);
        static final short[] DFA199_eof = DFA.unpackEncodedString(DFA199_eofS);
        static final char[] DFA199_min = DFA.unpackEncodedStringToUnsignedChars(DFA199_minS);
        static final char[] DFA199_max = DFA.unpackEncodedStringToUnsignedChars(DFA199_maxS);
        static final short[] DFA199_accept = DFA.unpackEncodedString(DFA199_acceptS);
        static final short[] DFA199_special = DFA.unpackEncodedString(DFA199_specialS);
        static final short[][] DFA199_transition;
        static {
            int numStates = DFA199_transitionS.length;
            DFA199_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA199_transition[i] = DFA.unpackEncodedString(DFA199_transitionS[i]);
            }
        }
    }
    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = DFA199_eot;
            this.eof = DFA199_eof;
            this.min = DFA199_min;
            this.max = DFA199_max;
            this.accept = DFA199_accept;
            this.special = DFA199_special;
            this.transition = DFA199_transition;
        }
        public String getDescription() {
            return "5940:1: statement returns [NodeUnion<? extends StatementNode> ret] : ( splice[StatementNode.class, Arrays.<Class<? extends Node>>asList()] | ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_1 = input.LA(1);

                         
                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred260_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 47;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA198_eotS = DFA198Data.DFA198_eotS;
    static final String DFA198_eofS = DFA198Data.DFA198_eofS;
    static final String DFA198_minS = DFA198Data.DFA198_minS;
    static final String DFA198_maxS = DFA198Data.DFA198_maxS;
    static final String DFA198_acceptS = DFA198Data.DFA198_acceptS;
    static final String DFA198_specialS = DFA198Data.DFA198_specialS;
    static final String[] DFA198_transitionS = DFA198Data.DFA198_transitionS;

    static final short[] DFA198_eot = DFA198Data.DFA198_eot;
    static final short[] DFA198_eof = DFA198Data.DFA198_eof;
    static final char[] DFA198_min = DFA198Data.DFA198_min;
    static final char[] DFA198_max = DFA198Data.DFA198_max;
    static final short[] DFA198_accept = DFA198Data.DFA198_accept;
    static final short[] DFA198_special = DFA198Data.DFA198_special;
    static final short[][] DFA198_transition = DFA198Data.DFA198_transition;


    static class DFA198Data {
        static final String DFA198_eotS =
            "\60\uffff";
        static final String DFA198_eofS =
            "\60\uffff";
        static final String DFA198_minS =
            "\1\4\2\0\47\uffff\1\0\5\uffff";
        static final String DFA198_maxS =
            "\1\u0080\2\0\47\uffff\1\0\5\uffff";
        static final String DFA198_acceptS =
            "\3\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
            "\15\1\16\35\uffff\1\20\1\17";
        static final String DFA198_specialS =
            "\1\uffff\1\0\1\1\47\uffff\1\2\5\uffff}>";
        static final String[] DFA198_transitionS = {
                "\1\20\3\uffff\14\20\1\52\23\uffff\1\4\1\20\1\16\1\20\2\uffff"+
                "\1\20\2\uffff\1\17\1\uffff\1\10\1\20\4\uffff\1\20\1\6\1\uffff"+
                "\1\5\3\uffff\1\20\1\uffff\1\20\5\uffff\1\14\1\20\2\uffff\1\12"+
                "\1\13\1\15\1\uffff\1\11\1\20\1\uffff\1\7\1\20\1\uffff\1\3\3"+
                "\uffff\1\56\4\uffff\2\20\5\uffff\4\20\16\uffff\1\2\7\uffff\1"+
                "\1",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA198_eot = DFA.unpackEncodedString(DFA198_eotS);
        static final short[] DFA198_eof = DFA.unpackEncodedString(DFA198_eofS);
        static final char[] DFA198_min = DFA.unpackEncodedStringToUnsignedChars(DFA198_minS);
        static final char[] DFA198_max = DFA.unpackEncodedStringToUnsignedChars(DFA198_maxS);
        static final short[] DFA198_accept = DFA.unpackEncodedString(DFA198_acceptS);
        static final short[] DFA198_special = DFA.unpackEncodedString(DFA198_specialS);
        static final short[][] DFA198_transition;
        static {
            int numStates = DFA198_transitionS.length;
            DFA198_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA198_transition[i] = DFA.unpackEncodedString(DFA198_transitionS[i]);
            }
        }
    }
    class DFA198 extends DFA {

        public DFA198(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 198;
            this.eot = DFA198_eot;
            this.eof = DFA198_eof;
            this.min = DFA198_min;
            this.max = DFA198_max;
            this.accept = DFA198_accept;
            this.special = DFA198_special;
            this.transition = DFA198_transition;
        }
        public String getDescription() {
            return "5955:9: ( blockAsStatement | assertStatement | ifStatement | forStatement | whileStatement | doWhileStatement | tryStatement | switchStatement | synchronizedStatement | returnStatement | throwStatement | breakStatement | continueStatement | expressionStatement | labeledStatement | noOpStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA198_1 = input.LA(1);

                         
                        int index198_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred261_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred261_BsjAntlr())) ) {s = 3;}

                        else if ( (((synpred262_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred262_BsjAntlr())) ) {s = 4;}

                        else if ( ((synpred263_BsjAntlr()||(synpred263_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 5;}

                        else if ( (((synpred264_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred264_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred264_BsjAntlr())) ) {s = 6;}

                        else if ( (((synpred265_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred265_BsjAntlr())) ) {s = 7;}

                        else if ( ((synpred266_BsjAntlr()||(synpred266_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 8;}

                        else if ( ((synpred267_BsjAntlr()||(synpred267_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 9;}

                        else if ( ((synpred268_BsjAntlr()||(synpred268_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 10;}

                        else if ( (((synpred269_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred269_BsjAntlr())) ) {s = 11;}

                        else if ( ((synpred270_BsjAntlr()||(synpred270_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 12;}

                        else if ( ((synpred271_BsjAntlr()||(synpred271_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 13;}

                        else if ( ((synpred272_BsjAntlr()||(synpred272_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( ((synpred273_BsjAntlr()||(synpred273_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 15;}

                        else if ( (((synpred274_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred274_BsjAntlr())) ) {s = 16;}

                        else if ( (((synpred275_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred275_BsjAntlr())) ) {s = 47;}

                        else if ( (true) ) {s = 46;}

                         
                        input.seek(index198_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA198_2 = input.LA(1);

                         
                        int index198_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred261_BsjAntlr()) ) {s = 3;}

                        else if ( (synpred262_BsjAntlr()) ) {s = 4;}

                        else if ( (synpred263_BsjAntlr()) ) {s = 5;}

                        else if ( (synpred264_BsjAntlr()) ) {s = 6;}

                        else if ( (synpred265_BsjAntlr()) ) {s = 7;}

                        else if ( (synpred266_BsjAntlr()) ) {s = 8;}

                        else if ( (synpred267_BsjAntlr()) ) {s = 9;}

                        else if ( (synpred268_BsjAntlr()) ) {s = 10;}

                        else if ( (synpred269_BsjAntlr()) ) {s = 11;}

                        else if ( (synpred270_BsjAntlr()) ) {s = 12;}

                        else if ( (synpred271_BsjAntlr()) ) {s = 13;}

                        else if ( (synpred272_BsjAntlr()) ) {s = 14;}

                        else if ( (synpred273_BsjAntlr()) ) {s = 15;}

                        else if ( (synpred274_BsjAntlr()) ) {s = 16;}

                        else if ( (synpred275_BsjAntlr()) ) {s = 47;}

                        else if ( (true) ) {s = 46;}

                         
                        input.seek(index198_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA198_42 = input.LA(1);

                         
                        int index198_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_BsjAntlr()) ) {s = 16;}

                        else if ( (synpred275_BsjAntlr()) ) {s = 47;}

                         
                        input.seek(index198_42);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 198, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA209_eotS = DFA209Data.DFA209_eotS;
    static final String DFA209_eofS = DFA209Data.DFA209_eofS;
    static final String DFA209_minS = DFA209Data.DFA209_minS;
    static final String DFA209_maxS = DFA209Data.DFA209_maxS;
    static final String DFA209_acceptS = DFA209Data.DFA209_acceptS;
    static final String DFA209_specialS = DFA209Data.DFA209_specialS;
    static final String[] DFA209_transitionS = DFA209Data.DFA209_transitionS;

    static final short[] DFA209_eot = DFA209Data.DFA209_eot;
    static final short[] DFA209_eof = DFA209Data.DFA209_eof;
    static final char[] DFA209_min = DFA209Data.DFA209_min;
    static final char[] DFA209_max = DFA209Data.DFA209_max;
    static final short[] DFA209_accept = DFA209Data.DFA209_accept;
    static final short[] DFA209_special = DFA209Data.DFA209_special;
    static final short[][] DFA209_transition = DFA209Data.DFA209_transition;


    static class DFA209Data {
        static final String DFA209_eotS =
            "\103\uffff";
        static final String DFA209_eofS =
            "\1\1\102\uffff";
        static final String DFA209_minS =
            "\1\4\1\uffff\1\0\100\uffff";
        static final String DFA209_maxS =
            "\1\u0080\1\uffff\1\0\100\uffff";
        static final String DFA209_acceptS =
            "\1\uffff\1\2\100\uffff\1\1";
        static final String DFA209_specialS =
            "\2\uffff\1\0\100\uffff}>";
        static final String[] DFA209_transitionS = {
                "\1\1\3\uffff\15\1\4\uffff\2\1\14\uffff\6\1\1\102\2\1\1\uffff"+
                "\5\1\1\uffff\4\1\1\uffff\1\1\3\uffff\1\1\1\uffff\2\1\1\uffff"+
                "\20\1\1\uffff\2\1\2\uffff\1\1\4\uffff\2\1\5\uffff\4\1\16\uffff"+
                "\1\1\7\uffff\1\2",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA209_eot = DFA.unpackEncodedString(DFA209_eotS);
        static final short[] DFA209_eof = DFA.unpackEncodedString(DFA209_eofS);
        static final char[] DFA209_min = DFA.unpackEncodedStringToUnsignedChars(DFA209_minS);
        static final char[] DFA209_max = DFA.unpackEncodedStringToUnsignedChars(DFA209_maxS);
        static final short[] DFA209_accept = DFA.unpackEncodedString(DFA209_acceptS);
        static final short[] DFA209_special = DFA.unpackEncodedString(DFA209_specialS);
        static final short[][] DFA209_transition;
        static {
            int numStates = DFA209_transitionS.length;
            DFA209_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA209_transition[i] = DFA.unpackEncodedString(DFA209_transitionS[i]);
            }
        }
    }
    class DFA209 extends DFA {

        public DFA209(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 209;
            this.eot = DFA209_eot;
            this.eof = DFA209_eof;
            this.min = DFA209_min;
            this.max = DFA209_max;
            this.accept = DFA209_accept;
            this.special = DFA209_special;
            this.transition = DFA209_transition;
        }
        public String getDescription() {
            return "()* loopback of 6457:11: (b= catchClause )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA209_2 = input.LA(1);

                         
                        int index209_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred287_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 66;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index209_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 209, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA219_eotS = DFA219Data.DFA219_eotS;
    static final String DFA219_eofS = DFA219Data.DFA219_eofS;
    static final String DFA219_minS = DFA219Data.DFA219_minS;
    static final String DFA219_maxS = DFA219Data.DFA219_maxS;
    static final String DFA219_acceptS = DFA219Data.DFA219_acceptS;
    static final String DFA219_specialS = DFA219Data.DFA219_specialS;
    static final String[] DFA219_transitionS = DFA219Data.DFA219_transitionS;

    static final short[] DFA219_eot = DFA219Data.DFA219_eot;
    static final short[] DFA219_eof = DFA219Data.DFA219_eof;
    static final char[] DFA219_min = DFA219Data.DFA219_min;
    static final char[] DFA219_max = DFA219Data.DFA219_max;
    static final short[] DFA219_accept = DFA219Data.DFA219_accept;
    static final short[] DFA219_special = DFA219Data.DFA219_special;
    static final short[][] DFA219_transition = DFA219Data.DFA219_transition;


    static class DFA219Data {
        static final String DFA219_eotS =
            "\55\uffff";
        static final String DFA219_eofS =
            "\55\uffff";
        static final String DFA219_minS =
            "\1\4\1\0\14\uffff\11\0\26\uffff";
        static final String DFA219_maxS =
            "\1\u0080\1\0\14\uffff\11\0\26\uffff";
        static final String DFA219_acceptS =
            "\2\uffff\1\2\24\uffff\1\3\24\uffff\1\1";
        static final String DFA219_specialS =
            "\1\uffff\1\0\14\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\26\uffff}>";
        static final String[] DFA219_transitionS = {
                "\1\27\3\uffff\14\27\1\16\22\uffff\1\2\1\uffff\1\17\1\uffff\1"+
                "\21\2\uffff\1\20\5\uffff\1\26\2\uffff\1\2\1\uffff\1\25\6\uffff"+
                "\1\23\1\uffff\1\24\1\2\1\uffff\3\2\1\uffff\1\22\2\2\1\uffff"+
                "\1\2\1\uffff\1\2\1\uffff\1\27\1\2\1\uffff\1\27\12\uffff\2\27"+
                "\5\uffff\4\27\16\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA219_eot = DFA.unpackEncodedString(DFA219_eotS);
        static final short[] DFA219_eof = DFA.unpackEncodedString(DFA219_eofS);
        static final char[] DFA219_min = DFA.unpackEncodedStringToUnsignedChars(DFA219_minS);
        static final char[] DFA219_max = DFA.unpackEncodedStringToUnsignedChars(DFA219_maxS);
        static final short[] DFA219_accept = DFA.unpackEncodedString(DFA219_acceptS);
        static final short[] DFA219_special = DFA.unpackEncodedString(DFA219_specialS);
        static final short[][] DFA219_transition;
        static {
            int numStates = DFA219_transitionS.length;
            DFA219_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA219_transition[i] = DFA.unpackEncodedString(DFA219_transitionS[i]);
            }
        }
    }
    class DFA219 extends DFA {

        public DFA219(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 219;
            this.eot = DFA219_eot;
            this.eof = DFA219_eof;
            this.min = DFA219_min;
            this.max = DFA219_max;
            this.accept = DFA219_accept;
            this.special = DFA219_special;
            this.transition = DFA219_transition;
        }
        public String getDescription() {
            return "6700:1: forInit returns [NodeUnion<? extends ForInitializerNode> ret] : ( splice[ForInitializerNode.class, Arrays.<Class<? extends Node>>asList()] | localVariableDeclaration | statementExpressionList );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA219_1 = input.LA(1);

                         
                        int index219_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred296_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 44;}

                        else if ( ((((synpred297_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||synpred297_BsjAntlr()||(synpred297_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA219_14 = input.LA(1);

                         
                        int index219_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA219_15 = input.LA(1);

                         
                        int index219_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_15);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA219_16 = input.LA(1);

                         
                        int index219_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA219_17 = input.LA(1);

                         
                        int index219_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_17);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA219_18 = input.LA(1);

                         
                        int index219_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_18);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA219_19 = input.LA(1);

                         
                        int index219_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_19);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA219_20 = input.LA(1);

                         
                        int index219_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_20);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA219_21 = input.LA(1);

                         
                        int index219_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_21);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA219_22 = input.LA(1);

                         
                        int index219_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred297_BsjAntlr()) ) {s = 2;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index219_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 219, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA221_eotS = DFA221Data.DFA221_eotS;
    static final String DFA221_eofS = DFA221Data.DFA221_eofS;
    static final String DFA221_minS = DFA221Data.DFA221_minS;
    static final String DFA221_maxS = DFA221Data.DFA221_maxS;
    static final String DFA221_acceptS = DFA221Data.DFA221_acceptS;
    static final String DFA221_specialS = DFA221Data.DFA221_specialS;
    static final String[] DFA221_transitionS = DFA221Data.DFA221_transitionS;

    static final short[] DFA221_eot = DFA221Data.DFA221_eot;
    static final short[] DFA221_eof = DFA221Data.DFA221_eof;
    static final char[] DFA221_min = DFA221Data.DFA221_min;
    static final char[] DFA221_max = DFA221Data.DFA221_max;
    static final short[] DFA221_accept = DFA221Data.DFA221_accept;
    static final short[] DFA221_special = DFA221Data.DFA221_special;
    static final short[][] DFA221_transition = DFA221Data.DFA221_transition;


    static class DFA221Data {
        static final String DFA221_eotS =
            "\41\uffff";
        static final String DFA221_eofS =
            "\41\uffff";
        static final String DFA221_minS =
            "\1\4\1\0\37\uffff";
        static final String DFA221_maxS =
            "\1\u0080\1\0\37\uffff";
        static final String DFA221_acceptS =
            "\2\uffff\1\2\35\uffff\1\1";
        static final String DFA221_specialS =
            "\1\uffff\1\0\37\uffff}>";
        static final String[] DFA221_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\12\uffff\2\2\5\uffff\4\2\26\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA221_eot = DFA.unpackEncodedString(DFA221_eotS);
        static final short[] DFA221_eof = DFA.unpackEncodedString(DFA221_eofS);
        static final char[] DFA221_min = DFA.unpackEncodedStringToUnsignedChars(DFA221_minS);
        static final char[] DFA221_max = DFA.unpackEncodedStringToUnsignedChars(DFA221_maxS);
        static final short[] DFA221_accept = DFA.unpackEncodedString(DFA221_acceptS);
        static final short[] DFA221_special = DFA.unpackEncodedString(DFA221_specialS);
        static final short[][] DFA221_transition;
        static {
            int numStates = DFA221_transitionS.length;
            DFA221_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA221_transition[i] = DFA.unpackEncodedString(DFA221_transitionS[i]);
            }
        }
    }
    class DFA221 extends DFA {

        public DFA221(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 221;
            this.eot = DFA221_eot;
            this.eof = DFA221_eof;
            this.min = DFA221_min;
            this.max = DFA221_max;
            this.accept = DFA221_accept;
            this.special = DFA221_special;
            this.transition = DFA221_transition;
        }
        public String getDescription() {
            return "6752:9: ( splice[StatementExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= statementExpression ( ',' b= statementExpression )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA221_1 = input.LA(1);

                         
                        int index221_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred298_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 32;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index221_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 221, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA224_eotS = DFA224Data.DFA224_eotS;
    static final String DFA224_eofS = DFA224Data.DFA224_eofS;
    static final String DFA224_minS = DFA224Data.DFA224_minS;
    static final String DFA224_maxS = DFA224Data.DFA224_maxS;
    static final String DFA224_acceptS = DFA224Data.DFA224_acceptS;
    static final String DFA224_specialS = DFA224Data.DFA224_specialS;
    static final String[] DFA224_transitionS = DFA224Data.DFA224_transitionS;

    static final short[] DFA224_eot = DFA224Data.DFA224_eot;
    static final short[] DFA224_eof = DFA224Data.DFA224_eof;
    static final char[] DFA224_min = DFA224Data.DFA224_min;
    static final char[] DFA224_max = DFA224Data.DFA224_max;
    static final short[] DFA224_accept = DFA224Data.DFA224_accept;
    static final short[] DFA224_special = DFA224Data.DFA224_special;
    static final short[][] DFA224_transition = DFA224Data.DFA224_transition;


    static class DFA224Data {
        static final String DFA224_eotS =
            "\41\uffff";
        static final String DFA224_eofS =
            "\41\uffff";
        static final String DFA224_minS =
            "\1\4\1\0\37\uffff";
        static final String DFA224_maxS =
            "\1\u0080\1\0\37\uffff";
        static final String DFA224_acceptS =
            "\2\uffff\1\2\35\uffff\1\1";
        static final String DFA224_specialS =
            "\1\uffff\1\0\37\uffff}>";
        static final String[] DFA224_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\12\uffff\2\2\5\uffff\4\2\26\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA224_eot = DFA.unpackEncodedString(DFA224_eotS);
        static final short[] DFA224_eof = DFA.unpackEncodedString(DFA224_eofS);
        static final char[] DFA224_min = DFA.unpackEncodedStringToUnsignedChars(DFA224_minS);
        static final char[] DFA224_max = DFA.unpackEncodedStringToUnsignedChars(DFA224_maxS);
        static final short[] DFA224_accept = DFA.unpackEncodedString(DFA224_acceptS);
        static final short[] DFA224_special = DFA.unpackEncodedString(DFA224_specialS);
        static final short[][] DFA224_transition;
        static {
            int numStates = DFA224_transitionS.length;
            DFA224_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA224_transition[i] = DFA.unpackEncodedString(DFA224_transitionS[i]);
            }
        }
    }
    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = DFA224_eot;
            this.eof = DFA224_eof;
            this.min = DFA224_min;
            this.max = DFA224_max;
            this.accept = DFA224_accept;
            this.special = DFA224_special;
            this.transition = DFA224_transition;
        }
        public String getDescription() {
            return "6831:9: ( splice[ExpressionListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= expression ( ',' b= expression )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA224_1 = input.LA(1);

                         
                        int index224_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred301_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 32;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index224_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 224, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA226_eotS = DFA226Data.DFA226_eotS;
    static final String DFA226_eofS = DFA226Data.DFA226_eofS;
    static final String DFA226_minS = DFA226Data.DFA226_minS;
    static final String DFA226_maxS = DFA226Data.DFA226_maxS;
    static final String DFA226_acceptS = DFA226Data.DFA226_acceptS;
    static final String DFA226_specialS = DFA226Data.DFA226_specialS;
    static final String[] DFA226_transitionS = DFA226Data.DFA226_transitionS;

    static final short[] DFA226_eot = DFA226Data.DFA226_eot;
    static final short[] DFA226_eof = DFA226Data.DFA226_eof;
    static final char[] DFA226_min = DFA226Data.DFA226_min;
    static final char[] DFA226_max = DFA226Data.DFA226_max;
    static final short[] DFA226_accept = DFA226Data.DFA226_accept;
    static final short[] DFA226_special = DFA226Data.DFA226_special;
    static final short[][] DFA226_transition = DFA226Data.DFA226_transition;


    static class DFA226Data {
        static final String DFA226_eotS =
            "\41\uffff";
        static final String DFA226_eofS =
            "\41\uffff";
        static final String DFA226_minS =
            "\1\4\1\0\37\uffff";
        static final String DFA226_maxS =
            "\1\u0080\1\0\37\uffff";
        static final String DFA226_acceptS =
            "\2\uffff\1\2\20\uffff\2\2\13\uffff\1\1";
        static final String DFA226_specialS =
            "\1\0\1\1\37\uffff}>";
        static final String[] DFA226_transitionS = {
                "\1\23\3\uffff\2\24\12\2\1\24\24\uffff\1\24\1\uffff\1\24\2\uffff"+
                "\1\24\5\uffff\1\24\4\uffff\1\24\6\uffff\1\24\1\uffff\1\24\6"+
                "\uffff\1\24\7\uffff\1\24\2\uffff\1\2\12\uffff\2\2\5\uffff\4"+
                "\2\26\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA226_eot = DFA.unpackEncodedString(DFA226_eotS);
        static final short[] DFA226_eof = DFA.unpackEncodedString(DFA226_eofS);
        static final char[] DFA226_min = DFA.unpackEncodedStringToUnsignedChars(DFA226_minS);
        static final char[] DFA226_max = DFA.unpackEncodedStringToUnsignedChars(DFA226_maxS);
        static final short[] DFA226_accept = DFA.unpackEncodedString(DFA226_acceptS);
        static final short[] DFA226_special = DFA.unpackEncodedString(DFA226_specialS);
        static final short[][] DFA226_transition;
        static {
            int numStates = DFA226_transitionS.length;
            DFA226_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA226_transition[i] = DFA.unpackEncodedString(DFA226_transitionS[i]);
            }
        }
    }
    class DFA226 extends DFA {

        public DFA226(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 226;
            this.eot = DFA226_eot;
            this.eof = DFA226_eof;
            this.min = DFA226_min;
            this.max = DFA226_max;
            this.accept = DFA226_accept;
            this.special = DFA226_special;
            this.transition = DFA226_transition;
        }
        public String getDescription() {
            return "6948:9: ( splice[ExpressionNode.class, Arrays.<Class<? extends Node>>asList(NonAssignmentExpressionNode.class)] | conditionalExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA226_0 = input.LA(1);

                         
                        int index226_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA226_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( ((LA226_0>=NEW && LA226_0<=NULL)||LA226_0==LPAREN||(LA226_0>=BANG && LA226_0<=TILDE)||(LA226_0>=PLUSPLUS && LA226_0<=SUB)) ) {s = 2;}

                        else if ( (LA226_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 19;}

                        else if ( ((LA226_0>=SUPER && LA226_0<=THIS)||LA226_0==IDENTIFIER||LA226_0==BOOLEAN||LA226_0==BYTE||LA226_0==CHAR||LA226_0==DOUBLE||LA226_0==FLOAT||LA226_0==INT||LA226_0==LONG||LA226_0==SHORT||LA226_0==VOID) ) {s = 20;}

                         
                        input.seek(index226_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA226_1 = input.LA(1);

                         
                        int index226_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred304_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 32;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 20;}

                         
                        input.seek(index226_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 226, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA228_eotS = DFA228Data.DFA228_eotS;
    static final String DFA228_eofS = DFA228Data.DFA228_eofS;
    static final String DFA228_minS = DFA228Data.DFA228_minS;
    static final String DFA228_maxS = DFA228Data.DFA228_maxS;
    static final String DFA228_acceptS = DFA228Data.DFA228_acceptS;
    static final String DFA228_specialS = DFA228Data.DFA228_specialS;
    static final String[] DFA228_transitionS = DFA228Data.DFA228_transitionS;

    static final short[] DFA228_eot = DFA228Data.DFA228_eot;
    static final short[] DFA228_eof = DFA228Data.DFA228_eof;
    static final char[] DFA228_min = DFA228Data.DFA228_min;
    static final char[] DFA228_max = DFA228Data.DFA228_max;
    static final short[] DFA228_accept = DFA228Data.DFA228_accept;
    static final short[] DFA228_special = DFA228Data.DFA228_special;
    static final short[][] DFA228_transition = DFA228Data.DFA228_transition;


    static class DFA228Data {
        static final String DFA228_eotS =
            "\17\uffff";
        static final String DFA228_eofS =
            "\17\uffff";
        static final String DFA228_minS =
            "\1\136\12\uffff\1\172\1\136\2\uffff";
        static final String DFA228_maxS =
            "\1\173\12\uffff\2\172\2\uffff";
        static final String DFA228_acceptS =
            "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff\1\13"+
            "\1\14";
        static final String DFA228_specialS =
            "\17\uffff}>";
        static final String[] DFA228_transitionS = {
                "\1\1\21\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff\1\13"+
                "\1\12",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\14",
                "\1\16\33\uffff\1\15",
                "",
                ""
        };
        static final short[] DFA228_eot = DFA.unpackEncodedString(DFA228_eotS);
        static final short[] DFA228_eof = DFA.unpackEncodedString(DFA228_eofS);
        static final char[] DFA228_min = DFA.unpackEncodedStringToUnsignedChars(DFA228_minS);
        static final char[] DFA228_max = DFA.unpackEncodedStringToUnsignedChars(DFA228_maxS);
        static final short[] DFA228_accept = DFA.unpackEncodedString(DFA228_acceptS);
        static final short[] DFA228_special = DFA.unpackEncodedString(DFA228_specialS);
        static final short[][] DFA228_transition;
        static {
            int numStates = DFA228_transitionS.length;
            DFA228_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA228_transition[i] = DFA.unpackEncodedString(DFA228_transitionS[i]);
            }
        }
    }
    class DFA228 extends DFA {

        public DFA228(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 228;
            this.eot = DFA228_eot;
            this.eof = DFA228_eof;
            this.min = DFA228_min;
            this.max = DFA228_max;
            this.accept = DFA228_accept;
            this.special = DFA228_special;
            this.transition = DFA228_transition;
        }
        public String getDescription() {
            return "6972:1: assignmentOperator returns [AssignmentOperator ret] : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | '<' '<' '=' | '>' '>' '>' '=' | '>' '>' '=' );";
        }
    }
    static final String DFA246_eotS = DFA246Data.DFA246_eotS;
    static final String DFA246_eofS = DFA246Data.DFA246_eofS;
    static final String DFA246_minS = DFA246Data.DFA246_minS;
    static final String DFA246_maxS = DFA246Data.DFA246_maxS;
    static final String DFA246_acceptS = DFA246Data.DFA246_acceptS;
    static final String DFA246_specialS = DFA246Data.DFA246_specialS;
    static final String[] DFA246_transitionS = DFA246Data.DFA246_transitionS;

    static final short[] DFA246_eot = DFA246Data.DFA246_eot;
    static final short[] DFA246_eof = DFA246Data.DFA246_eof;
    static final char[] DFA246_min = DFA246Data.DFA246_min;
    static final char[] DFA246_max = DFA246Data.DFA246_max;
    static final short[] DFA246_accept = DFA246Data.DFA246_accept;
    static final short[] DFA246_special = DFA246Data.DFA246_special;
    static final short[][] DFA246_transition = DFA246Data.DFA246_transition;


    static class DFA246Data {
        static final String DFA246_eotS =
            "\17\uffff";
        static final String DFA246_eofS =
            "\17\uffff";
        static final String DFA246_minS =
            "\1\4\1\uffff\1\4\7\uffff\2\0\3\uffff";
        static final String DFA246_maxS =
            "\1\u0080\1\uffff\1\u0080\7\uffff\2\0\3\uffff";
        static final String DFA246_acceptS =
            "\1\uffff\1\1\1\uffff\1\5\1\6\5\7\2\uffff\1\4\1\3\1\2";
        static final String DFA246_specialS =
            "\1\1\11\uffff\1\0\1\2\3\uffff}>";
        static final String[] DFA246_transitionS = {
                "\1\10\3\uffff\2\11\12\7\1\11\24\uffff\1\11\1\uffff\1\11\2\uffff"+
                "\1\11\5\uffff\1\11\4\uffff\1\11\6\uffff\1\11\1\uffff\1\11\6"+
                "\uffff\1\11\7\uffff\1\11\2\uffff\1\5\12\uffff\2\5\5\uffff\1"+
                "\3\1\4\1\1\1\2\26\uffff\1\6",
                "",
                "\1\14\3\uffff\3\14\1\13\1\12\10\14\24\uffff\1\14\1\uffff\1"+
                "\14\2\uffff\1\14\5\uffff\1\14\4\uffff\1\14\6\uffff\1\14\1\uffff"+
                "\1\14\6\uffff\1\14\7\uffff\1\14\2\uffff\1\14\12\uffff\2\14\5"+
                "\uffff\4\14\26\uffff\1\14",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                ""
        };
        static final short[] DFA246_eot = DFA.unpackEncodedString(DFA246_eotS);
        static final short[] DFA246_eof = DFA.unpackEncodedString(DFA246_eofS);
        static final char[] DFA246_min = DFA.unpackEncodedStringToUnsignedChars(DFA246_minS);
        static final char[] DFA246_max = DFA.unpackEncodedStringToUnsignedChars(DFA246_maxS);
        static final short[] DFA246_accept = DFA.unpackEncodedString(DFA246_acceptS);
        static final short[] DFA246_special = DFA.unpackEncodedString(DFA246_specialS);
        static final short[][] DFA246_transition;
        static {
            int numStates = DFA246_transitionS.length;
            DFA246_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA246_transition[i] = DFA.unpackEncodedString(DFA246_transitionS[i]);
            }
        }
    }
    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = DFA246_eot;
            this.eof = DFA246_eof;
            this.min = DFA246_min;
            this.max = DFA246_max;
            this.accept = DFA246_accept;
            this.special = DFA246_special;
            this.transition = DFA246_transition;
        }
        public String getDescription() {
            return "7424:1: unaryExpression returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : ( '+' e= unaryExpression | '-' intLiteral[true] | '-' longLiteral[true] | '-' e= unaryExpression | '++' e= unaryExpression | '--' e= unaryExpression | unaryExpressionNotPlusMinus );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA246_10 = input.LA(1);

                         
                        int index246_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred340_BsjAntlr()) ) {s = 13;}

                        else if ( (synpred341_BsjAntlr()) ) {s = 12;}

                         
                        input.seek(index246_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA246_0 = input.LA(1);

                         
                        int index246_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA246_0==PLUS) ) {s = 1;}

                        else if ( (LA246_0==SUB) ) {s = 2;}

                        else if ( (LA246_0==PLUSPLUS) ) {s = 3;}

                        else if ( (LA246_0==SUBSUB) ) {s = 4;}

                        else if ( (LA246_0==LPAREN||(LA246_0>=BANG && LA246_0<=TILDE)) ) {s = 5;}

                        else if ( (LA246_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 6;}

                        else if ( ((LA246_0>=NEW && LA246_0<=NULL)) ) {s = 7;}

                        else if ( (LA246_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 8;}

                        else if ( ((LA246_0>=SUPER && LA246_0<=THIS)||LA246_0==IDENTIFIER||LA246_0==BOOLEAN||LA246_0==BYTE||LA246_0==CHAR||LA246_0==DOUBLE||LA246_0==FLOAT||LA246_0==INT||LA246_0==LONG||LA246_0==SHORT||LA246_0==VOID) ) {s = 9;}

                         
                        input.seek(index246_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA246_11 = input.LA(1);

                         
                        int index246_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred339_BsjAntlr()) ) {s = 14;}

                        else if ( (synpred341_BsjAntlr()) ) {s = 12;}

                         
                        input.seek(index246_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 246, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA247_eotS = DFA247Data.DFA247_eotS;
    static final String DFA247_eofS = DFA247Data.DFA247_eofS;
    static final String DFA247_minS = DFA247Data.DFA247_minS;
    static final String DFA247_maxS = DFA247Data.DFA247_maxS;
    static final String DFA247_acceptS = DFA247Data.DFA247_acceptS;
    static final String DFA247_specialS = DFA247Data.DFA247_specialS;
    static final String[] DFA247_transitionS = DFA247Data.DFA247_transitionS;

    static final short[] DFA247_eot = DFA247Data.DFA247_eot;
    static final short[] DFA247_eof = DFA247Data.DFA247_eof;
    static final char[] DFA247_min = DFA247Data.DFA247_min;
    static final char[] DFA247_max = DFA247Data.DFA247_max;
    static final short[] DFA247_accept = DFA247Data.DFA247_accept;
    static final short[] DFA247_special = DFA247Data.DFA247_special;
    static final short[][] DFA247_transition = DFA247Data.DFA247_transition;


    static class DFA247Data {
        static final String DFA247_eotS =
            "\35\uffff";
        static final String DFA247_eofS =
            "\35\uffff";
        static final String DFA247_minS =
            "\1\4\2\uffff\1\0\31\uffff";
        static final String DFA247_maxS =
            "\1\u0080\2\uffff\1\0\31\uffff";
        static final String DFA247_acceptS =
            "\1\uffff\1\1\1\2\1\uffff\2\4\11\uffff\2\4\13\uffff\1\3";
        static final String DFA247_specialS =
            "\1\0\2\uffff\1\1\31\uffff}>";
        static final String[] DFA247_transitionS = {
                "\1\17\3\uffff\2\20\12\5\1\20\24\uffff\1\20\1\uffff\1\20\2\uffff"+
                "\1\20\5\uffff\1\20\4\uffff\1\20\6\uffff\1\20\1\uffff\1\20\6"+
                "\uffff\1\20\7\uffff\1\20\2\uffff\1\3\12\uffff\1\2\1\1\37\uffff"+
                "\1\4",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA247_eot = DFA.unpackEncodedString(DFA247_eotS);
        static final short[] DFA247_eof = DFA.unpackEncodedString(DFA247_eofS);
        static final char[] DFA247_min = DFA.unpackEncodedStringToUnsignedChars(DFA247_minS);
        static final char[] DFA247_max = DFA.unpackEncodedStringToUnsignedChars(DFA247_maxS);
        static final short[] DFA247_accept = DFA.unpackEncodedString(DFA247_acceptS);
        static final short[] DFA247_special = DFA.unpackEncodedString(DFA247_specialS);
        static final short[][] DFA247_transition;
        static {
            int numStates = DFA247_transitionS.length;
            DFA247_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA247_transition[i] = DFA.unpackEncodedString(DFA247_transitionS[i]);
            }
        }
    }
    class DFA247 extends DFA {

        public DFA247(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 247;
            this.eot = DFA247_eot;
            this.eof = DFA247_eof;
            this.min = DFA247_min;
            this.max = DFA247_max;
            this.accept = DFA247_accept;
            this.special = DFA247_special;
            this.transition = DFA247_transition;
        }
        public String getDescription() {
            return "7481:1: unaryExpressionNotPlusMinus returns [NodeUnion<? extends NonAssignmentExpressionNode> ret] : ( '~' unaryExpression | '!' unaryExpression | castExpression | postfixExpression );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA247_0 = input.LA(1);

                         
                        int index247_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA247_0==TILDE) ) {s = 1;}

                        else if ( (LA247_0==BANG) ) {s = 2;}

                        else if ( (LA247_0==LPAREN) ) {s = 3;}

                        else if ( (LA247_0==128) && (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))))) {s = 4;}

                        else if ( ((LA247_0>=NEW && LA247_0<=NULL)) ) {s = 5;}

                        else if ( (LA247_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 15;}

                        else if ( ((LA247_0>=SUPER && LA247_0<=THIS)||LA247_0==IDENTIFIER||LA247_0==BOOLEAN||LA247_0==BYTE||LA247_0==CHAR||LA247_0==DOUBLE||LA247_0==FLOAT||LA247_0==INT||LA247_0==LONG||LA247_0==SHORT||LA247_0==VOID) ) {s = 16;}

                         
                        input.seek(index247_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA247_3 = input.LA(1);

                         
                        int index247_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred346_BsjAntlr()) ) {s = 28;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index247_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 247, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA248_eotS = DFA248Data.DFA248_eotS;
    static final String DFA248_eofS = DFA248Data.DFA248_eofS;
    static final String DFA248_minS = DFA248Data.DFA248_minS;
    static final String DFA248_maxS = DFA248Data.DFA248_maxS;
    static final String DFA248_acceptS = DFA248Data.DFA248_acceptS;
    static final String DFA248_specialS = DFA248Data.DFA248_specialS;
    static final String[] DFA248_transitionS = DFA248Data.DFA248_transitionS;

    static final short[] DFA248_eot = DFA248Data.DFA248_eot;
    static final short[] DFA248_eof = DFA248Data.DFA248_eof;
    static final char[] DFA248_min = DFA248Data.DFA248_min;
    static final char[] DFA248_max = DFA248Data.DFA248_max;
    static final short[] DFA248_accept = DFA248Data.DFA248_accept;
    static final short[] DFA248_special = DFA248Data.DFA248_special;
    static final short[][] DFA248_transition = DFA248Data.DFA248_transition;


    static class DFA248Data {
        static final String DFA248_eotS =
            "\33\uffff";
        static final String DFA248_eofS =
            "\33\uffff";
        static final String DFA248_minS =
            "\1\4\1\0\31\uffff";
        static final String DFA248_maxS =
            "\1\u0080\1\0\31\uffff";
        static final String DFA248_acceptS =
            "\2\uffff\1\2\11\uffff\2\2\14\uffff\1\1";
        static final String DFA248_specialS =
            "\1\0\1\1\31\uffff}>";
        static final String[] DFA248_transitionS = {
                "\1\14\3\uffff\2\15\12\2\1\15\24\uffff\1\15\1\uffff\1\15\2\uffff"+
                "\1\15\5\uffff\1\15\4\uffff\1\15\6\uffff\1\15\1\uffff\1\15\6"+
                "\uffff\1\15\7\uffff\1\15\2\uffff\1\15\53\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA248_eot = DFA.unpackEncodedString(DFA248_eotS);
        static final short[] DFA248_eof = DFA.unpackEncodedString(DFA248_eofS);
        static final char[] DFA248_min = DFA.unpackEncodedStringToUnsignedChars(DFA248_minS);
        static final char[] DFA248_max = DFA.unpackEncodedStringToUnsignedChars(DFA248_maxS);
        static final short[] DFA248_accept = DFA.unpackEncodedString(DFA248_acceptS);
        static final short[] DFA248_special = DFA.unpackEncodedString(DFA248_specialS);
        static final short[][] DFA248_transition;
        static {
            int numStates = DFA248_transitionS.length;
            DFA248_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA248_transition[i] = DFA.unpackEncodedString(DFA248_transitionS[i]);
            }
        }
    }
    class DFA248 extends DFA {

        public DFA248(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 248;
            this.eot = DFA248_eot;
            this.eof = DFA248_eof;
            this.min = DFA248_min;
            this.max = DFA248_max;
            this.accept = DFA248_accept;
            this.special = DFA248_special;
            this.transition = DFA248_transition;
        }
        public String getDescription() {
            return "7541:9: ( splice[NonAssignmentExpressionNode.class, Arrays.<Class<? extends Node>>asList(PrimaryExpressionNode.class)] | primary )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA248_0 = input.LA(1);

                         
                        int index248_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA248_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( ((LA248_0>=NEW && LA248_0<=NULL)) ) {s = 2;}

                        else if ( (LA248_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 12;}

                        else if ( ((LA248_0>=SUPER && LA248_0<=THIS)||LA248_0==IDENTIFIER||LA248_0==BOOLEAN||LA248_0==BYTE||LA248_0==CHAR||LA248_0==DOUBLE||LA248_0==FLOAT||LA248_0==INT||LA248_0==LONG||LA248_0==SHORT||LA248_0==VOID||LA248_0==LPAREN) ) {s = 13;}

                         
                        input.seek(index248_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA248_1 = input.LA(1);

                         
                        int index248_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred347_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 26;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 13;}

                         
                        input.seek(index248_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 248, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA250_eotS = DFA250Data.DFA250_eotS;
    static final String DFA250_eofS = DFA250Data.DFA250_eofS;
    static final String DFA250_minS = DFA250Data.DFA250_minS;
    static final String DFA250_maxS = DFA250Data.DFA250_maxS;
    static final String DFA250_acceptS = DFA250Data.DFA250_acceptS;
    static final String DFA250_specialS = DFA250Data.DFA250_specialS;
    static final String[] DFA250_transitionS = DFA250Data.DFA250_transitionS;

    static final short[] DFA250_eot = DFA250Data.DFA250_eot;
    static final short[] DFA250_eof = DFA250Data.DFA250_eof;
    static final char[] DFA250_min = DFA250Data.DFA250_min;
    static final char[] DFA250_max = DFA250Data.DFA250_max;
    static final short[] DFA250_accept = DFA250Data.DFA250_accept;
    static final short[] DFA250_special = DFA250Data.DFA250_special;
    static final short[][] DFA250_transition = DFA250Data.DFA250_transition;


    static class DFA250Data {
        static final String DFA250_eotS =
            "\34\uffff";
        static final String DFA250_eofS =
            "\34\uffff";
        static final String DFA250_minS =
            "\1\4\2\0\31\uffff";
        static final String DFA250_maxS =
            "\1\u0080\2\0\31\uffff";
        static final String DFA250_acceptS =
            "\3\uffff\1\3\10\uffff\2\3\14\uffff\1\1\1\2";
        static final String DFA250_specialS =
            "\1\0\1\1\1\2\31\uffff}>";
        static final String[] DFA250_transitionS = {
                "\1\14\3\uffff\2\15\1\2\11\3\1\15\24\uffff\1\15\1\uffff\1\15"+
                "\2\uffff\1\15\5\uffff\1\15\4\uffff\1\15\6\uffff\1\15\1\uffff"+
                "\1\15\6\uffff\1\15\7\uffff\1\15\2\uffff\1\15\53\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA250_eot = DFA.unpackEncodedString(DFA250_eotS);
        static final short[] DFA250_eof = DFA.unpackEncodedString(DFA250_eofS);
        static final char[] DFA250_min = DFA.unpackEncodedStringToUnsignedChars(DFA250_minS);
        static final char[] DFA250_max = DFA.unpackEncodedStringToUnsignedChars(DFA250_maxS);
        static final short[] DFA250_accept = DFA.unpackEncodedString(DFA250_acceptS);
        static final short[] DFA250_special = DFA.unpackEncodedString(DFA250_specialS);
        static final short[][] DFA250_transition;
        static {
            int numStates = DFA250_transitionS.length;
            DFA250_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA250_transition[i] = DFA.unpackEncodedString(DFA250_transitionS[i]);
            }
        }
    }
    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = DFA250_eot;
            this.eof = DFA250_eof;
            this.min = DFA250_min;
            this.max = DFA250_max;
            this.accept = DFA250_accept;
            this.special = DFA250_special;
            this.transition = DFA250_transition;
        }
        public String getDescription() {
            return "7582:9: ( splice[PrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(RestrictedPrimaryExpressionNode.class, ArrayCreationNode.class)] | arrayCreator | restrictedPrimary )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA250_0 = input.LA(1);

                         
                        int index250_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA250_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA250_0==NEW) ) {s = 2;}

                        else if ( ((LA250_0>=INTLITERAL && LA250_0<=NULL)) ) {s = 3;}

                        else if ( (LA250_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 12;}

                        else if ( ((LA250_0>=SUPER && LA250_0<=THIS)||LA250_0==IDENTIFIER||LA250_0==BOOLEAN||LA250_0==BYTE||LA250_0==CHAR||LA250_0==DOUBLE||LA250_0==FLOAT||LA250_0==INT||LA250_0==LONG||LA250_0==SHORT||LA250_0==VOID||LA250_0==LPAREN) ) {s = 13;}

                         
                        input.seek(index250_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA250_1 = input.LA(1);

                         
                        int index250_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred350_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 26;}

                        else if ( ((synpred351_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 27;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 13;}

                         
                        input.seek(index250_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA250_2 = input.LA(1);

                         
                        int index250_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred351_BsjAntlr()) ) {s = 27;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index250_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 250, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA251_eotS = DFA251Data.DFA251_eotS;
    static final String DFA251_eofS = DFA251Data.DFA251_eofS;
    static final String DFA251_minS = DFA251Data.DFA251_minS;
    static final String DFA251_maxS = DFA251Data.DFA251_maxS;
    static final String DFA251_acceptS = DFA251Data.DFA251_acceptS;
    static final String DFA251_specialS = DFA251Data.DFA251_specialS;
    static final String[] DFA251_transitionS = DFA251Data.DFA251_transitionS;

    static final short[] DFA251_eot = DFA251Data.DFA251_eot;
    static final short[] DFA251_eof = DFA251Data.DFA251_eof;
    static final char[] DFA251_min = DFA251Data.DFA251_min;
    static final char[] DFA251_max = DFA251Data.DFA251_max;
    static final short[] DFA251_accept = DFA251Data.DFA251_accept;
    static final short[] DFA251_special = DFA251Data.DFA251_special;
    static final short[][] DFA251_transition = DFA251Data.DFA251_transition;


    static class DFA251Data {
        static final String DFA251_eotS =
            "\46\uffff";
        static final String DFA251_eofS =
            "\1\2\45\uffff";
        static final String DFA251_minS =
            "\1\77\1\0\44\uffff";
        static final String DFA251_maxS =
            "\1\u0081\1\0\44\uffff";
        static final String DFA251_acceptS =
            "\2\uffff\1\2\42\uffff\1\1";
        static final String DFA251_specialS =
            "\1\uffff\1\0\44\uffff}>";
        static final String[] DFA251_transitionS = {
                "\1\2\25\uffff\1\2\1\uffff\1\2\1\uffff\3\2\1\1\1\uffff\1\2\2"+
                "\uffff\27\2\1\uffff\3\2\5\uffff\1\2",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA251_eot = DFA.unpackEncodedString(DFA251_eotS);
        static final short[] DFA251_eof = DFA.unpackEncodedString(DFA251_eofS);
        static final char[] DFA251_min = DFA.unpackEncodedStringToUnsignedChars(DFA251_minS);
        static final char[] DFA251_max = DFA.unpackEncodedStringToUnsignedChars(DFA251_maxS);
        static final short[] DFA251_accept = DFA.unpackEncodedString(DFA251_acceptS);
        static final short[] DFA251_special = DFA.unpackEncodedString(DFA251_specialS);
        static final short[][] DFA251_transition;
        static {
            int numStates = DFA251_transitionS.length;
            DFA251_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA251_transition[i] = DFA.unpackEncodedString(DFA251_transitionS[i]);
            }
        }
    }
    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 251;
            this.eot = DFA251_eot;
            this.eof = DFA251_eof;
            this.min = DFA251_min;
            this.max = DFA251_max;
            this.accept = DFA251_accept;
            this.special = DFA251_special;
            this.transition = DFA251_transition;
        }
        public String getDescription() {
            return "()* loopback of 7599:9: ( primarySuffix )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA251_1 = input.LA(1);

                         
                        int index251_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred352_BsjAntlr()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index251_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 251, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA254_eotS = DFA254Data.DFA254_eotS;
    static final String DFA254_eofS = DFA254Data.DFA254_eofS;
    static final String DFA254_minS = DFA254Data.DFA254_minS;
    static final String DFA254_maxS = DFA254Data.DFA254_maxS;
    static final String DFA254_acceptS = DFA254Data.DFA254_acceptS;
    static final String DFA254_specialS = DFA254Data.DFA254_specialS;
    static final String[] DFA254_transitionS = DFA254Data.DFA254_transitionS;

    static final short[] DFA254_eot = DFA254Data.DFA254_eot;
    static final short[] DFA254_eof = DFA254Data.DFA254_eof;
    static final char[] DFA254_min = DFA254Data.DFA254_min;
    static final char[] DFA254_max = DFA254Data.DFA254_max;
    static final short[] DFA254_accept = DFA254Data.DFA254_accept;
    static final short[] DFA254_special = DFA254Data.DFA254_special;
    static final short[][] DFA254_transition = DFA254Data.DFA254_transition;


    static class DFA254Data {
        static final String DFA254_eotS =
            "\33\uffff";
        static final String DFA254_eofS =
            "\33\uffff";
        static final String DFA254_minS =
            "\1\4\1\0\31\uffff";
        static final String DFA254_maxS =
            "\1\u0080\1\0\31\uffff";
        static final String DFA254_acceptS =
            "\2\uffff\1\2\10\uffff\2\2\15\uffff\1\1";
        static final String DFA254_specialS =
            "\1\0\1\1\31\uffff}>";
        static final String[] DFA254_transitionS = {
                "\1\13\3\uffff\3\14\11\2\1\14\24\uffff\1\14\1\uffff\1\14\2\uffff"+
                "\1\14\5\uffff\1\14\4\uffff\1\14\6\uffff\1\14\1\uffff\1\14\6"+
                "\uffff\1\14\7\uffff\1\14\2\uffff\1\14\53\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA254_eot = DFA.unpackEncodedString(DFA254_eotS);
        static final short[] DFA254_eof = DFA.unpackEncodedString(DFA254_eofS);
        static final char[] DFA254_min = DFA.unpackEncodedStringToUnsignedChars(DFA254_minS);
        static final char[] DFA254_max = DFA.unpackEncodedStringToUnsignedChars(DFA254_maxS);
        static final short[] DFA254_accept = DFA.unpackEncodedString(DFA254_acceptS);
        static final short[] DFA254_special = DFA.unpackEncodedString(DFA254_specialS);
        static final short[][] DFA254_transition;
        static {
            int numStates = DFA254_transitionS.length;
            DFA254_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA254_transition[i] = DFA.unpackEncodedString(DFA254_transitionS[i]);
            }
        }
    }
    class DFA254 extends DFA {

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 254;
            this.eot = DFA254_eot;
            this.eof = DFA254_eof;
            this.min = DFA254_min;
            this.max = DFA254_max;
            this.accept = DFA254_accept;
            this.special = DFA254_special;
            this.transition = DFA254_transition;
        }
        public String getDescription() {
            return "7610:1: restrictedPrimary returns [NodeUnion<? extends RestrictedPrimaryExpressionNode> ret] : ( splice[RestrictedPrimaryExpressionNode.class, Arrays.<Class<? extends Node>>asList(UnqualifiedClassInstantiationNode.class, SuperFieldAccessNode.class, SuperMethodInvocationNode.class)] | ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName ) ( arrayAccess[ret] )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA254_0 = input.LA(1);

                         
                        int index254_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA254_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( ((LA254_0>=INTLITERAL && LA254_0<=NULL)) ) {s = 2;}

                        else if ( (LA254_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 11;}

                        else if ( ((LA254_0>=SUPER && LA254_0<=NEW)||LA254_0==IDENTIFIER||LA254_0==BOOLEAN||LA254_0==BYTE||LA254_0==CHAR||LA254_0==DOUBLE||LA254_0==FLOAT||LA254_0==INT||LA254_0==LONG||LA254_0==SHORT||LA254_0==VOID||LA254_0==LPAREN) ) {s = 12;}

                         
                        input.seek(index254_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA254_1 = input.LA(1);

                         
                        int index254_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred353_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 26;}

                        else if ( ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported()))) ) {s = 12;}

                         
                        input.seek(index254_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 254, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA252_eotS = DFA252Data.DFA252_eotS;
    static final String DFA252_eofS = DFA252Data.DFA252_eofS;
    static final String DFA252_minS = DFA252Data.DFA252_minS;
    static final String DFA252_maxS = DFA252Data.DFA252_maxS;
    static final String DFA252_acceptS = DFA252Data.DFA252_acceptS;
    static final String DFA252_specialS = DFA252Data.DFA252_specialS;
    static final String[] DFA252_transitionS = DFA252Data.DFA252_transitionS;

    static final short[] DFA252_eot = DFA252Data.DFA252_eot;
    static final short[] DFA252_eof = DFA252Data.DFA252_eof;
    static final char[] DFA252_min = DFA252Data.DFA252_min;
    static final char[] DFA252_max = DFA252Data.DFA252_max;
    static final short[] DFA252_accept = DFA252Data.DFA252_accept;
    static final short[] DFA252_special = DFA252Data.DFA252_special;
    static final short[][] DFA252_transition = DFA252Data.DFA252_transition;


    static class DFA252Data {
        static final String DFA252_eotS =
            "\40\uffff";
        static final String DFA252_eofS =
            "\40\uffff";
        static final String DFA252_minS =
            "\1\4\11\uffff\1\0\11\uffff\1\0\4\uffff\1\0\6\uffff";
        static final String DFA252_maxS =
            "\1\u0080\11\uffff\1\0\11\uffff\1\0\4\uffff\1\0\6\uffff";
        static final String DFA252_acceptS =
            "\1\uffff\1\1\12\uffff\1\2\10\uffff\1\4\1\5\1\6\1\7\1\uffff\1\3\1"+
            "\10\1\11\1\12\1\13\1\14";
        static final String DFA252_specialS =
            "\1\0\11\uffff\1\1\11\uffff\1\2\4\uffff\1\3\6\uffff}>";
        static final String[] DFA252_transitionS = {
                "\1\1\3\uffff\1\31\1\26\1\30\11\1\1\24\24\uffff\1\14\1\uffff"+
                "\1\14\2\uffff\1\14\5\uffff\1\14\4\uffff\1\14\6\uffff\1\14\1"+
                "\uffff\1\14\6\uffff\1\14\7\uffff\1\25\2\uffff\1\27\53\uffff"+
                "\1\12",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA252_eot = DFA.unpackEncodedString(DFA252_eotS);
        static final short[] DFA252_eof = DFA.unpackEncodedString(DFA252_eofS);
        static final char[] DFA252_min = DFA.unpackEncodedStringToUnsignedChars(DFA252_minS);
        static final char[] DFA252_max = DFA.unpackEncodedStringToUnsignedChars(DFA252_maxS);
        static final short[] DFA252_accept = DFA.unpackEncodedString(DFA252_acceptS);
        static final short[] DFA252_special = DFA.unpackEncodedString(DFA252_specialS);
        static final short[][] DFA252_transition;
        static {
            int numStates = DFA252_transitionS.length;
            DFA252_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA252_transition[i] = DFA.unpackEncodedString(DFA252_transitionS[i]);
            }
        }
    }
    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = DFA252_eot;
            this.eof = DFA252_eof;
            this.min = DFA252_min;
            this.max = DFA252_max;
            this.accept = DFA252_accept;
            this.special = DFA252_special;
            this.transition = DFA252_transition;
        }
        public String getDescription() {
            return "7625:9: ( lexicalLiteral | primitiveClassLiteral | declaredClassLiteral | voidClassLiteral | thisClause | parenthesizedExpression | unqualifiedClassInstantiation | superMethodInvocation | superFieldAccess | methodInvocationByName | typeQualifiedTypeArgumentMethodInvocation | variableAccessByName )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA252_0 = input.LA(1);

                         
                        int index252_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA252_0==CODELITERAL_START||(LA252_0>=INTLITERAL && LA252_0<=NULL)) ) {s = 1;}

                        else if ( (LA252_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 10;}

                        else if ( (LA252_0==BOOLEAN||LA252_0==BYTE||LA252_0==CHAR||LA252_0==DOUBLE||LA252_0==FLOAT||LA252_0==INT||LA252_0==LONG||LA252_0==SHORT) ) {s = 12;}

                        else if ( (LA252_0==IDENTIFIER) ) {s = 20;}

                        else if ( (LA252_0==VOID) ) {s = 21;}

                        else if ( (LA252_0==THIS) ) {s = 22;}

                        else if ( (LA252_0==LPAREN) ) {s = 23;}

                        else if ( (LA252_0==NEW) ) {s = 24;}

                        else if ( (LA252_0==SUPER) ) {s = 25;}

                         
                        input.seek(index252_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA252_10 = input.LA(1);

                         
                        int index252_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred354_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))) ) {s = 1;}

                        else if ( ((synpred355_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 12;}

                        else if ( (((synpred356_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred356_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred356_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 26;}

                        else if ( (((synpred358_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred358_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred358_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 22;}

                        else if ( ((synpred360_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 24;}

                        else if ( (((synpred361_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred361_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred361_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred361_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 27;}

                        else if ( (((synpred362_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred362_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred362_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred362_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 28;}

                        else if ( ((synpred363_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 29;}

                        else if ( ((synpred364_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 30;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 31;}

                         
                        input.seek(index252_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA252_20 = input.LA(1);

                         
                        int index252_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred356_BsjAntlr()) ) {s = 26;}

                        else if ( (synpred358_BsjAntlr()) ) {s = 22;}

                        else if ( (synpred361_BsjAntlr()) ) {s = 27;}

                        else if ( (synpred362_BsjAntlr()) ) {s = 28;}

                        else if ( (synpred363_BsjAntlr()) ) {s = 29;}

                        else if ( (synpred364_BsjAntlr()) ) {s = 30;}

                        else if ( (true) ) {s = 31;}

                         
                        input.seek(index252_20);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA252_25 = input.LA(1);

                         
                        int index252_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred361_BsjAntlr()) ) {s = 27;}

                        else if ( (synpred362_BsjAntlr()) ) {s = 28;}

                         
                        input.seek(index252_25);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 252, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA267_eotS = DFA267Data.DFA267_eotS;
    static final String DFA267_eofS = DFA267Data.DFA267_eofS;
    static final String DFA267_minS = DFA267Data.DFA267_minS;
    static final String DFA267_maxS = DFA267Data.DFA267_maxS;
    static final String DFA267_acceptS = DFA267Data.DFA267_acceptS;
    static final String DFA267_specialS = DFA267Data.DFA267_specialS;
    static final String[] DFA267_transitionS = DFA267Data.DFA267_transitionS;

    static final short[] DFA267_eot = DFA267Data.DFA267_eot;
    static final short[] DFA267_eof = DFA267Data.DFA267_eof;
    static final char[] DFA267_min = DFA267Data.DFA267_min;
    static final char[] DFA267_max = DFA267Data.DFA267_max;
    static final short[] DFA267_accept = DFA267Data.DFA267_accept;
    static final short[] DFA267_special = DFA267Data.DFA267_special;
    static final short[][] DFA267_transition = DFA267Data.DFA267_transition;


    static class DFA267Data {
        static final String DFA267_eotS =
            "\47\uffff";
        static final String DFA267_eofS =
            "\1\1\46\uffff";
        static final String DFA267_minS =
            "\1\77\1\uffff\1\0\44\uffff";
        static final String DFA267_maxS =
            "\1\u0081\1\uffff\1\0\44\uffff";
        static final String DFA267_acceptS =
            "\1\uffff\1\2\44\uffff\1\1";
        static final String DFA267_specialS =
            "\2\uffff\1\0\44\uffff}>";
        static final String[] DFA267_transitionS = {
                "\1\1\25\uffff\1\1\1\uffff\5\1\1\2\1\uffff\1\1\2\uffff\27\1\1"+
                "\uffff\3\1\5\uffff\1\1",
                "",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA267_eot = DFA.unpackEncodedString(DFA267_eotS);
        static final short[] DFA267_eof = DFA.unpackEncodedString(DFA267_eofS);
        static final char[] DFA267_min = DFA.unpackEncodedStringToUnsignedChars(DFA267_minS);
        static final char[] DFA267_max = DFA.unpackEncodedStringToUnsignedChars(DFA267_maxS);
        static final short[] DFA267_accept = DFA.unpackEncodedString(DFA267_acceptS);
        static final short[] DFA267_special = DFA.unpackEncodedString(DFA267_specialS);
        static final short[][] DFA267_transition;
        static {
            int numStates = DFA267_transitionS.length;
            DFA267_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA267_transition[i] = DFA.unpackEncodedString(DFA267_transitionS[i]);
            }
        }
    }
    class DFA267 extends DFA {

        public DFA267(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 267;
            this.eot = DFA267_eot;
            this.eof = DFA267_eof;
            this.min = DFA267_min;
            this.max = DFA267_max;
            this.accept = DFA267_accept;
            this.special = DFA267_special;
            this.transition = DFA267_transition;
        }
        public String getDescription() {
            return "()* loopback of 8012:9: ( '.' b= identifier )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA267_2 = input.LA(1);

                         
                        int index267_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred379_BsjAntlr()) ) {s = 38;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index267_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 267, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA279_eotS = DFA279Data.DFA279_eotS;
    static final String DFA279_eofS = DFA279Data.DFA279_eofS;
    static final String DFA279_minS = DFA279Data.DFA279_minS;
    static final String DFA279_maxS = DFA279Data.DFA279_maxS;
    static final String DFA279_acceptS = DFA279Data.DFA279_acceptS;
    static final String DFA279_specialS = DFA279Data.DFA279_specialS;
    static final String[] DFA279_transitionS = DFA279Data.DFA279_transitionS;

    static final short[] DFA279_eot = DFA279Data.DFA279_eot;
    static final short[] DFA279_eof = DFA279Data.DFA279_eof;
    static final char[] DFA279_min = DFA279Data.DFA279_min;
    static final char[] DFA279_max = DFA279Data.DFA279_max;
    static final short[] DFA279_accept = DFA279Data.DFA279_accept;
    static final short[] DFA279_special = DFA279Data.DFA279_special;
    static final short[][] DFA279_transition = DFA279Data.DFA279_transition;


    static class DFA279Data {
        static final String DFA279_eotS =
            "\42\uffff";
        static final String DFA279_eofS =
            "\42\uffff";
        static final String DFA279_minS =
            "\1\4\1\0\40\uffff";
        static final String DFA279_maxS =
            "\1\u0080\1\0\40\uffff";
        static final String DFA279_acceptS =
            "\2\uffff\1\2\21\uffff\2\2\13\uffff\1\1";
        static final String DFA279_specialS =
            "\1\0\1\1\40\uffff}>";
        static final String[] DFA279_transitionS = {
                "\1\24\3\uffff\2\25\12\2\1\25\24\uffff\1\25\1\uffff\1\25\2\uffff"+
                "\1\25\5\uffff\1\25\4\uffff\1\25\6\uffff\1\25\1\uffff\1\25\6"+
                "\uffff\1\25\7\uffff\1\25\2\uffff\1\2\1\uffff\1\2\10\uffff\2"+
                "\2\5\uffff\4\2\26\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA279_eot = DFA.unpackEncodedString(DFA279_eotS);
        static final short[] DFA279_eof = DFA.unpackEncodedString(DFA279_eofS);
        static final char[] DFA279_min = DFA.unpackEncodedStringToUnsignedChars(DFA279_minS);
        static final char[] DFA279_max = DFA.unpackEncodedStringToUnsignedChars(DFA279_maxS);
        static final short[] DFA279_accept = DFA.unpackEncodedString(DFA279_acceptS);
        static final short[] DFA279_special = DFA.unpackEncodedString(DFA279_specialS);
        static final short[][] DFA279_transition;
        static {
            int numStates = DFA279_transitionS.length;
            DFA279_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA279_transition[i] = DFA.unpackEncodedString(DFA279_transitionS[i]);
            }
        }
    }
    class DFA279 extends DFA {

        public DFA279(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 279;
            this.eot = DFA279_eot;
            this.eof = DFA279_eof;
            this.min = DFA279_min;
            this.max = DFA279_max;
            this.accept = DFA279_accept;
            this.special = DFA279_special;
            this.transition = DFA279_transition;
        }
        public String getDescription() {
            return "8292:1: variableInitializer returns [NodeUnion<? extends VariableInitializerNode> ret] : ( splice[VariableInitializerNode.class, Arrays.<Class<? extends Node>>asList(ArrayInitializerNode.class, ExpressionNode.class)] | ( arrayInitializer | expression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA279_0 = input.LA(1);

                         
                        int index279_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA279_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( ((LA279_0>=NEW && LA279_0<=NULL)||LA279_0==LPAREN||LA279_0==LBRACE||(LA279_0>=BANG && LA279_0<=TILDE)||(LA279_0>=PLUSPLUS && LA279_0<=SUB)) ) {s = 2;}

                        else if ( (LA279_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 20;}

                        else if ( ((LA279_0>=SUPER && LA279_0<=THIS)||LA279_0==IDENTIFIER||LA279_0==BOOLEAN||LA279_0==BYTE||LA279_0==CHAR||LA279_0==DOUBLE||LA279_0==FLOAT||LA279_0==INT||LA279_0==LONG||LA279_0==SHORT||LA279_0==VOID) ) {s = 21;}

                         
                        input.seek(index279_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA279_1 = input.LA(1);

                         
                        int index279_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred390_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 33;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 21;}

                         
                        input.seek(index279_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 279, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA278_eotS = DFA278Data.DFA278_eotS;
    static final String DFA278_eofS = DFA278Data.DFA278_eofS;
    static final String DFA278_minS = DFA278Data.DFA278_minS;
    static final String DFA278_maxS = DFA278Data.DFA278_maxS;
    static final String DFA278_acceptS = DFA278Data.DFA278_acceptS;
    static final String DFA278_specialS = DFA278Data.DFA278_specialS;
    static final String[] DFA278_transitionS = DFA278Data.DFA278_transitionS;

    static final short[] DFA278_eot = DFA278Data.DFA278_eot;
    static final short[] DFA278_eof = DFA278Data.DFA278_eof;
    static final char[] DFA278_min = DFA278Data.DFA278_min;
    static final char[] DFA278_max = DFA278Data.DFA278_max;
    static final short[] DFA278_accept = DFA278Data.DFA278_accept;
    static final short[] DFA278_special = DFA278Data.DFA278_special;
    static final short[][] DFA278_transition = DFA278Data.DFA278_transition;


    static class DFA278Data {
        static final String DFA278_eotS =
            "\41\uffff";
        static final String DFA278_eofS =
            "\41\uffff";
        static final String DFA278_minS =
            "\1\4\1\0\37\uffff";
        static final String DFA278_maxS =
            "\1\u0080\1\0\37\uffff";
        static final String DFA278_acceptS =
            "\2\uffff\1\1\1\2\20\uffff\2\2\13\uffff";
        static final String DFA278_specialS =
            "\1\0\1\1\37\uffff}>";
        static final String[] DFA278_transitionS = {
                "\1\24\3\uffff\2\25\12\3\1\25\24\uffff\1\25\1\uffff\1\25\2\uffff"+
                "\1\25\5\uffff\1\25\4\uffff\1\25\6\uffff\1\25\1\uffff\1\25\6"+
                "\uffff\1\25\7\uffff\1\25\2\uffff\1\3\1\uffff\1\2\10\uffff\2"+
                "\3\5\uffff\4\3\26\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA278_eot = DFA.unpackEncodedString(DFA278_eotS);
        static final short[] DFA278_eof = DFA.unpackEncodedString(DFA278_eofS);
        static final char[] DFA278_min = DFA.unpackEncodedStringToUnsignedChars(DFA278_minS);
        static final char[] DFA278_max = DFA.unpackEncodedStringToUnsignedChars(DFA278_maxS);
        static final short[] DFA278_accept = DFA.unpackEncodedString(DFA278_acceptS);
        static final short[] DFA278_special = DFA.unpackEncodedString(DFA278_specialS);
        static final short[][] DFA278_transition;
        static {
            int numStates = DFA278_transitionS.length;
            DFA278_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA278_transition[i] = DFA.unpackEncodedString(DFA278_transitionS[i]);
            }
        }
    }
    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 278;
            this.eot = DFA278_eot;
            this.eof = DFA278_eof;
            this.min = DFA278_min;
            this.max = DFA278_max;
            this.accept = DFA278_accept;
            this.special = DFA278_special;
            this.transition = DFA278_transition;
        }
        public String getDescription() {
            return "8307:9: ( arrayInitializer | expression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA278_0 = input.LA(1);

                         
                        int index278_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA278_0==128) && ((((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA278_0==LBRACE) ) {s = 2;}

                        else if ( ((LA278_0>=NEW && LA278_0<=NULL)||LA278_0==LPAREN||(LA278_0>=BANG && LA278_0<=TILDE)||(LA278_0>=PLUSPLUS && LA278_0<=SUB)) ) {s = 3;}

                        else if ( (LA278_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 20;}

                        else if ( ((LA278_0>=SUPER && LA278_0<=THIS)||LA278_0==IDENTIFIER||LA278_0==BOOLEAN||LA278_0==BYTE||LA278_0==CHAR||LA278_0==DOUBLE||LA278_0==FLOAT||LA278_0==INT||LA278_0==LONG||LA278_0==SHORT||LA278_0==VOID) ) {s = 21;}

                         
                        input.seek(index278_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA278_1 = input.LA(1);

                         
                        int index278_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred391_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 2;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 21;}

                         
                        input.seek(index278_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 278, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA281_eotS = DFA281Data.DFA281_eotS;
    static final String DFA281_eofS = DFA281Data.DFA281_eofS;
    static final String DFA281_minS = DFA281Data.DFA281_minS;
    static final String DFA281_maxS = DFA281Data.DFA281_maxS;
    static final String DFA281_acceptS = DFA281Data.DFA281_acceptS;
    static final String DFA281_specialS = DFA281Data.DFA281_specialS;
    static final String[] DFA281_transitionS = DFA281Data.DFA281_transitionS;

    static final short[] DFA281_eot = DFA281Data.DFA281_eot;
    static final short[] DFA281_eof = DFA281Data.DFA281_eof;
    static final char[] DFA281_min = DFA281Data.DFA281_min;
    static final char[] DFA281_max = DFA281Data.DFA281_max;
    static final short[] DFA281_accept = DFA281Data.DFA281_accept;
    static final short[] DFA281_special = DFA281Data.DFA281_special;
    static final short[][] DFA281_transition = DFA281Data.DFA281_transition;


    static class DFA281Data {
        static final String DFA281_eotS =
            "\42\uffff";
        static final String DFA281_eofS =
            "\42\uffff";
        static final String DFA281_minS =
            "\1\4\1\0\40\uffff";
        static final String DFA281_maxS =
            "\1\u0080\1\0\40\uffff";
        static final String DFA281_acceptS =
            "\2\uffff\1\2\36\uffff\1\1";
        static final String DFA281_specialS =
            "\1\uffff\1\0\40\uffff}>";
        static final String[] DFA281_transitionS = {
                "\1\2\3\uffff\15\2\24\uffff\1\2\1\uffff\1\2\2\uffff\1\2\5\uffff"+
                "\1\2\4\uffff\1\2\6\uffff\1\2\1\uffff\1\2\6\uffff\1\2\7\uffff"+
                "\1\2\2\uffff\1\2\1\uffff\1\2\10\uffff\2\2\5\uffff\4\2\26\uffff"+
                "\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA281_eot = DFA.unpackEncodedString(DFA281_eotS);
        static final short[] DFA281_eof = DFA.unpackEncodedString(DFA281_eofS);
        static final char[] DFA281_min = DFA.unpackEncodedStringToUnsignedChars(DFA281_minS);
        static final char[] DFA281_max = DFA.unpackEncodedStringToUnsignedChars(DFA281_maxS);
        static final short[] DFA281_accept = DFA.unpackEncodedString(DFA281_acceptS);
        static final short[] DFA281_special = DFA.unpackEncodedString(DFA281_specialS);
        static final short[][] DFA281_transition;
        static {
            int numStates = DFA281_transitionS.length;
            DFA281_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA281_transition[i] = DFA.unpackEncodedString(DFA281_transitionS[i]);
            }
        }
    }
    class DFA281 extends DFA {

        public DFA281(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 281;
            this.eot = DFA281_eot;
            this.eof = DFA281_eof;
            this.min = DFA281_min;
            this.max = DFA281_max;
            this.accept = DFA281_accept;
            this.special = DFA281_special;
            this.transition = DFA281_transition;
        }
        public String getDescription() {
            return "8331:9: ( splice[VariableInitializerListNode.class, Arrays.<Class<? extends Node>>asList()] | (a= variableInitializer ( ',' b= variableInitializer )* ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA281_1 = input.LA(1);

                         
                        int index281_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred392_BsjAntlr()&&(configuration.getCodeSplicingSupported()))) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index281_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 281, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA285_eotS = DFA285Data.DFA285_eotS;
    static final String DFA285_eofS = DFA285Data.DFA285_eofS;
    static final String DFA285_minS = DFA285Data.DFA285_minS;
    static final String DFA285_maxS = DFA285Data.DFA285_maxS;
    static final String DFA285_acceptS = DFA285Data.DFA285_acceptS;
    static final String DFA285_specialS = DFA285Data.DFA285_specialS;
    static final String[] DFA285_transitionS = DFA285Data.DFA285_transitionS;

    static final short[] DFA285_eot = DFA285Data.DFA285_eot;
    static final short[] DFA285_eof = DFA285Data.DFA285_eof;
    static final char[] DFA285_min = DFA285Data.DFA285_min;
    static final char[] DFA285_max = DFA285Data.DFA285_max;
    static final short[] DFA285_accept = DFA285Data.DFA285_accept;
    static final short[] DFA285_special = DFA285Data.DFA285_special;
    static final short[][] DFA285_transition = DFA285Data.DFA285_transition;


    static class DFA285Data {
        static final String DFA285_eotS =
            "\13\uffff";
        static final String DFA285_eofS =
            "\13\uffff";
        static final String DFA285_minS =
            "\1\24\1\0\11\uffff";
        static final String DFA285_maxS =
            "\1\u0080\1\0\11\uffff";
        static final String DFA285_acceptS =
            "\2\uffff\1\1\1\2\7\uffff";
        static final String DFA285_specialS =
            "\1\0\1\1\11\uffff}>";
        static final String[] DFA285_transitionS = {
                "\1\2\24\uffff\1\3\1\uffff\1\3\2\uffff\1\3\5\uffff\1\3\4\uffff"+
                "\1\3\6\uffff\1\3\1\uffff\1\3\6\uffff\1\3\66\uffff\1\1",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA285_eot = DFA.unpackEncodedString(DFA285_eotS);
        static final short[] DFA285_eof = DFA.unpackEncodedString(DFA285_eofS);
        static final char[] DFA285_min = DFA.unpackEncodedStringToUnsignedChars(DFA285_minS);
        static final char[] DFA285_max = DFA.unpackEncodedStringToUnsignedChars(DFA285_maxS);
        static final short[] DFA285_accept = DFA.unpackEncodedString(DFA285_acceptS);
        static final short[] DFA285_special = DFA.unpackEncodedString(DFA285_specialS);
        static final short[][] DFA285_transition;
        static {
            int numStates = DFA285_transitionS.length;
            DFA285_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA285_transition[i] = DFA.unpackEncodedString(DFA285_transitionS[i]);
            }
        }
    }
    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = DFA285_eot;
            this.eof = DFA285_eof;
            this.min = DFA285_min;
            this.max = DFA285_max;
            this.accept = DFA285_accept;
            this.special = DFA285_special;
            this.transition = DFA285_transition;
        }
        public String getDescription() {
            return "8433:9: ( classOrInterfaceType | primitiveType )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_0 = input.LA(1);

                         
                        int index285_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA285_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA285_0==IDENTIFIER) ) {s = 2;}

                        else if ( (LA285_0==BOOLEAN||LA285_0==BYTE||LA285_0==CHAR||LA285_0==DOUBLE||LA285_0==FLOAT||LA285_0==INT||LA285_0==LONG||LA285_0==SHORT) ) {s = 3;}

                         
                        input.seek(index285_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA285_1 = input.LA(1);

                         
                        int index285_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred397_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred397_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred397_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred397_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred397_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 2;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 3;}

                         
                        input.seek(index285_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA290_eotS = DFA290Data.DFA290_eotS;
    static final String DFA290_eofS = DFA290Data.DFA290_eofS;
    static final String DFA290_minS = DFA290Data.DFA290_minS;
    static final String DFA290_maxS = DFA290Data.DFA290_maxS;
    static final String DFA290_acceptS = DFA290Data.DFA290_acceptS;
    static final String DFA290_specialS = DFA290Data.DFA290_specialS;
    static final String[] DFA290_transitionS = DFA290Data.DFA290_transitionS;

    static final short[] DFA290_eot = DFA290Data.DFA290_eot;
    static final short[] DFA290_eof = DFA290Data.DFA290_eof;
    static final char[] DFA290_min = DFA290Data.DFA290_min;
    static final char[] DFA290_max = DFA290Data.DFA290_max;
    static final short[] DFA290_accept = DFA290Data.DFA290_accept;
    static final short[] DFA290_special = DFA290Data.DFA290_special;
    static final short[][] DFA290_transition = DFA290Data.DFA290_transition;


    static class DFA290Data {
        static final String DFA290_eotS =
            "\14\uffff";
        static final String DFA290_eofS =
            "\14\uffff";
        static final String DFA290_minS =
            "\1\4\13\uffff";
        static final String DFA290_maxS =
            "\1\u0080\13\uffff";
        static final String DFA290_acceptS =
            "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\12";
        static final String DFA290_specialS =
            "\1\0\13\uffff}>";
        static final String[] DFA290_transitionS = {
                "\1\13\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\154\uffff"+
                "\1\12",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA290_eot = DFA.unpackEncodedString(DFA290_eotS);
        static final short[] DFA290_eof = DFA.unpackEncodedString(DFA290_eofS);
        static final char[] DFA290_min = DFA.unpackEncodedStringToUnsignedChars(DFA290_minS);
        static final char[] DFA290_max = DFA.unpackEncodedStringToUnsignedChars(DFA290_maxS);
        static final short[] DFA290_accept = DFA.unpackEncodedString(DFA290_acceptS);
        static final short[] DFA290_special = DFA.unpackEncodedString(DFA290_specialS);
        static final short[][] DFA290_transition;
        static {
            int numStates = DFA290_transitionS.length;
            DFA290_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA290_transition[i] = DFA.unpackEncodedString(DFA290_transitionS[i]);
            }
        }
    }
    class DFA290 extends DFA {

        public DFA290(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 290;
            this.eot = DFA290_eot;
            this.eof = DFA290_eof;
            this.min = DFA290_min;
            this.max = DFA290_max;
            this.accept = DFA290_accept;
            this.special = DFA290_special;
            this.transition = DFA290_transition;
        }
        public String getDescription() {
            return "8598:1: lexicalLiteral returns [NodeUnion<? extends LiteralNode<?>> ret] : ( intLiteral[false] | longLiteral[false] | FLOATLITERAL | DOUBLELITERAL | CHARLITERAL | STRINGLITERAL | TRUE | FALSE | NULL | codeLiteral );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA290_0 = input.LA(1);

                         
                        int index290_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA290_0==INTLITERAL) ) {s = 1;}

                        else if ( (LA290_0==LONGLITERAL) ) {s = 2;}

                        else if ( (LA290_0==FLOATLITERAL) ) {s = 3;}

                        else if ( (LA290_0==DOUBLELITERAL) ) {s = 4;}

                        else if ( (LA290_0==CHARLITERAL) ) {s = 5;}

                        else if ( (LA290_0==STRINGLITERAL) ) {s = 6;}

                        else if ( (LA290_0==TRUE) ) {s = 7;}

                        else if ( (LA290_0==FALSE) ) {s = 8;}

                        else if ( (LA290_0==NULL) ) {s = 9;}

                        else if ( (LA290_0==128) && (((configuration.getCodeLiteralsSupported())&&(configuration.getCodeSplicingSupported())))) {s = 10;}

                        else if ( (LA290_0==CODELITERAL_START) && ((configuration.getCodeLiteralsSupported()))) {s = 11;}

                         
                        input.seek(index290_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 290, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA293_eotS = DFA293Data.DFA293_eotS;
    static final String DFA293_eofS = DFA293Data.DFA293_eofS;
    static final String DFA293_minS = DFA293Data.DFA293_minS;
    static final String DFA293_maxS = DFA293Data.DFA293_maxS;
    static final String DFA293_acceptS = DFA293Data.DFA293_acceptS;
    static final String DFA293_specialS = DFA293Data.DFA293_specialS;
    static final String[] DFA293_transitionS = DFA293Data.DFA293_transitionS;

    static final short[] DFA293_eot = DFA293Data.DFA293_eot;
    static final short[] DFA293_eof = DFA293Data.DFA293_eof;
    static final char[] DFA293_min = DFA293Data.DFA293_min;
    static final char[] DFA293_max = DFA293Data.DFA293_max;
    static final short[] DFA293_accept = DFA293Data.DFA293_accept;
    static final short[] DFA293_special = DFA293Data.DFA293_special;
    static final short[][] DFA293_transition = DFA293Data.DFA293_transition;


    static class DFA293Data {
        static final String DFA293_eotS =
            "\25\uffff";
        static final String DFA293_eofS =
            "\25\uffff";
        static final String DFA293_minS =
            "\1\47\20\0\4\uffff";
        static final String DFA293_maxS =
            "\1\u0080\20\0\4\uffff";
        static final String DFA293_acceptS =
            "\21\uffff\1\1\1\2\1\3\1\4";
        static final String DFA293_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1"+
            "\16\1\17\1\20\4\uffff}>";
        static final String[] DFA293_transitionS = {
                "\1\6\7\uffff\1\16\6\uffff\1\17\1\7\11\uffff\1\20\1\uffff\1\10"+
                "\1\uffff\1\5\1\4\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff"+
                "\1\14\2\uffff\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA293_eot = DFA.unpackEncodedString(DFA293_eotS);
        static final short[] DFA293_eof = DFA.unpackEncodedString(DFA293_eofS);
        static final char[] DFA293_min = DFA.unpackEncodedStringToUnsignedChars(DFA293_minS);
        static final char[] DFA293_max = DFA.unpackEncodedStringToUnsignedChars(DFA293_maxS);
        static final short[] DFA293_accept = DFA.unpackEncodedString(DFA293_acceptS);
        static final short[] DFA293_special = DFA.unpackEncodedString(DFA293_specialS);
        static final short[][] DFA293_transition;
        static {
            int numStates = DFA293_transitionS.length;
            DFA293_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA293_transition[i] = DFA.unpackEncodedString(DFA293_transitionS[i]);
            }
        }
    }
    class DFA293 extends DFA {

        public DFA293(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 293;
            this.eot = DFA293_eot;
            this.eof = DFA293_eof;
            this.min = DFA293_min;
            this.max = DFA293_max;
            this.accept = DFA293_accept;
            this.special = DFA293_special;
            this.transition = DFA293_transition;
        }
        public String getDescription() {
            return "8738:9: ( classModifiers | enumModifiers | interfaceModifiers | annotationModifiers )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA293_0 = input.LA(1);

                         
                        int index293_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA293_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA293_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA293_0==PUBLIC) ) {s = 3;}

                        else if ( (LA293_0==PROTECTED) ) {s = 4;}

                        else if ( (LA293_0==PRIVATE) ) {s = 5;}

                        else if ( (LA293_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA293_0==FINAL) ) {s = 7;}

                        else if ( (LA293_0==NATIVE) ) {s = 8;}

                        else if ( (LA293_0==STATIC) ) {s = 9;}

                        else if ( (LA293_0==STRICTFP) ) {s = 10;}

                        else if ( (LA293_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA293_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA293_0==VOLATILE) ) {s = 13;}

                        else if ( (LA293_0==CLASS) ) {s = 14;}

                        else if ( (LA293_0==ENUM) ) {s = 15;}

                        else if ( (LA293_0==INTERFACE) ) {s = 16;}

                         
                        input.seek(index293_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA293_1 = input.LA(1);

                         
                        int index293_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred413_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred413_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 17;}

                        else if ( ((((synpred414_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred414_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 18;}

                        else if ( ((((synpred415_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred415_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 19;}

                        else if ( (((configuration.getCodeSplicingSupported())||((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported())))) ) {s = 20;}

                         
                        input.seek(index293_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA293_2 = input.LA(1);

                         
                        int index293_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred413_BsjAntlr()||(synpred413_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 17;}

                        else if ( ((synpred414_BsjAntlr()||(synpred414_BsjAntlr()&&(configuration.getMetaAnnotationsSupported())))) ) {s = 18;}

                        else if ( (((synpred415_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred415_BsjAntlr())) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA293_3 = input.LA(1);

                         
                        int index293_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA293_4 = input.LA(1);

                         
                        int index293_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA293_5 = input.LA(1);

                         
                        int index293_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA293_6 = input.LA(1);

                         
                        int index293_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA293_7 = input.LA(1);

                         
                        int index293_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA293_8 = input.LA(1);

                         
                        int index293_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA293_9 = input.LA(1);

                         
                        int index293_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA293_10 = input.LA(1);

                         
                        int index293_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA293_11 = input.LA(1);

                         
                        int index293_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA293_12 = input.LA(1);

                         
                        int index293_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA293_13 = input.LA(1);

                         
                        int index293_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA293_14 = input.LA(1);

                         
                        int index293_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA293_15 = input.LA(1);

                         
                        int index293_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA293_16 = input.LA(1);

                         
                        int index293_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred413_BsjAntlr()) ) {s = 17;}

                        else if ( (synpred414_BsjAntlr()) ) {s = 18;}

                        else if ( (synpred415_BsjAntlr()) ) {s = 19;}

                        else if ( (true) ) {s = 20;}

                         
                        input.seek(index293_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 293, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA297_eotS = DFA297Data.DFA297_eotS;
    static final String DFA297_eofS = DFA297Data.DFA297_eofS;
    static final String DFA297_minS = DFA297Data.DFA297_minS;
    static final String DFA297_maxS = DFA297Data.DFA297_maxS;
    static final String DFA297_acceptS = DFA297Data.DFA297_acceptS;
    static final String DFA297_specialS = DFA297Data.DFA297_specialS;
    static final String[] DFA297_transitionS = DFA297Data.DFA297_transitionS;

    static final short[] DFA297_eot = DFA297Data.DFA297_eot;
    static final short[] DFA297_eof = DFA297Data.DFA297_eof;
    static final char[] DFA297_min = DFA297Data.DFA297_min;
    static final char[] DFA297_max = DFA297Data.DFA297_max;
    static final short[] DFA297_accept = DFA297Data.DFA297_accept;
    static final short[] DFA297_special = DFA297Data.DFA297_special;
    static final short[][] DFA297_transition = DFA297Data.DFA297_transition;


    static class DFA297Data {
        static final String DFA297_eotS =
            "\15\uffff";
        static final String DFA297_eofS =
            "\15\uffff";
        static final String DFA297_minS =
            "\1\24\2\0\12\uffff";
        static final String DFA297_maxS =
            "\1\u0080\2\0\12\uffff";
        static final String DFA297_acceptS =
            "\3\uffff\1\1\7\uffff\1\2\1\3";
        static final String DFA297_specialS =
            "\1\0\1\1\1\2\12\uffff}>";
        static final String[] DFA297_transitionS = {
                "\1\2\24\uffff\1\3\1\uffff\1\3\2\uffff\1\3\5\uffff\1\3\4\uffff"+
                "\1\3\6\uffff\1\3\1\uffff\1\3\6\uffff\1\3\7\uffff\1\13\56\uffff"+
                "\1\1",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA297_eot = DFA.unpackEncodedString(DFA297_eotS);
        static final short[] DFA297_eof = DFA.unpackEncodedString(DFA297_eofS);
        static final char[] DFA297_min = DFA.unpackEncodedStringToUnsignedChars(DFA297_minS);
        static final char[] DFA297_max = DFA.unpackEncodedStringToUnsignedChars(DFA297_maxS);
        static final short[] DFA297_accept = DFA.unpackEncodedString(DFA297_acceptS);
        static final short[] DFA297_special = DFA.unpackEncodedString(DFA297_specialS);
        static final short[][] DFA297_transition;
        static {
            int numStates = DFA297_transitionS.length;
            DFA297_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA297_transition[i] = DFA.unpackEncodedString(DFA297_transitionS[i]);
            }
        }
    }
    class DFA297 extends DFA {

        public DFA297(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 297;
            this.eot = DFA297_eot;
            this.eof = DFA297_eof;
            this.min = DFA297_min;
            this.max = DFA297_max;
            this.accept = DFA297_accept;
            this.special = DFA297_special;
            this.transition = DFA297_transition;
        }
        public String getDescription() {
            return "8742:41: ( type | 'void' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA297_0 = input.LA(1);

                         
                        int index297_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA297_0==128) && ((configuration.getCodeSplicingSupported()))) {s = 1;}

                        else if ( (LA297_0==IDENTIFIER) ) {s = 2;}

                        else if ( (LA297_0==BOOLEAN||LA297_0==BYTE||LA297_0==CHAR||LA297_0==DOUBLE||LA297_0==FLOAT||LA297_0==INT||LA297_0==LONG||LA297_0==SHORT) ) {s = 3;}

                        else if ( (LA297_0==VOID) ) {s = 11;}

                         
                        input.seek(index297_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA297_1 = input.LA(1);

                         
                        int index297_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred420_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 3;}

                        else if ( ((configuration.getCodeSplicingSupported())) ) {s = 12;}

                         
                        input.seek(index297_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA297_2 = input.LA(1);

                         
                        int index297_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred420_BsjAntlr()) ) {s = 3;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index297_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 297, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA302_eotS = DFA302Data.DFA302_eotS;
    static final String DFA302_eofS = DFA302Data.DFA302_eofS;
    static final String DFA302_minS = DFA302Data.DFA302_minS;
    static final String DFA302_maxS = DFA302Data.DFA302_maxS;
    static final String DFA302_acceptS = DFA302Data.DFA302_acceptS;
    static final String DFA302_specialS = DFA302Data.DFA302_specialS;
    static final String[] DFA302_transitionS = DFA302Data.DFA302_transitionS;

    static final short[] DFA302_eot = DFA302Data.DFA302_eot;
    static final short[] DFA302_eof = DFA302Data.DFA302_eof;
    static final char[] DFA302_min = DFA302Data.DFA302_min;
    static final char[] DFA302_max = DFA302Data.DFA302_max;
    static final short[] DFA302_accept = DFA302Data.DFA302_accept;
    static final short[] DFA302_special = DFA302Data.DFA302_special;
    static final short[][] DFA302_transition = DFA302Data.DFA302_transition;


    static class DFA302Data {
        static final String DFA302_eotS =
            "\45\uffff";
        static final String DFA302_eofS =
            "\45\uffff";
        static final String DFA302_minS =
            "\1\4\3\0\41\uffff";
        static final String DFA302_maxS =
            "\1\u0080\3\0\41\uffff";
        static final String DFA302_acceptS =
            "\4\uffff\1\2\36\uffff\1\1\1\3";
        static final String DFA302_specialS =
            "\1\uffff\1\0\1\1\1\2\41\uffff}>";
        static final String[] DFA302_transitionS = {
                "\1\4\3\uffff\14\4\1\2\24\uffff\1\4\1\uffff\1\4\2\uffff\1\4\5"+
                "\uffff\1\4\4\uffff\1\4\6\uffff\1\4\1\uffff\1\4\6\uffff\1\4\7"+
                "\uffff\1\4\2\uffff\1\4\1\3\1\4\10\uffff\2\4\5\uffff\4\4\16\uffff"+
                "\1\4\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };
        static final short[] DFA302_eot = DFA.unpackEncodedString(DFA302_eotS);
        static final short[] DFA302_eof = DFA.unpackEncodedString(DFA302_eofS);
        static final char[] DFA302_min = DFA.unpackEncodedStringToUnsignedChars(DFA302_minS);
        static final char[] DFA302_max = DFA.unpackEncodedStringToUnsignedChars(DFA302_maxS);
        static final short[] DFA302_accept = DFA.unpackEncodedString(DFA302_acceptS);
        static final short[] DFA302_special = DFA.unpackEncodedString(DFA302_specialS);
        static final short[][] DFA302_transition;
        static {
            int numStates = DFA302_transitionS.length;
            DFA302_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA302_transition[i] = DFA.unpackEncodedString(DFA302_transitionS[i]);
            }
        }
    }
    class DFA302 extends DFA {

        public DFA302(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 302;
            this.eot = DFA302_eot;
            this.eof = DFA302_eof;
            this.min = DFA302_min;
            this.max = DFA302_max;
            this.accept = DFA302_accept;
            this.special = DFA302_special;
            this.transition = DFA302_transition;
        }
        public String getDescription() {
            return "1507:21: ( optionalMetaAnnotationElementValuePairs | metaAnnotationElementValue )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA302_1 = input.LA(1);

                         
                        int index302_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred32_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||synpred32_BsjAntlr())) ) {s = 35;}

                        else if ( (((synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred33_BsjAntlr()&&(configuration.getCodeLiteralsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred33_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||(synpred33_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 4;}

                         
                        input.seek(index302_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA302_2 = input.LA(1);

                         
                        int index302_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_BsjAntlr()) ) {s = 35;}

                        else if ( (synpred33_BsjAntlr()) ) {s = 4;}

                         
                        input.seek(index302_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA302_3 = input.LA(1);

                         
                        int index302_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_BsjAntlr()) ) {s = 35;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index302_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 302, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA303_eotS = DFA303Data.DFA303_eotS;
    static final String DFA303_eofS = DFA303Data.DFA303_eofS;
    static final String DFA303_minS = DFA303Data.DFA303_minS;
    static final String DFA303_maxS = DFA303Data.DFA303_maxS;
    static final String DFA303_acceptS = DFA303Data.DFA303_acceptS;
    static final String DFA303_specialS = DFA303Data.DFA303_specialS;
    static final String[] DFA303_transitionS = DFA303Data.DFA303_transitionS;

    static final short[] DFA303_eot = DFA303Data.DFA303_eot;
    static final short[] DFA303_eof = DFA303Data.DFA303_eof;
    static final char[] DFA303_min = DFA303Data.DFA303_min;
    static final char[] DFA303_max = DFA303Data.DFA303_max;
    static final short[] DFA303_accept = DFA303Data.DFA303_accept;
    static final short[] DFA303_special = DFA303Data.DFA303_special;
    static final short[][] DFA303_transition = DFA303Data.DFA303_transition;


    static class DFA303Data {
        static final String DFA303_eotS =
            "\21\uffff";
        static final String DFA303_eofS =
            "\21\uffff";
        static final String DFA303_minS =
            "\1\24\15\0\3\uffff";
        static final String DFA303_maxS =
            "\1\u0080\15\0\3\uffff";
        static final String DFA303_acceptS =
            "\16\uffff\1\1\1\2\1\uffff";
        static final String DFA303_specialS =
            "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
            "\3\uffff}>";
        static final String[] DFA303_transitionS = {
                "\1\17\22\uffff\1\6\7\uffff\1\16\6\uffff\1\17\1\7\13\uffff\1"+
                "\10\1\uffff\1\5\1\4\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff"+
                "\1\14\2\uffff\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                ""
        };
        static final short[] DFA303_eot = DFA.unpackEncodedString(DFA303_eotS);
        static final short[] DFA303_eof = DFA.unpackEncodedString(DFA303_eofS);
        static final char[] DFA303_min = DFA.unpackEncodedStringToUnsignedChars(DFA303_minS);
        static final char[] DFA303_max = DFA.unpackEncodedStringToUnsignedChars(DFA303_maxS);
        static final short[] DFA303_accept = DFA.unpackEncodedString(DFA303_acceptS);
        static final short[] DFA303_special = DFA.unpackEncodedString(DFA303_specialS);
        static final short[][] DFA303_transition;
        static {
            int numStates = DFA303_transitionS.length;
            DFA303_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA303_transition[i] = DFA.unpackEncodedString(DFA303_transitionS[i]);
            }
        }
    }
    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = DFA303_eot;
            this.eof = DFA303_eof;
            this.min = DFA303_min;
            this.max = DFA303_max;
            this.accept = DFA303_accept;
            this.special = DFA303_special;
            this.transition = DFA303_transition;
        }
        public String getDescription() {
            return "2441:9: synpred72_BsjAntlr : ( classHeader | enumHeader );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_1 = input.LA(1);

                         
                        int index303_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred71_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred71_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA303_2 = input.LA(1);

                         
                        int index303_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred71_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred71_BsjAntlr())) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA303_3 = input.LA(1);

                         
                        int index303_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA303_4 = input.LA(1);

                         
                        int index303_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA303_5 = input.LA(1);

                         
                        int index303_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA303_6 = input.LA(1);

                         
                        int index303_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA303_7 = input.LA(1);

                         
                        int index303_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA303_8 = input.LA(1);

                         
                        int index303_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA303_9 = input.LA(1);

                         
                        int index303_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA303_10 = input.LA(1);

                         
                        int index303_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA303_11 = input.LA(1);

                         
                        int index303_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA303_12 = input.LA(1);

                         
                        int index303_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA303_13 = input.LA(1);

                         
                        int index303_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred71_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index303_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA304_eotS = DFA304Data.DFA304_eotS;
    static final String DFA304_eofS = DFA304Data.DFA304_eofS;
    static final String DFA304_minS = DFA304Data.DFA304_minS;
    static final String DFA304_maxS = DFA304Data.DFA304_maxS;
    static final String DFA304_acceptS = DFA304Data.DFA304_acceptS;
    static final String DFA304_specialS = DFA304Data.DFA304_specialS;
    static final String[] DFA304_transitionS = DFA304Data.DFA304_transitionS;

    static final short[] DFA304_eot = DFA304Data.DFA304_eot;
    static final short[] DFA304_eof = DFA304Data.DFA304_eof;
    static final char[] DFA304_min = DFA304Data.DFA304_min;
    static final char[] DFA304_max = DFA304Data.DFA304_max;
    static final short[] DFA304_accept = DFA304Data.DFA304_accept;
    static final short[] DFA304_special = DFA304Data.DFA304_special;
    static final short[][] DFA304_transition = DFA304Data.DFA304_transition;


    static class DFA304Data {
        static final String DFA304_eotS =
            "\21\uffff";
        static final String DFA304_eofS =
            "\21\uffff";
        static final String DFA304_minS =
            "\1\24\15\0\3\uffff";
        static final String DFA304_maxS =
            "\1\u0080\15\0\3\uffff";
        static final String DFA304_acceptS =
            "\16\uffff\1\1\1\2\1\uffff";
        static final String DFA304_specialS =
            "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14"+
            "\3\uffff}>";
        static final String[] DFA304_transitionS = {
                "\1\17\22\uffff\1\6\7\uffff\1\16\6\uffff\1\17\1\7\13\uffff\1"+
                "\10\1\uffff\1\5\1\4\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff"+
                "\1\14\2\uffff\1\15\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                "",
                ""
        };
        static final short[] DFA304_eot = DFA.unpackEncodedString(DFA304_eotS);
        static final short[] DFA304_eof = DFA.unpackEncodedString(DFA304_eofS);
        static final char[] DFA304_min = DFA.unpackEncodedStringToUnsignedChars(DFA304_minS);
        static final char[] DFA304_max = DFA.unpackEncodedStringToUnsignedChars(DFA304_maxS);
        static final short[] DFA304_accept = DFA.unpackEncodedString(DFA304_acceptS);
        static final short[] DFA304_special = DFA.unpackEncodedString(DFA304_specialS);
        static final short[][] DFA304_transition;
        static {
            int numStates = DFA304_transitionS.length;
            DFA304_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA304_transition[i] = DFA.unpackEncodedString(DFA304_transitionS[i]);
            }
        }
    }
    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = DFA304_eot;
            this.eof = DFA304_eof;
            this.min = DFA304_min;
            this.max = DFA304_max;
            this.accept = DFA304_accept;
            this.special = DFA304_special;
            this.transition = DFA304_transition;
        }
        public String getDescription() {
            return "3899:9: synpred144_BsjAntlr : ( classHeader | enumHeader );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA304_1 = input.LA(1);

                         
                        int index304_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred143_BsjAntlr()&&(configuration.getCodeSplicingSupported()))||((synpred143_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA304_2 = input.LA(1);

                         
                        int index304_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred143_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred143_BsjAntlr())) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA304_3 = input.LA(1);

                         
                        int index304_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA304_4 = input.LA(1);

                         
                        int index304_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA304_5 = input.LA(1);

                         
                        int index304_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA304_6 = input.LA(1);

                         
                        int index304_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA304_7 = input.LA(1);

                         
                        int index304_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA304_8 = input.LA(1);

                         
                        int index304_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA304_9 = input.LA(1);

                         
                        int index304_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA304_10 = input.LA(1);

                         
                        int index304_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA304_11 = input.LA(1);

                         
                        int index304_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA304_12 = input.LA(1);

                         
                        int index304_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA304_13 = input.LA(1);

                         
                        int index304_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred143_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index304_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 304, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA305_eotS = DFA305Data.DFA305_eotS;
    static final String DFA305_eofS = DFA305Data.DFA305_eofS;
    static final String DFA305_minS = DFA305Data.DFA305_minS;
    static final String DFA305_maxS = DFA305Data.DFA305_maxS;
    static final String DFA305_acceptS = DFA305Data.DFA305_acceptS;
    static final String DFA305_specialS = DFA305Data.DFA305_specialS;
    static final String[] DFA305_transitionS = DFA305Data.DFA305_transitionS;

    static final short[] DFA305_eot = DFA305Data.DFA305_eot;
    static final short[] DFA305_eof = DFA305Data.DFA305_eof;
    static final char[] DFA305_min = DFA305Data.DFA305_min;
    static final char[] DFA305_max = DFA305Data.DFA305_max;
    static final short[] DFA305_accept = DFA305Data.DFA305_accept;
    static final short[] DFA305_special = DFA305Data.DFA305_special;
    static final short[][] DFA305_transition = DFA305Data.DFA305_transition;


    static class DFA305Data {
        static final String DFA305_eotS =
            "\20\uffff";
        static final String DFA305_eofS =
            "\20\uffff";
        static final String DFA305_minS =
            "\1\47\15\0\2\uffff";
        static final String DFA305_maxS =
            "\1\u0080\15\0\2\uffff";
        static final String DFA305_acceptS =
            "\16\uffff\1\1\1\2";
        static final String DFA305_specialS =
            "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2"+
            "\uffff}>";
        static final String[] DFA305_transitionS = {
                "\1\6\17\uffff\1\7\11\uffff\1\16\1\uffff\1\10\1\uffff\1\5\1\4"+
                "\1\3\2\uffff\1\11\1\12\1\uffff\1\13\1\uffff\1\14\2\uffff\1\15"+
                "\45\uffff\1\2\7\uffff\1\1",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "\1\uffff",
                "",
                ""
        };
        static final short[] DFA305_eot = DFA.unpackEncodedString(DFA305_eotS);
        static final short[] DFA305_eof = DFA.unpackEncodedString(DFA305_eofS);
        static final char[] DFA305_min = DFA.unpackEncodedStringToUnsignedChars(DFA305_minS);
        static final char[] DFA305_max = DFA.unpackEncodedStringToUnsignedChars(DFA305_maxS);
        static final short[] DFA305_accept = DFA.unpackEncodedString(DFA305_acceptS);
        static final short[] DFA305_special = DFA.unpackEncodedString(DFA305_specialS);
        static final short[][] DFA305_transition;
        static {
            int numStates = DFA305_transitionS.length;
            DFA305_transition = new short[numStates][];
            for (int i=0; i<numStates; i++) {
                DFA305_transition[i] = DFA.unpackEncodedString(DFA305_transitionS[i]);
            }
        }
    }
    class DFA305 extends DFA {

        public DFA305(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 305;
            this.eot = DFA305_eot;
            this.eof = DFA305_eof;
            this.min = DFA305_min;
            this.max = DFA305_max;
            this.accept = DFA305_accept;
            this.special = DFA305_special;
            this.transition = DFA305_transition;
        }
        public String getDescription() {
            return "3904:9: synpred146_BsjAntlr : ( interfaceHeader | annotationHeader );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA305_0 = input.LA(1);

                         
                        int index305_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA305_0==128) && ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported())))) {s = 1;}

                        else if ( (LA305_0==MONKEYS_AT) ) {s = 2;}

                        else if ( (LA305_0==PUBLIC) ) {s = 3;}

                        else if ( (LA305_0==PROTECTED) ) {s = 4;}

                        else if ( (LA305_0==PRIVATE) ) {s = 5;}

                        else if ( (LA305_0==ABSTRACT) ) {s = 6;}

                        else if ( (LA305_0==FINAL) ) {s = 7;}

                        else if ( (LA305_0==NATIVE) ) {s = 8;}

                        else if ( (LA305_0==STATIC) ) {s = 9;}

                        else if ( (LA305_0==STRICTFP) ) {s = 10;}

                        else if ( (LA305_0==SYNCHRONIZED) ) {s = 11;}

                        else if ( (LA305_0==TRANSIENT) ) {s = 12;}

                        else if ( (LA305_0==VOLATILE) ) {s = 13;}

                        else if ( (LA305_0==INTERFACE) ) {s = 14;}

                         
                        input.seek(index305_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA305_1 = input.LA(1);

                         
                        int index305_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((((synpred145_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))&&(configuration.getCodeSplicingSupported()))||(synpred145_BsjAntlr()&&(configuration.getCodeSplicingSupported())))) ) {s = 14;}

                        else if ( ((((configuration.getMetaAnnotationsSupported())&&(configuration.getCodeSplicingSupported()))||(configuration.getCodeSplicingSupported()))) ) {s = 15;}

                         
                        input.seek(index305_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA305_2 = input.LA(1);

                         
                        int index305_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (((synpred145_BsjAntlr()&&(configuration.getMetaAnnotationsSupported()))||synpred145_BsjAntlr())) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA305_3 = input.LA(1);

                         
                        int index305_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA305_4 = input.LA(1);

                         
                        int index305_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA305_5 = input.LA(1);

                         
                        int index305_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA305_6 = input.LA(1);

                         
                        int index305_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA305_7 = input.LA(1);

                         
                        int index305_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA305_8 = input.LA(1);

                         
                        int index305_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA305_9 = input.LA(1);

                         
                        int index305_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA305_10 = input.LA(1);

                         
                        int index305_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA305_11 = input.LA(1);

                         
                        int index305_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA305_12 = input.LA(1);

                         
                        int index305_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA305_13 = input.LA(1);

                         
                        int index305_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred145_BsjAntlr()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index305_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 305, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_LBRACKET_in_arrayTypeCounter153 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayTypeCounter155 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayTypeCounter189 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayTypeCounter191 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_splice_in_bsjMetaprogram289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_METAPROGRAM_START_in_bsjMetaprogram316 = new BitSet(new long[]{0x0000000000E00000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_preamble_in_bsjMetaprogram326 = new BitSet(new long[]{0x169A4F80061FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalBlockStatementList_in_bsjMetaprogram336 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_METAPROGRAM_STOP_in_bsjMetaprogram346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_preamble426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaImportDeclarations_in_preamble453 = new BitSet(new long[]{0x0000000000C00000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramMode_in_preamble477 = new BitSet(new long[]{0x0000000000C00000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaprogramTargetList_in_preamble512 = new BitSet(new long[]{0x0000000000800000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaprogramDependencyDeclarationList_in_preamble522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramImport603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_METAIMPORT_in_metaprogramImport630 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramImportBody_in_metaprogramImport640 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_metaprogramImport650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramImportBody728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importBody_in_metaprogramImportBody755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_metaprogramMode837 = new BitSet(new long[]{0x0000000000100000L,0x0000000004000000L});
    public static final BitSet FOLLOW_unsplicableIdentifier_in_metaprogramMode863 = new BitSet(new long[]{0x0000000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_COMMA_in_metaprogramMode909 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_unsplicableIdentifier_in_metaprogramMode929 = new BitSet(new long[]{0x0000000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_COMMA_in_metaprogramMode976 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_metaprogramMode998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramDependencyDeclarationList1080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclaration_in_metaprogramDependencyDeclarationList1151 = new BitSet(new long[]{0x0000000000800002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclaration_in_metaprogramDependencyDeclarationList1199 = new BitSet(new long[]{0x0000000000800002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclarationList_in_optionalMetaprogramDependencyDeclarationList1346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramDependencyDeclaration1482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_METADEPENDS_in_metaprogramDependencyDeclaration1509 = new BitSet(new long[]{0x0000000001100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramDependencyList_in_metaprogramDependencyDeclaration1519 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_metaprogramDependencyDeclaration1529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramDependencyList1621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependency_in_metaprogramDependencyList1692 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_metaprogramDependencyList1730 = new BitSet(new long[]{0x0000000001100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramDependency_in_metaprogramDependencyList1754 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_metaprogramDependencyList1819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyList_in_optionalMetaprogramDependencyList1912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramDependency2045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_METAWEAK_in_metaprogramDependency2086 = new BitSet(new long[]{0x0000000001100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramTargetName_in_metaprogramDependency2121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramTargetList2213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramTarget_in_metaprogramTargetList2284 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramTarget_in_metaprogramTargetList2332 = new BitSet(new long[]{0x0000000000400002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramTargetList_in_optionalMetaprogramTargetList2479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaprogramTarget2612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_METATARGET_in_metaprogramTarget2642 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifierList_in_metaprogramTarget2652 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_metaprogramTarget2662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_in_metaprogramTargetName2740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_identifierList2832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_identifierList2903 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_identifierList2941 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_identifierList2965 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_identifierList3030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierList_in_optionalIdentifierList3123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_typeDeclarationBsjMetaprogramAnchor3256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_annotationMemberBsjMetaprogramAnchor3338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_anonymousClassMemberBsjMetaprogramAnchor3416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_classMemberBsjMetaprogramAnchor3494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_interfaceMemberBsjMetaprogramAnchor3572 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_blockStatementBsjMetaprogramAnchor3650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationList3745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_metaAnnotationList3816 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaAnnotation_in_metaAnnotationList3864 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaAnnotationList_in_optionalMetaAnnotationList4011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotation4178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_metaAnnotation4217 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_metaAnnotation4219 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_unparameterizedType_in_metaAnnotation4221 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_metaAnnotation4275 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180720205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaAnnotationElementValuePairs_in_metaAnnotation4326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_metaAnnotation4400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_metaAnnotation4472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationElementValuePairs4646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePair_in_metaAnnotationElementValuePairs4717 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_metaAnnotationElementValuePairs4755 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePair_in_metaAnnotationElementValuePairs4779 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePairs_in_optionalMetaAnnotationElementValuePairs4926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationElementValuePair5066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_metaAnnotationElementValuePair5095 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_metaAnnotationElementValuePair5097 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValuePair5099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationElementValue5186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_metaAnnotationElementValue5216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_metaAnnotationElementValue5245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValueArrayInitializer_in_metaAnnotationElementValue5274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationElementValues5375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValues5446 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_metaAnnotationElementValues5484 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_metaAnnotationElementValues5508 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_metaAnnotationElementValues_in_optionalMetaAnnotationElementValues5655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaAnnotationElementValueArrayInitializer5800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_metaAnnotationElementValueArrayInitializer5827 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C188D20205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaAnnotationElementValues_in_metaAnnotationElementValueArrayInitializer5837 = new BitSet(new long[]{0x0000000000000000L,0x0000000008800000L});
    public static final BitSet FOLLOW_COMMA_in_metaAnnotationElementValueArrayInitializer5857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_metaAnnotationElementValueArrayInitializer5868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_codeLiteral5962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CODELITERAL_START_in_codeLiteral6001 = new BitSet(new long[]{0xFFFFFFFFFFFFFFD0L,0xFFFFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_codeLiteralBody_in_codeLiteral6015 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CODELITERAL_STOP_in_codeLiteral6029 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anyNonCodeLiteralToken_in_codeLiteralBody6136 = new BitSet(new long[]{0xFFFFFFFFFFFFFFD2L,0xFFFFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_CODELITERAL_START_in_codeLiteralBody6174 = new BitSet(new long[]{0xFFFFFFFFFFFFFFD0L,0xFFFFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_codeLiteralBody_in_codeLiteralBody6204 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_CODELITERAL_STOP_in_codeLiteralBody6232 = new BitSet(new long[]{0xFFFFFFFFFFFFFFD2L,0xFFFFFFFFFFFFFFFFL,0x0000000000000003L});
    public static final BitSet FOLLOW_set_in_anyNonCodeLiteralToken6326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_128_in_splice6477 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_splice6519 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_splice6547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_compilationUnit6657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageDeclaration_in_compilationUnit6684 = new BitSet(new long[]{0x569A4F80023FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaImportDeclarations_in_compilationUnit6695 = new BitSet(new long[]{0x569A4F80021FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalImportDeclarations_in_compilationUnit6705 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeDeclarations_in_compilationUnit6715 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_compilationUnit6725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_packageDeclaration6803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_packageDeclaration6830 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_PACKAGE_in_packageDeclaration6841 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_name_in_packageDeclaration6843 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_packageDeclaration6845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_metaImportDeclarations6937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramImport_in_metaImportDeclarations7008 = new BitSet(new long[]{0x0000000000200002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaprogramImport_in_metaImportDeclarations7056 = new BitSet(new long[]{0x0000000000200002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_metaImportDeclarations_in_optionalMetaImportDeclarations7203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_importDeclarations7350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importDeclaration_in_importDeclarations7421 = new BitSet(new long[]{0x4000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_importDeclaration_in_importDeclarations7469 = new BitSet(new long[]{0x4000000000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_importDeclarations_in_optionalImportDeclarations7616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importStaticOnDemandBody_in_importBody7763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importStaticSingleBody_in_importBody7801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importOnDemandBody_in_importBody7839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importSingleBody_in_importBody7877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_importStaticOnDemandBody7970 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_name_in_importStaticOnDemandBody7972 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_importStaticOnDemandBody7974 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STAR_in_importStaticOnDemandBody7976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_importStaticSingleBody8054 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_separatedQualifiedName_in_importStaticSingleBody8056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_in_importOnDemandBody8134 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_importOnDemandBody8136 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_STAR_in_importOnDemandBody8138 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_in_importSingleBody8216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_importDeclaration8294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPORT_in_importDeclaration8321 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_importBody_in_importDeclaration8331 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_importDeclaration8341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_typeDeclarations8491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclaration_in_typeDeclarations8562 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_typeDeclaration_in_typeDeclarations8610 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_typeDeclarations_in_optionalTypeDeclarations8757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_typeDeclaration8890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration8917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_typeDeclaration8943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclarationBsjMetaprogramAnchor_in_typeDeclaration8972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_noOp9050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_noOp9077 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_noOp9087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_classOrInterfaceDeclaration9175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration9201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_modifiers9305 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotation_in_modifiers9343 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_PUBLIC_in_modifiers9399 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_PROTECTED_in_modifiers9449 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_PRIVATE_in_modifiers9499 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_ABSTRACT_in_modifiers9569 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_FINAL_in_modifiers9607 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_NATIVE_in_modifiers9645 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_STATIC_in_modifiers9683 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_STRICTFP_in_modifiers9721 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_SYNCHRONIZED_in_modifiers9759 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_TRANSIENT_in_modifiers9797 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_VOLATILE_in_modifiers9835 = new BitSet(new long[]{0x0080008000000002L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_modifiers_in_annotationMethodModifiers9928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_annotationModifiers10007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_classModifiers10091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_constantModifiers10170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_constructorModifiers10249 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_enumConstantModifiers10328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_enumModifiers10407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_fieldModifiers10486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_localClassModifiers10565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_interfaceModifiers10644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_methodModifiers10723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_variableModifiers10802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_classDeclaration10886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_classDeclaration10912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_normalClassDeclaration10993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_normalClassDeclaration11020 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_classModifiers_in_normalClassDeclaration11022 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_normalClassDeclaration11032 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_normalClassDeclaration11036 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_normalClassDeclaration11046 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_EXTENDS_in_normalClassDeclaration11057 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_normalClassDeclaration11059 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_IMPLEMENTS_in_normalClassDeclaration11085 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_declaredTypeList_in_normalClassDeclaration11087 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classBody_in_normalClassDeclaration11134 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_localClassDeclaration11215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_localClassDeclaration11242 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_localClassModifiers_in_localClassDeclaration11244 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_localClassDeclaration11254 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_localClassDeclaration11258 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_localClassDeclaration11268 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_EXTENDS_in_localClassDeclaration11279 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_localClassDeclaration11281 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_IMPLEMENTS_in_localClassDeclaration11307 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_declaredTypeList_in_localClassDeclaration11309 = new BitSet(new long[]{0x2000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classBody_in_localClassDeclaration11356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_typeParameters11434 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_splice_in_typeParameters11458 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters11529 = new BitSet(new long[]{0x0000000000000000L,0x0400000008000000L});
    public static final BitSet FOLLOW_COMMA_in_typeParameters11567 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters11591 = new BitSet(new long[]{0x0000000000000000L,0x0400000008000000L});
    public static final BitSet FOLLOW_GT_in_typeParameters11666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_optionalTypeParameters11748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_typeParameter11881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_typeParameter11910 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_EXTENDS_in_typeParameter11934 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_typeBound_in_typeParameter11936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_typeBound12061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_typeBound12132 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_AMP_in_typeBound12170 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_typeBound12194 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_typeBound_in_optionalTypeBound12341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_enumDeclaration12477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_enumDeclaration12504 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_enumModifiers_in_enumDeclaration12506 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_ENUM_in_enumDeclaration12516 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_enumDeclaration12529 = new BitSet(new long[]{0x2000000000000000L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_IMPLEMENTS_in_enumDeclaration12553 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_declaredTypeList_in_enumDeclaration12555 = new BitSet(new long[]{0x2000000000000000L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_enumBody_in_enumDeclaration12590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_enumBody12671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_enumBody12698 = new BitSet(new long[]{0x0080008000000000L,0x010000000C84ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalEnumConstants_in_enumBody12708 = new BitSet(new long[]{0x0000000000000000L,0x000000000C800000L});
    public static final BitSet FOLLOW_COMMA_in_enumBody12718 = new BitSet(new long[]{0x0000000000000000L,0x0000000004800000L});
    public static final BitSet FOLLOW_enumBodyDeclarations_in_enumBody12743 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_enumBody12778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_enumConstants12870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants12941 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_enumConstants12979 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants13003 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_enumConstants_in_optionalEnumConstants13150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_enumConstant13286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_enumConstant13313 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_enumConstantModifiers_in_enumConstant13315 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_enumConstant13327 = new BitSet(new long[]{0x0000000000000002L,0x0000000000500000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arguments_in_enumConstant13351 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_anonymousClassBody_in_enumConstant13400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMI_in_enumBodyDeclarations13503 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalClassBodyDeclarations_in_enumBodyDeclarations13513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration13600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration13628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_normalInterfaceDeclaration13713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_normalInterfaceDeclaration13740 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_interfaceModifiers_in_normalInterfaceDeclaration13742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_normalInterfaceDeclaration13752 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_normalInterfaceDeclaration13756 = new BitSet(new long[]{0x0000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_normalInterfaceDeclaration13766 = new BitSet(new long[]{0x0000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_EXTENDS_in_normalInterfaceDeclaration13790 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_declaredTypeList_in_normalInterfaceDeclaration13792 = new BitSet(new long[]{0x0000000000000080L,0x0800000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_interfaceBody_in_normalInterfaceDeclaration13835 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_declaredTypeList13927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_declaredTypeList13998 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_declaredTypeList14036 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_declaredTypeList14060 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_declaredTypeList_in_optionalDeclaredTypeList14207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_referenceTypeList14354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referenceType_in_referenceTypeList14425 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_referenceTypeList14463 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_referenceType_in_referenceTypeList14487 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_referenceTypeList_in_optionalReferenceTypeList14634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_classBody14767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_classBody14794 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalClassBodyDeclarations_in_classBody14804 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_classBody14814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_anonymousClassBody14895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_anonymousClassBody14922 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalAnonymousClassBodyDeclarations_in_anonymousClassBody14933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_anonymousClassBody14943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_interfaceBody15021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_interfaceBody15051 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalInterfaceBodyDeclarations_in_interfaceBody15061 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_interfaceBody15072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_initializerBlock15150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_initializerBlock15177 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400400L,0x0000000000000001L});
    public static final BitSet FOLLOW_STATIC_in_initializerBlock15189 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_initializerBlock15200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_classBodyDeclarations15292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_classBodyDeclarations15363 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_classBodyDeclarations15411 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_classBodyDeclarations_in_optionalClassBodyDeclarations15558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_classBodyDeclaration15695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classMemberBsjMetaprogramAnchor_in_classBodyDeclaration15735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_classBodyDeclaration15761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initializerBlock_in_classBodyDeclaration15787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructorDeclaration_in_classBodyDeclaration15813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberDecl_in_classBodyDeclaration15839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_anonymousClassBodyDeclarations15931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclaration_in_anonymousClassBodyDeclarations16002 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclaration_in_anonymousClassBodyDeclarations16050 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclarations_in_optionalAnonymousClassBodyDeclarations16197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_anonymousClassBodyDeclaration16334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_anonymousClassBodyDeclaration16361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initializerBlock_in_anonymousClassBodyDeclaration16387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberDecl_in_anonymousClassBodyDeclaration16413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassMemberBsjMetaprogramAnchor_in_anonymousClassBodyDeclaration16442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldDeclaration_in_memberDecl16528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodDeclaration_in_memberDecl16561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_memberDecl16596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_memberDecl16631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_methodReturnType16709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_methodReturnType16736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_methodReturnType16762 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_constructorDeclaration16840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_constructorDeclaration16867 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_constructorModifiers_in_constructorDeclaration16869 = new BitSet(new long[]{0x0000000000100000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_constructorDeclaration16879 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_constructorDeclaration16889 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formalParameters_in_constructorDeclaration16899 = new BitSet(new long[]{0x0000000000000040L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_throwsClause_in_constructorDeclaration16923 = new BitSet(new long[]{0x0000000000000040L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_constructorBody_in_constructorDeclaration16958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_constructorBody17036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_constructorBody17063 = new BitSet(new long[]{0x169A4F80021FFF10L,0x090003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_constructorBody17074 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalBlockStatementList_in_constructorBody17085 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_constructorBody17095 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_methodDeclaration17173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_methodDeclaration17200 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_methodModifiers_in_methodDeclaration17202 = new BitSet(new long[]{0x02104A0000100000L,0x0800000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_methodDeclaration17212 = new BitSet(new long[]{0x02104A0000100000L,0x0800000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_methodReturnType_in_methodDeclaration17222 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_methodDeclaration17244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formalParameters_in_methodDeclaration17254 = new BitSet(new long[]{0x0000000000000040L,0x0100000005400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_methodDeclaration17278 = new BitSet(new long[]{0x0000000000000040L,0x0100000004400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_throwsClause_in_methodDeclaration17327 = new BitSet(new long[]{0x0000000000000000L,0x0100000004400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_methodDeclaration17384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SEMI_in_methodDeclaration17425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_fieldDeclaration17525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_fieldDeclaration17552 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_fieldModifiers_in_fieldDeclaration17554 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_fieldDeclaration17564 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableDeclarators_in_fieldDeclaration17574 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_fieldDeclaration17584 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_interfaceBodyDeclarations17680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_interfaceBodyDeclarations17751 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_interfaceBodyDeclarations17799 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_interfaceBodyDeclarations_in_optionalInterfaceBodyDeclarations17946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_interfaceBodyDeclaration18083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaration_in_interfaceBodyDeclaration18110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodDeclaration_in_interfaceBodyDeclaration18147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_interfaceBodyDeclaration18176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_interfaceBodyDeclaration18205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_interfaceBodyDeclaration18234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMemberBsjMetaprogramAnchor_in_interfaceBodyDeclaration18263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_interfaceMethodDeclaration18353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_interfaceMethodDeclaration18380 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_methodModifiers_in_interfaceMethodDeclaration18382 = new BitSet(new long[]{0x02104A0000100000L,0x0800000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeParameters_in_interfaceMethodDeclaration18392 = new BitSet(new long[]{0x02104A0000100000L,0x0800000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_methodReturnType_in_interfaceMethodDeclaration18402 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_interfaceMethodDeclaration18424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formalParameters_in_interfaceMethodDeclaration18434 = new BitSet(new long[]{0x0000000000000040L,0x0000000005000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_interfaceMethodDeclaration18458 = new BitSet(new long[]{0x0000000000000040L,0x0000000004000000L});
    public static final BitSet FOLLOW_throwsClause_in_interfaceMethodDeclaration18507 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_interfaceMethodDeclaration18542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_constantDeclaration18632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_constantDeclaration18659 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_constantModifiers_in_constantDeclaration18661 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_constantDeclaration18671 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableDeclarators_in_constantDeclaration18681 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_constantDeclaration18691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_variableDeclarators18784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators18855 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_variableDeclarators18893 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators18917 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_variableDeclarators_in_optionalVariableDeclarators19064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_variableDeclarator19200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_variableDeclarator19229 = new BitSet(new long[]{0x0000000000000002L,0x0000000041000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_variableDeclarator19253 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_variableDeclarator19302 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableInitializer_in_variableDeclarator19304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_unparameterizedType19407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_in_unparameterizedType19437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_unparameterizedTypeList19529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_unparameterizedTypeList19600 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_unparameterizedTypeList19638 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_unparameterizedType_in_unparameterizedTypeList19662 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_unparameterizedTypeList_in_optionalUnparameterizedTypeList19809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THROWS_in_throwsClause19942 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_unparameterizedTypeList_in_throwsClause19952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_referenceType20030 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_referenceType20064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_referenceType20105 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_referenceType20107 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_type20207 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_type20267 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_primitiveType_in_type20317 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_type20383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_classOrInterfaceType20483 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_typeArguments_in_classOrInterfaceType20517 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_classOrInterfaceType20563 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_classOrInterfaceType20567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_classOrInterfaceType20627 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_classOrInterfaceType20662 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_classOrInterfaceType20666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_classOrInterfaceType20707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_primitiveType20794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_primitiveType20824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHAR_in_primitiveType20853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BYTE_in_primitiveType20882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SHORT_in_primitiveType20911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INT_in_primitiveType20944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LONG_in_primitiveType20977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOAT_in_primitiveType21006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLE_in_primitiveType21035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_typeArguments21122 = new BitSet(new long[]{0x02104A0000100000L,0x0000000200000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_splice_in_typeArguments21146 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments21217 = new BitSet(new long[]{0x0000000000000000L,0x0400000008000000L});
    public static final BitSet FOLLOW_COMMA_in_typeArguments21255 = new BitSet(new long[]{0x02104A0000100000L,0x0000000200000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments21279 = new BitSet(new long[]{0x0000000000000000L,0x0400000008000000L});
    public static final BitSet FOLLOW_GT_in_typeArguments21354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArguments_in_optionalTypeArguments21436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_typeArgument21576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referenceType_in_typeArgument21603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_wildcard_in_typeArgument21629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_wildcard21707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUES_in_wildcard21734 = new BitSet(new long[]{0x0000000000000182L});
    public static final BitSet FOLLOW_EXTENDS_in_wildcard21786 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_SUPER_in_wildcard21820 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_referenceType_in_wildcard21850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_formalParameters21948 = new BitSet(new long[]{0x0080008000000000L,0x010000000024ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_formalParameterDecls_in_formalParameters21972 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_formalParameters22008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecls_in_formalParameterDecls22077 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_formalParameterDecls22087 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_ellipsisParameterDecl_in_formalParameterDecls22097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecls_in_formalParameterDecls22123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ellipsisParameterDecl_in_formalParameterDecls22149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_normalParameterDecls22241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecl_in_normalParameterDecls22312 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_normalParameterDecls22350 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_normalParameterDecl_in_normalParameterDecls22374 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_normalParameterDecls_in_optionalNormalParameterDecls22521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_normalParameterDecl22654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_normalParameterDecl22683 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_normalParameterDecl22695 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_normalParameterDecl22717 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_normalParameterDecl22741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_ellipsisParameterDecl22846 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_ellipsisParameterDecl22858 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_ELLIPSIS_in_ellipsisParameterDecl22878 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_ellipsisParameterDecl22890 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_ellipsisParameterDecl22914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalNonWildcardTypeArguments_in_alternateConstructorInvocation23017 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_THIS_in_alternateConstructorInvocation23019 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_alternateConstructorInvocation23021 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_alternateConstructorInvocation23023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_superclassConstructorInvocation23115 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_superclassConstructorInvocation23117 = new BitSet(new long[]{0x0000000000000100L,0x0800000000000000L});
    public static final BitSet FOLLOW_optionalNonWildcardTypeArguments_in_superclassConstructorInvocation23138 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_SUPER_in_superclassConstructorInvocation23148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_superclassConstructorInvocation23150 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_superclassConstructorInvocation23152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_explicitConstructorInvocation23230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alternateConstructorInvocation_in_explicitConstructorInvocation23257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_superclassConstructorInvocation_in_explicitConstructorInvocation23283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotations23375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_annotations23446 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotation_in_annotations23494 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotations_in_optionalAnnotations23641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotation23780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_annotation23807 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_unparameterizedType_in_annotation23809 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_annotation23851 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180720205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalElementValuePairs_in_annotation23894 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_elementValue_in_annotation23956 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_annotation24016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_elementValuePairs24160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs24231 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_elementValuePairs24269 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs24293 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_elementValuePairs_in_optionalElementValuePairs24440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_elementValuePair24580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_elementValuePair24609 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_elementValuePair24611 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_elementValue_in_elementValuePair24613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_elementValue24703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_elementValue24730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_elementValue24759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValueArrayInitializer_in_elementValue24788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_elementValues24881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValue_in_elementValues24952 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_elementValues24990 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_elementValue_in_elementValues25014 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_elementValues25079 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValues_in_optionalElementValues25172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_elementValueArrayInitializer25321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_elementValueArrayInitializer25348 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180D20205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalElementValues_in_elementValueArrayInitializer25358 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_elementValueArrayInitializer25368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotationTypeDeclaration25451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_annotationTypeDeclaration25478 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotationModifiers_in_annotationTypeDeclaration25480 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_annotationTypeDeclaration25482 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_annotationTypeDeclaration25492 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_annotationTypeDeclaration25504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotationTypeBody_in_annotationTypeDeclaration25514 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotationTypeBody25595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_annotationTypeBody25622 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalAnnotationTypeElementDeclarations_in_annotationTypeBody25632 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_annotationTypeBody25642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotationTypeElementDeclarations25738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations25809 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_annotationTypeElementDeclarations25857 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_annotationTypeElementDeclarations_in_optionalAnnotationTypeElementDeclarations26004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodDeclaration_in_annotationTypeElementDeclaration26140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaration_in_annotationTypeElementDeclaration26169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_annotationTypeElementDeclaration26198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementDeclaration26227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_annotationTypeElementDeclaration26256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_annotationTypeElementDeclaration26285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_annotationTypeElementDeclaration26314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMemberBsjMetaprogramAnchor_in_annotationTypeElementDeclaration26343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_annotationMethodDeclaration26424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_javadoc_in_annotationMethodDeclaration26451 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_annotationMethodModifiers_in_annotationMethodDeclaration26453 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_annotationMethodDeclaration26463 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_annotationMethodDeclaration26475 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_annotationMethodDeclaration26485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_annotationMethodDeclaration26487 = new BitSet(new long[]{0x0004000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_DEFAULT_in_annotationMethodDeclaration26511 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_elementValue_in_annotationMethodDeclaration26526 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_annotationMethodDeclaration26547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_block26628 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C184DFFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalBlockStatementList_in_block26638 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_block26648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_blockStatementList26740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatement_in_blockStatementList26811 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_blockStatement_in_blockStatementList26859 = new BitSet(new long[]{0x169A4F80021FFF12L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_blockStatementList_in_optionalBlockStatementList27006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_blockStatement27143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclarationStatement_in_blockStatement27174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localClassDeclaration_in_blockStatement27207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_blockStatement27236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatementBsjMetaprogramAnchor_in_blockStatement27265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_localVariableDeclarationStatement27354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement27381 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_localVariableDeclarationStatement27383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_localVariableDeclaration27468 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_localVariableDeclaration27470 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableDeclarators_in_localVariableDeclaration27480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_statement27558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockAsStatement_in_statement27599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertStatement_in_statement27637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifStatement_in_statement27675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forStatement_in_statement27713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileStatement_in_statement27751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_doWhileStatement_in_statement27789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryStatement_in_statement27827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchStatement_in_statement27865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_synchronizedStatement_in_statement27903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnStatement_in_statement27941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwStatement_in_statement27979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakStatement_in_statement28017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueStatement_in_statement28055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionStatement_in_statement28093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_labeledStatement_in_statement28131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOpStatement_in_statement28169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_blockAsStatement28262 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_blockAsStatement28272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_assertStatement28350 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_ASSERT_in_assertStatement28360 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_assertStatement28364 = new BitSet(new long[]{0x0000000000000000L,0x0000000404000000L});
    public static final BitSet FOLLOW_COLON_in_assertStatement28389 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_assertStatement28393 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_assertStatement28414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_ifStatement28503 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_IF_in_ifStatement28513 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_parExpression_in_ifStatement28515 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_ifStatement28519 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_ELSE_in_ifStatement28544 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_ifStatement28548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForStatement_in_forStatement28661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_basicForStatement_in_forStatement28699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_enhancedForStatement28792 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_FOR_in_enhancedForStatement28802 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_enhancedForStatement28803 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableModifiers_in_enhancedForStatement28805 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_enhancedForStatement28807 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_enhancedForStatement28811 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_COLON_in_enhancedForStatement28813 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_enhancedForStatement28815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_enhancedForStatement28817 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_enhancedForStatement28819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_basicForStatement28905 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_FOR_in_basicForStatement28915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_basicForStatement28925 = new BitSet(new long[]{0x02904A80001FFF10L,0x010003C18416AEEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_forInit_in_basicForStatement28936 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_basicForStatement28947 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C184120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_basicForStatement28958 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_basicForStatement28969 = new BitSet(new long[]{0x02904A80001FFF10L,0x010003C18036AEEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalStatementExpressionList_in_basicForStatement28979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_basicForStatement28989 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_basicForStatement28999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_whileStatement29094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_WHILE_in_whileStatement29104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_parExpression_in_whileStatement29106 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_whileStatement29110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_doWhileStatement29188 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_DO_in_doWhileStatement29198 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_doWhileStatement29202 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_WHILE_in_doWhileStatement29204 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_parExpression_in_doWhileStatement29206 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_doWhileStatement29208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_tryStatement29289 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_TRY_in_tryStatement29299 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_tryStatement29303 = new BitSet(new long[]{0x0100200000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_catches_in_tryStatement29329 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_FINALLY_in_tryStatement29331 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_tryStatement29335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_tryStatement29378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FINALLY_in_tryStatement29431 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_tryStatement29435 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_switchStatement29557 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_SWITCH_in_switchStatement29567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_switchStatement29577 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_switchStatement29587 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_switchStatement29597 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_switchBlock_in_switchStatement29607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_synchronizedStatement29685 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_SYNCHRONIZED_in_synchronizedStatement29695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_parExpression_in_synchronizedStatement29697 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_synchronizedStatement29699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_returnStatement29777 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_RETURN_in_returnStatement29787 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C184120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_returnStatement29798 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_returnStatement29809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_throwStatement29887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_THROW_in_throwStatement29897 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_throwStatement29899 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_throwStatement29901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_breakStatement29979 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_BREAK_in_breakStatement29989 = new BitSet(new long[]{0x0000000000100000L,0x0000000004000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_breakStatement29991 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_breakStatement29994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_continueStatement30072 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_CONTINUE_in_continueStatement30082 = new BitSet(new long[]{0x0000000000100000L,0x0000000004000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_continueStatement30084 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_continueStatement30087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_expressionStatement30165 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_statementExpression_in_expressionStatement30175 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_expressionStatement30178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_labeledStatement30265 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_labeledStatement30275 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_COLON_in_labeledStatement30277 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_labeledStatement30279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationList_in_noOpStatement30357 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_SEMI_in_noOpStatement30367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_catches30459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catchClause_in_catches30530 = new BitSet(new long[]{0x0000200000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_catchClause_in_catches30578 = new BitSet(new long[]{0x0000200000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_catches_in_optionalCatches30725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_catchClause30861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CATCH_in_catchClause30888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_catchClause30890 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_formalParameter_in_catchClause30892 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_catchClause30894 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_catchClause30904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_switchBlock30982 = new BitSet(new long[]{0x0004100000000000L,0x0000000000800000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalSwitchBlockStatementGroups_in_switchBlock30992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_switchBlock31002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_switchBlockStatementGroups31094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups31165 = new BitSet(new long[]{0x0004100000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_switchBlockStatementGroup_in_switchBlockStatementGroups31213 = new BitSet(new long[]{0x0004100000000002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_switchBlockStatementGroups_in_optionalSwitchBlockStatementGroups31360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_switchBlockStatementGroup31493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchLabel_in_switchBlockStatementGroup31520 = new BitSet(new long[]{0x169A4F80021FFF10L,0x010003C1845FFFEDL,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalBlockStatementList_in_switchBlockStatementGroup31530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CASE_in_switchLabel31611 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_switchLabel31613 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_COLON_in_switchLabel31615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEFAULT_in_switchLabel31644 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_COLON_in_switchLabel31646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameter31732 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_formalParameter31742 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_formalParameter31764 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_formalParameter31788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_forInit31896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_forInit31923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpressionList_in_forInit31952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_parExpression32033 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_parExpression32035 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_parExpression32037 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_statementExpressionList32129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpression_in_statementExpressionList32200 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_statementExpressionList32238 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_statementExpression_in_statementExpressionList32262 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_statementExpressionList_in_optionalStatementExpressionList32409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_expressionList32556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionList32627 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_expressionList32665 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_expressionList32689 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_expressionList_in_optionalExpressionList32836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_statementExpression33012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assignmentExpression_in_expression33100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_assignmentExpression33195 = new BitSet(new long[]{0x0000000000000002L,0x0CFF000040000000L});
    public static final BitSet FOLLOW_conditionalExpression_in_assignmentExpression33234 = new BitSet(new long[]{0x0000000000000002L,0x0CFF000040000000L});
    public static final BitSet FOLLOW_assignmentOperator_in_assignmentExpression33282 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_assignmentExpression33298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQ_in_assignmentOperator33394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUSEQ_in_assignmentOperator33423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBEQ_in_assignmentOperator33460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STAREQ_in_assignmentOperator33493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SLASHEQ_in_assignmentOperator33530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AMPEQ_in_assignmentOperator33567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BAREQ_in_assignmentOperator33596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CARETEQ_in_assignmentOperator33633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PERCENTEQ_in_assignmentOperator33670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_assignmentOperator33707 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_LT_in_assignmentOperator33709 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_assignmentOperator33711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_assignmentOperator33745 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_assignmentOperator33747 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_assignmentOperator33749 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_assignmentOperator33751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GT_in_assignmentOperator33788 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_assignmentOperator33790 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_assignmentOperator33792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalOrExpression_in_conditionalExpression33882 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_QUES_in_conditionalExpression33916 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_conditionalExpression33920 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_COLON_in_conditionalExpression33922 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_conditionalExpression_in_conditionalExpression33926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression34024 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_BARBAR_in_conditionalOrExpression34080 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression34128 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression34239 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_AMPAMP_in_conditionalAndExpression34295 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression34343 = new BitSet(new long[]{0x0000000000000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression34454 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_BAR_in_inclusiveOrExpression34510 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression34558 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression34669 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_CARET_in_exclusiveOrExpression34725 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression34773 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression34884 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_AMP_in_andExpression34940 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression34988 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression35099 = new BitSet(new long[]{0x0000000000000002L,0x0200000800000000L});
    public static final BitSet FOLLOW_EQEQ_in_equalityExpression35155 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_BANGEQ_in_equalityExpression35205 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression35253 = new BitSet(new long[]{0x0000000000000002L,0x0200000800000000L});
    public static final BitSet FOLLOW_relationalExpression_in_instanceOfExpression35362 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_INSTANCEOF_in_instanceOfExpression35404 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_instanceOfExpression35406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression35512 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L});
    public static final BitSet FOLLOW_LT_in_relationalExpression35568 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_relationalExpression35570 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_GT_in_relationalExpression35620 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_EQ_in_relationalExpression35622 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_LT_in_relationalExpression35672 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_GT_in_relationalExpression35722 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression35770 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression35881 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L});
    public static final BitSet FOLLOW_LT_in_shiftExpression35937 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_LT_in_shiftExpression35939 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_GT_in_shiftExpression35989 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_shiftExpression35991 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_shiftExpression35993 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_GT_in_shiftExpression36043 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_shiftExpression36045 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression36093 = new BitSet(new long[]{0x0000000000000002L,0x0C00000000000000L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression36204 = new BitSet(new long[]{0x0000000000000002L,0x0000030000000000L});
    public static final BitSet FOLLOW_PLUS_in_additiveExpression36260 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_SUB_in_additiveExpression36310 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression36358 = new BitSet(new long[]{0x0000000000000002L,0x0000030000000000L});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression36469 = new BitSet(new long[]{0x0000000000000002L,0x00008C0000000000L});
    public static final BitSet FOLLOW_STAR_in_multiplicativeExpression36525 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_SLASH_in_multiplicativeExpression36575 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_PERCENT_in_multiplicativeExpression36625 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression36673 = new BitSet(new long[]{0x0000000000000002L,0x00008C0000000000L});
    public static final BitSet FOLLOW_PLUS_in_unaryExpression36784 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression36789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_unaryExpression36823 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_intLiteral_in_unaryExpression36825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_unaryExpression36855 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_longLiteral_in_unaryExpression36857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_unaryExpression36888 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression36892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUSPLUS_in_unaryExpression36929 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression36933 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBSUB_in_unaryExpression36962 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression36966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression37003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TILDE_in_unaryExpressionNotPlusMinus37084 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus37086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BANG_in_unaryExpressionNotPlusMinus37123 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus37125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_unaryExpressionNotPlusMinus37162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_postfixExpression_in_unaryExpressionNotPlusMinus37191 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_castExpression37272 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_castExpression37274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_castExpression37276 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_castExpression37278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_postfixExpression37370 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_primary_in_postfixExpression37409 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_PLUSPLUS_in_postfixExpression37457 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_SUBSUB_in_postfixExpression37495 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_splice_in_primary37632 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_arrayCreator_in_primary37671 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_restrictedPrimary_in_primary37709 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_primarySuffix_in_primary37757 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_splice_in_restrictedPrimary37860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lexicalLiteral_in_restrictedPrimary37901 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_primitiveClassLiteral_in_restrictedPrimary37939 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_declaredClassLiteral_in_restrictedPrimary37977 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_voidClassLiteral_in_restrictedPrimary38015 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_thisClause_in_restrictedPrimary38053 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_parenthesizedExpression_in_restrictedPrimary38091 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_unqualifiedClassInstantiation_in_restrictedPrimary38129 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_superMethodInvocation_in_restrictedPrimary38167 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_superFieldAccess_in_restrictedPrimary38205 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_methodInvocationByName_in_restrictedPrimary38243 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_typeQualifiedTypeArgumentMethodInvocation_in_restrictedPrimary38281 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_variableAccessByName_in_restrictedPrimary38319 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayAccess_in_restrictedPrimary38368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedClassInstantiationPrimarySuffix_in_primarySuffix38495 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_typeArgumentMethodInvocationSuffix_in_primarySuffix38546 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_fieldAccessPrimarySuffix_in_primarySuffix38597 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayAccess_in_primarySuffix38645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_thisClause38740 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_thisClause38742 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_THIS_in_thisClause38746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_parenthesizedExpression38824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_unqualifiedClassInstantiation38902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_unqualifiedClassInstantiation38929 = new BitSet(new long[]{0x0000000000100000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeArguments_in_unqualifiedClassInstantiation38939 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_unqualifiedClassInstantiation38949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_unqualifiedClassInstantiation38951 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_anonymousClassBody_in_unqualifiedClassInstantiation38961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_superFieldAccess39046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_superFieldAccess39074 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_superFieldAccess39076 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_SUPER_in_superFieldAccess39080 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_superFieldAccess39082 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_superFieldAccess39084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_methodInvocationByName39170 = new BitSet(new long[]{0x0000000000000000L,0x0000000010100000L});
    public static final BitSet FOLLOW_DOT_in_methodInvocationByName39204 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_methodInvocationByName39208 = new BitSet(new long[]{0x0000000000000000L,0x0000000010100000L});
    public static final BitSet FOLLOW_arguments_in_methodInvocationByName39243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_superMethodInvocation39327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_superMethodInvocation39355 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_superMethodInvocation39357 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_SUPER_in_superMethodInvocation39369 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_superMethodInvocation39371 = new BitSet(new long[]{0x0000000000100000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalNonWildcardTypeArguments_in_superMethodInvocation39381 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_superMethodInvocation39391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_superMethodInvocation39393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39475 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_typeQualifiedTypeArgumentMethodInvocation39509 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39513 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_typeQualifiedTypeArgumentMethodInvocation39548 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_typeQualifiedTypeArgumentMethodInvocation39550 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_typeQualifiedTypeArgumentMethodInvocation39554 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_typeQualifiedTypeArgumentMethodInvocation39556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_qualifiedClassInstantiationPrimarySuffix39637 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_NEW_in_qualifiedClassInstantiationPrimarySuffix39639 = new BitSet(new long[]{0x0000000000100000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalTypeArguments_in_qualifiedClassInstantiationPrimarySuffix39651 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_qualifiedClassInstantiationPrimarySuffix39661 = new BitSet(new long[]{0x0000000000000000L,0x0800000000100000L});
    public static final BitSet FOLLOW_optionalTypeArguments_in_qualifiedClassInstantiationPrimarySuffix39673 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_qualifiedClassInstantiationPrimarySuffix39683 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_anonymousClassBody_in_qualifiedClassInstantiationPrimarySuffix39693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_fieldAccessPrimarySuffix39774 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_fieldAccessPrimarySuffix39776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_typeArgumentMethodInvocationSuffix39858 = new BitSet(new long[]{0x0000000000100000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalNonWildcardTypeArguments_in_typeArgumentMethodInvocationSuffix39868 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_typeArgumentMethodInvocationSuffix39878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_arguments_in_typeArgumentMethodInvocationSuffix39880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_variableAccessByName39960 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_variableAccessByName39994 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_variableAccessByName39998 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayAccess40096 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_arrayAccess40100 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayAccess40102 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayAccess40136 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_arrayAccess40140 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayAccess40142 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_unparameterizedType_in_declaredClassLiteral40235 = new BitSet(new long[]{0x0000000000000000L,0x0000000011000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_declaredClassLiteral40269 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_declaredClassLiteral40304 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_declaredClassLiteral40306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_primitiveClassLiteral40384 = new BitSet(new long[]{0x0000000000000000L,0x0000000011000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_primitiveClassLiteral40418 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_primitiveClassLiteral40453 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_primitiveClassLiteral40455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VOID_in_voidClassLiteral40533 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_voidClassLiteral40535 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_voidClassLiteral40537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_arrayCreator40623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInitializerCreator_in_arrayCreator40664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInstantiatorCreator_in_arrayCreator40702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_arrayInitializerCreator40795 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_createdName_in_arrayInitializerCreator40797 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayInitializerCreator40807 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayInitializerCreator40809 = new BitSet(new long[]{0x0000000000000000L,0x0000000001400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayInitializerCreator40843 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayInitializerCreator40845 = new BitSet(new long[]{0x0000000000000000L,0x0000000001400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arrayInitializer_in_arrayInitializerCreator40880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NEW_in_arrayInstantiatorCreator40958 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_createdName_in_arrayInstantiatorCreator40960 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arrayInstantiatorExpressionList_in_arrayInstantiatorCreator40970 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayInstantiatorCreator40994 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayInstantiatorCreator40996 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_splice_in_arrayInstantiatorExpressionList41133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInstantiatorExpression_in_arrayInstantiatorExpressionList41204 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arrayInstantiatorExpression_in_arrayInstantiatorExpressionList41252 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_arrayInstantiatorExpressionList_in_optionalArrayInstantiatorExpressionList41399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACKET_in_arrayInstantiatorExpression41532 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_expression_in_arrayInstantiatorExpression41534 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_arrayInstantiatorExpression41536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_variableInitializer41617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInitializer_in_variableInitializer41661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variableInitializer41699 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_variableInitializers41806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableInitializer_in_variableInitializers41877 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_variableInitializers41915 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180520205L,0x0000000000000001L});
    public static final BitSet FOLLOW_variableInitializer_in_variableInitializers41939 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_variableInitializers_in_optionalVariableInitializers42086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_arrayInitializer42219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACE_in_arrayInitializer42249 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C188D20205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalVariableInitializers_in_arrayInitializer42264 = new BitSet(new long[]{0x0000000000000000L,0x0000000008800000L});
    public static final BitSet FOLLOW_COMMA_in_arrayInitializer42278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_RBRACE_in_arrayInitializer42290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_createdName42382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_createdName42420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_optionalNonWildcardTypeArguments42513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LT_in_nonWildcardTypeArguments42610 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_referenceTypeList_in_nonWildcardTypeArguments42620 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_GT_in_nonWildcardTypeArguments42640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_arguments42708 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180320205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalExpressionList_in_arguments42718 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_arguments42728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_name42821 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_identifier_in_name42862 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_name42910 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_name42926 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_identifier_in_separatedQualifiedName43021 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_separatedQualifiedName43025 = new BitSet(new long[]{0x0000000000100002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_separatedQualifiedName43061 = new BitSet(new long[]{0x0000000000100002L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_INTLITERAL_in_intLiteral43157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LONGLITERAL_in_longLiteral43243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_intLiteral_in_lexicalLiteral43321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_longLiteral_in_lexicalLiteral43351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOATLITERAL_in_lexicalLiteral43381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOUBLELITERAL_in_lexicalLiteral43410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CHARLITERAL_in_lexicalLiteral43439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRINGLITERAL_in_lexicalLiteral43468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRUE_in_lexicalLiteral43497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FALSE_in_lexicalLiteral43526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NULL_in_lexicalLiteral43555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_codeLiteral_in_lexicalLiteral43581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_identifier43659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_identifier43686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENTIFIER_in_unsplicableIdentifier43764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classModifiers_in_classHeader43806 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_CLASS_in_classHeader43808 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_classHeader43810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumModifiers_in_enumHeader43830 = new BitSet(new long[]{0x0040000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_ENUM_in_enumHeader43833 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_enumHeader43835 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_enumHeader43838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceModifiers_in_interfaceHeader43858 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_interfaceHeader43860 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_interfaceHeader43862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationModifiers_in_annotationHeader43882 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_annotationHeader43884 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_annotationHeader43886 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_annotationHeader43888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classModifiers_in_typeHeader43908 = new BitSet(new long[]{0x0040800000000000L,0x0100000000000002L});
    public static final BitSet FOLLOW_enumModifiers_in_typeHeader43912 = new BitSet(new long[]{0x0040800000000000L,0x0100000000000002L});
    public static final BitSet FOLLOW_interfaceModifiers_in_typeHeader43916 = new BitSet(new long[]{0x0040800000000000L,0x0100000000000002L});
    public static final BitSet FOLLOW_annotationModifiers_in_typeHeader43920 = new BitSet(new long[]{0x0040800000000000L,0x0100000000000002L});
    public static final BitSet FOLLOW_CLASS_in_typeHeader43924 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_ENUM_in_typeHeader43926 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_MONKEYS_AT_in_typeHeader43929 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_INTERFACE_in_typeHeader43933 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_typeHeader43937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodModifiers_in_methodHeader43957 = new BitSet(new long[]{0x02104A0000100000L,0x0800000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_typeParameters_in_methodHeader43959 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000020205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_methodHeader43963 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_VOID_in_methodHeader43965 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_methodHeader43969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_LPAREN_in_methodHeader43971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldModifiers_in_fieldHeader43991 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_fieldHeader43993 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_fieldHeader43995 = new BitSet(new long[]{0x0000000000000000L,0x000000004D000000L});
    public static final BitSet FOLLOW_LBRACKET_in_fieldHeader43998 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_fieldHeader43999 = new BitSet(new long[]{0x0000000000000000L,0x000000004D000000L});
    public static final BitSet FOLLOW_set_in_fieldHeader44003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_localVariableHeader44029 = new BitSet(new long[]{0x02104A0000100000L,0x0000000000000205L,0x0000000000000001L});
    public static final BitSet FOLLOW_type_in_localVariableHeader44031 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_localVariableHeader44033 = new BitSet(new long[]{0x0000000000000000L,0x000000004D000000L});
    public static final BitSet FOLLOW_LBRACKET_in_localVariableHeader44036 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_RBRACKET_in_localVariableHeader44037 = new BitSet(new long[]{0x0000000000000000L,0x000000004D000000L});
    public static final BitSet FOLLOW_set_in_localVariableHeader44041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodModifiers_in_parseRule_AbstractMethodModifiers44118 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AbstractMethodModifiers44128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_parseRule_Annotation44206 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Annotation44216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_parseRule_Annotations44294 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Annotations44304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodDeclaration_in_parseRule_AnnotationMethodDeclaration44382 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnnotationMethodDeclaration44392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationModifiers_in_parseRule_AnnotationModifiers44470 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnnotationModifiers44480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeBody_in_parseRule_AnnotationTypeBody44558 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnnotationTypeBody44568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeElementDeclarations_in_parseRule_AnnotationTypeElementDeclarations44646 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnnotationTypeElementDeclarations44656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_parseRule_AnnotationTypeElementDeclaration44734 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnnotationTypeElementDeclaration44744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBody_in_parseRule_AnonymousClassBody44822 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnonymousClassBody44832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclarations_in_parseRule_AnonymousClassBodyDeclarations44910 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnonymousClassBodyDeclarations44920 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclaration_in_parseRule_AnonymousClassBodyDeclaration44998 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_AnonymousClassBodyDeclaration45008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_parseRule_ArgumentList45086 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ArgumentList45096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatement_in_parseRule_BlockStatement45174 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_BlockStatement45184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatementList_in_parseRule_BlockStatements45262 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_BlockStatements45272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catchClause_in_parseRule_CatchClause45350 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_CatchClause45360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_parseRule_Catches45438 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Catches45448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBody_in_parseRule_ClassBody45526 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ClassBody45536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_parseRule_ClassBodyDeclaration45614 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ClassBodyDeclaration45624 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBodyDeclarations_in_parseRule_ClassBodyDeclarations45702 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ClassBodyDeclarations45712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classModifiers_in_parseRule_ClassModifiers45790 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ClassModifiers45800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaredTypeList_in_parseRule_ClassOrInterfaceTypeList45878 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ClassOrInterfaceTypeList45888 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_compilationUnit_in_parseRule_CompilationUnit45967 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_CompilationUnit45978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaration_in_parseRule_ConstantDeclaration46056 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ConstantDeclaration46066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantModifiers_in_parseRule_ConstantModifiers46144 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ConstantModifiers46154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructorBody_in_parseRule_ConstructorBody46232 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ConstructorBody46242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructorDeclaration_in_parseRule_ConstructorDeclaration46320 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ConstructorDeclaration46330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructorModifiers_in_parseRule_ConstructorModifiers46408 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ConstructorModifiers46418 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValue_in_parseRule_ElementValue46496 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ElementValue46506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValues_in_parseRule_ElementValues46584 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ElementValues46594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValuePair_in_parseRule_ElementValuePair46672 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ElementValuePair46682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValuePairs_in_parseRule_ElementValuePairs46760 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ElementValuePairs46770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumBody_in_parseRule_EnumBody46848 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_EnumBody46858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstant_in_parseRule_EnumConstant46936 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_EnumConstant46946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstants_in_parseRule_EnumConstants47024 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_EnumConstants47034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumModifiers_in_parseRule_EnumModifiers47112 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_EnumModifiers47122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedTypeList_in_parseRule_ExceptionTypeList47200 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ExceptionTypeList47210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_parseRule_ExplicitConstructorInvocation47288 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ExplicitConstructorInvocation47298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldDeclaration_in_parseRule_FieldDeclaration47376 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_FieldDeclaration47386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldModifiers_in_parseRule_FieldModifiers47464 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_FieldModifiers47474 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forInit_in_parseRule_ForInit47552 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ForInit47562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameter_in_parseRule_FormalParameter47640 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_FormalParameter47650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifier_in_parseRule_Identifier47728 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Identifier47738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierList_in_parseRule_IdentifierList47816 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_IdentifierList47826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importDeclaration_in_parseRule_ImportDeclaration47904 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ImportDeclaration47914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importDeclarations_in_parseRule_ImportDeclarations47992 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ImportDeclarations48002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initializerBlock_in_parseRule_Initializer48080 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Initializer48090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBody_in_parseRule_InterfaceBody48168 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_InterfaceBody48178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_parseRule_InterfaceMemberDeclaration48256 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_InterfaceMemberDeclaration48266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBodyDeclarations_in_parseRule_InterfaceMemberDeclarations48344 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_InterfaceMemberDeclarations48354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceModifiers_in_parseRule_InterfaceModifiers48432 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_InterfaceModifiers48442 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EOF_in_parseRule_JavadocComment48530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localClassDeclaration_in_parseRule_LocalClassDeclaration48598 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_LocalClassDeclaration48608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localClassModifiers_in_parseRule_LocalClassModifiers48686 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_LocalClassModifiers48696 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_parseRule_MetaAnnotation48774 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotation48784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationList_in_parseRule_MetaAnnotationList48862 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotationList48872 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePair_in_parseRule_MetaAnnotationElement48950 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotationElement48960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePairs_in_parseRule_MetaAnnotationElements49038 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotationElements49048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_parseRule_MetaAnnotationElementValue49126 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotationElementValue49136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValues_in_parseRule_MetaAnnotationElementValues49214 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaAnnotationElementValues49224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bsjMetaprogram_in_parseRule_Metaprogram49302 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Metaprogram49312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependency_in_parseRule_MetaprogramDependency49390 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramDependency49400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclaration_in_parseRule_MetaprogramDependencyDeclaration49478 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramDependencyDeclaration49488 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclarationList_in_parseRule_MetaprogramDependencyDeclarationList49566 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramDependencyDeclarationList49576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyList_in_parseRule_MetaprogramDependencyList49654 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramDependencyList49664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramImport_in_parseRule_MetaprogramImportDeclaration49742 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramImportDeclaration49752 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaImportDeclarations_in_parseRule_MetaprogramImportDeclarationList49830 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramImportDeclarationList49840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramTarget_in_parseRule_MetaprogramTargetDeclaration49918 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramTargetDeclaration49928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramTargetList_in_parseRule_MetaprogramTargetDeclarationList50006 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MetaprogramTargetDeclarationList50016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodDeclaration_in_parseRule_MethodDeclaration50094 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MethodDeclaration50104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodModifiers_in_parseRule_MethodModifiers50182 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_MethodModifiers50192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_name_in_parseRule_Name50270 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Name50280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageDeclaration_in_parseRule_PackageDeclaration50358 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_PackageDeclaration50368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_preamble_in_parseRule_Preamble50446 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Preamble50456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referenceTypeList_in_parseRule_ReferenceTypeList50534 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_ReferenceTypeList50544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpressionList_in_parseRule_StatementExpressionList50622 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_StatementExpressionList50632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchBlockStatementGroup_in_parseRule_SwitchBlockStatementGroup50710 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_SwitchBlockStatementGroup50720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchBlockStatementGroups_in_parseRule_SwitchBlockStatementGroups50798 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_SwitchBlockStatementGroups50808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_parseRule_Type50886 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Type50896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArguments_in_parseRule_TypeArguments50974 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_TypeArguments50984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclaration_in_parseRule_TypeDeclaration51062 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_TypeDeclaration51072 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclarations_in_parseRule_TypeDeclarations51150 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_TypeDeclarations51160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameter_in_parseRule_TypeParameter51238 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_TypeParameter51248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_parseRule_TypeParameters51326 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_TypeParameters51336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarator_in_parseRule_VariableDeclarator51414 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_VariableDeclarator51424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarators_in_parseRule_VariableDeclarators51502 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_VariableDeclarators51512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableInitializer_in_parseRule_VariableInitializer51590 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_VariableInitializer51600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableInitializers_in_parseRule_VariableInitializers51678 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_VariableInitializers51688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_parseRule_VariableModifiers51766 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_VariableModifiers51776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_wildcard_in_parseRule_Wildcard51854 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_parseRule_Wildcard51864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred2_BsjAntlr289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred3_BsjAntlr426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred5_BsjAntlr603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred6_BsjAntlr728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred10_BsjAntlr1080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclaration_in_synpred11_BsjAntlr1199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyDeclarationList_in_synpred12_BsjAntlr1346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred13_BsjAntlr1482 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred14_BsjAntlr1621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramDependencyList_in_synpred17_BsjAntlr1912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred18_BsjAntlr2045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred20_BsjAntlr2213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramTarget_in_synpred21_BsjAntlr2332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramTargetList_in_synpred22_BsjAntlr2479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred23_BsjAntlr2612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred24_BsjAntlr2832 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierList_in_synpred27_BsjAntlr3123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred28_BsjAntlr3745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_synpred29_BsjAntlr3864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationList_in_synpred30_BsjAntlr4011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred31_BsjAntlr4178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalMetaAnnotationElementValuePairs_in_synpred32_BsjAntlr4326 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_synpred33_BsjAntlr4400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_synpred34_BsjAntlr4275 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180720205L,0x0000000000000001L});
    public static final BitSet FOLLOW_optionalMetaAnnotationElementValuePairs_in_synpred34_BsjAntlr4326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_metaAnnotationElementValue_in_synpred34_BsjAntlr4400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_RPAREN_in_synpred34_BsjAntlr4472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred35_BsjAntlr4646 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValuePairs_in_synpred37_BsjAntlr4926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred38_BsjAntlr5066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred39_BsjAntlr5186 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_synpred40_BsjAntlr5216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_synpred41_BsjAntlr5245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred42_BsjAntlr5375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotationElementValues_in_synpred44_BsjAntlr5655 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred45_BsjAntlr5800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred47_BsjAntlr5962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred51_BsjAntlr6657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_packageDeclaration_in_synpred52_BsjAntlr6684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred53_BsjAntlr6803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred54_BsjAntlr6937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaprogramImport_in_synpred55_BsjAntlr7056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaImportDeclarations_in_synpred56_BsjAntlr7203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred57_BsjAntlr7350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importDeclaration_in_synpred58_BsjAntlr7469 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importDeclarations_in_synpred59_BsjAntlr7616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importStaticOnDemandBody_in_synpred60_BsjAntlr7763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importStaticSingleBody_in_synpred61_BsjAntlr7801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_importOnDemandBody_in_synpred62_BsjAntlr7839 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred63_BsjAntlr8294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred64_BsjAntlr8491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclaration_in_synpred65_BsjAntlr8610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeDeclarations_in_synpred66_BsjAntlr8757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred67_BsjAntlr8890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_synpred68_BsjAntlr8917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_synpred69_BsjAntlr8943 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred70_BsjAntlr9050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classHeader_in_synpred71_BsjAntlr9166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classHeader_in_synpred72_BsjAntlr9166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumHeader_in_synpred72_BsjAntlr9170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_metaAnnotation_in_synpred73_BsjAntlr9305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_synpred74_BsjAntlr9343 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classHeader_in_synpred86_BsjAntlr10883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred87_BsjAntlr10993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred90_BsjAntlr11215 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred93_BsjAntlr11458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred96_BsjAntlr11881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred98_BsjAntlr12061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeBound_in_synpred100_BsjAntlr12341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred101_BsjAntlr12477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred103_BsjAntlr12671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred106_BsjAntlr12870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstants_in_synpred108_BsjAntlr13150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred109_BsjAntlr13286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceHeader_in_synpred112_BsjAntlr13595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred113_BsjAntlr13713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred115_BsjAntlr13927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaredTypeList_in_synpred117_BsjAntlr14207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred118_BsjAntlr14354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referenceTypeList_in_synpred120_BsjAntlr14634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred121_BsjAntlr14767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred122_BsjAntlr14895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred123_BsjAntlr15021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred124_BsjAntlr15150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred126_BsjAntlr15292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_synpred127_BsjAntlr15411 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classBodyDeclarations_in_synpred128_BsjAntlr15558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred129_BsjAntlr15695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classMemberBsjMetaprogramAnchor_in_synpred130_BsjAntlr15735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_synpred131_BsjAntlr15761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initializerBlock_in_synpred132_BsjAntlr15787 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constructorDeclaration_in_synpred133_BsjAntlr15813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred134_BsjAntlr15931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclaration_in_synpred135_BsjAntlr16050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_anonymousClassBodyDeclarations_in_synpred136_BsjAntlr16197 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred137_BsjAntlr16334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_synpred138_BsjAntlr16361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_initializerBlock_in_synpred139_BsjAntlr16387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memberDecl_in_synpred140_BsjAntlr16413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldHeader_in_synpred141_BsjAntlr16525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodHeader_in_synpred142_BsjAntlr16558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classHeader_in_synpred143_BsjAntlr16591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classHeader_in_synpred144_BsjAntlr16591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumHeader_in_synpred144_BsjAntlr16593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceHeader_in_synpred145_BsjAntlr16626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceHeader_in_synpred146_BsjAntlr16626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationHeader_in_synpred146_BsjAntlr16628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred147_BsjAntlr16709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred148_BsjAntlr16736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred149_BsjAntlr16840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred151_BsjAntlr17036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_synpred152_BsjAntlr17074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred153_BsjAntlr17173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred157_BsjAntlr17525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred158_BsjAntlr17680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_synpred159_BsjAntlr17799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceBodyDeclarations_in_synpred160_BsjAntlr17946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred161_BsjAntlr18083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaration_in_synpred162_BsjAntlr18110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodDeclaration_in_synpred163_BsjAntlr18147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_synpred164_BsjAntlr18176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_synpred165_BsjAntlr18205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_synpred166_BsjAntlr18234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred167_BsjAntlr18353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred170_BsjAntlr18632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred171_BsjAntlr18784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarators_in_synpred173_BsjAntlr19064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred174_BsjAntlr19200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred177_BsjAntlr19407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred178_BsjAntlr19529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedTypeList_in_synpred180_BsjAntlr19809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_synpred182_BsjAntlr20030 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_arrayTypeCounter_in_synpred182_BsjAntlr20064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred183_BsjAntlr20207 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_synpred184_BsjAntlr20267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unparameterizedType_in_synpred188_BsjAntlr20483 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_typeArguments_in_synpred188_BsjAntlr20517 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_synpred188_BsjAntlr20563 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_synpred188_BsjAntlr20567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred190_BsjAntlr20627 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_DOT_in_synpred190_BsjAntlr20662 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_synpred190_BsjAntlr20666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred191_BsjAntlr20794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred199_BsjAntlr21146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred202_BsjAntlr21576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_referenceType_in_synpred203_BsjAntlr21603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred204_BsjAntlr21707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameterDecls_in_synpred207_BsjAntlr21972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecls_in_synpred208_BsjAntlr22077 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_COMMA_in_synpred208_BsjAntlr22087 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_ellipsisParameterDecl_in_synpred208_BsjAntlr22097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecls_in_synpred209_BsjAntlr22123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred210_BsjAntlr22241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_synpred211_BsjAntlr22350 = new BitSet(new long[]{0x0080008000000000L,0x010000000004ACE8L,0x0000000000000001L});
    public static final BitSet FOLLOW_normalParameterDecl_in_synpred211_BsjAntlr22374 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalParameterDecls_in_synpred212_BsjAntlr22521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred213_BsjAntlr22654 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred217_BsjAntlr23230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alternateConstructorInvocation_in_synpred218_BsjAntlr23257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred219_BsjAntlr23375 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_synpred221_BsjAntlr23641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred222_BsjAntlr23780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_optionalElementValuePairs_in_synpred223_BsjAntlr23894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValue_in_synpred224_BsjAntlr23956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred226_BsjAntlr24160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValuePairs_in_synpred228_BsjAntlr24440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred229_BsjAntlr24580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred230_BsjAntlr24703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_synpred231_BsjAntlr24730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_synpred232_BsjAntlr24759 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred233_BsjAntlr24881 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValues_in_synpred236_BsjAntlr25172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred237_BsjAntlr25321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred238_BsjAntlr25451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred239_BsjAntlr25595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred240_BsjAntlr25738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_synpred241_BsjAntlr25857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeElementDeclarations_in_synpred242_BsjAntlr26004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodDeclaration_in_synpred243_BsjAntlr26140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constantDeclaration_in_synpred244_BsjAntlr26169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_synpred245_BsjAntlr26198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_synpred246_BsjAntlr26227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_synpred247_BsjAntlr26256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_synpred248_BsjAntlr26285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_noOp_in_synpred249_BsjAntlr26314 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred250_BsjAntlr26424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred252_BsjAntlr26740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatement_in_synpred253_BsjAntlr26859 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockStatementList_in_synpred254_BsjAntlr27006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred255_BsjAntlr27143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableHeader_in_synpred256_BsjAntlr27171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeHeader_in_synpred257_BsjAntlr27204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_synpred258_BsjAntlr27236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred259_BsjAntlr27354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred260_BsjAntlr27558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_blockAsStatement_in_synpred261_BsjAntlr27599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_assertStatement_in_synpred262_BsjAntlr27637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ifStatement_in_synpred263_BsjAntlr27675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forStatement_in_synpred264_BsjAntlr27713 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whileStatement_in_synpred265_BsjAntlr27751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_doWhileStatement_in_synpred266_BsjAntlr27789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tryStatement_in_synpred267_BsjAntlr27827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchStatement_in_synpred268_BsjAntlr27865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_synchronizedStatement_in_synpred269_BsjAntlr27903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_returnStatement_in_synpred270_BsjAntlr27941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_throwStatement_in_synpred271_BsjAntlr27979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_breakStatement_in_synpred272_BsjAntlr28017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_continueStatement_in_synpred273_BsjAntlr28055 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionStatement_in_synpred274_BsjAntlr28093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_labeledStatement_in_synpred275_BsjAntlr28131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ELSE_in_synpred277_BsjAntlr28544 = new BitSet(new long[]{0x161A4F00001FFF10L,0x010003C1845B7305L,0x0000000000000001L});
    public static final BitSet FOLLOW_statement_in_synpred277_BsjAntlr28548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForStatement_in_synpred278_BsjAntlr28661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forInit_in_synpred279_BsjAntlr28936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred281_BsjAntlr29329 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_FINALLY_in_synpred281_BsjAntlr29331 = new BitSet(new long[]{0x0000000000000000L,0x0100000000400000L,0x0000000000000001L});
    public static final BitSet FOLLOW_block_in_synpred281_BsjAntlr29335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred282_BsjAntlr29378 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred286_BsjAntlr30459 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catchClause_in_synpred287_BsjAntlr30578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred288_BsjAntlr30725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred289_BsjAntlr30861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred290_BsjAntlr31094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchBlockStatementGroups_in_synpred292_BsjAntlr31360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred293_BsjAntlr31493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred296_BsjAntlr31896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_synpred297_BsjAntlr31923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred298_BsjAntlr32129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpressionList_in_synpred300_BsjAntlr32409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred301_BsjAntlr32556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_synpred303_BsjAntlr32836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred304_BsjAntlr33195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_synpred339_BsjAntlr36823 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_intLiteral_in_synpred339_BsjAntlr36825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_synpred340_BsjAntlr36855 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_longLiteral_in_synpred340_BsjAntlr36857 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUB_in_synpred341_BsjAntlr36888 = new BitSet(new long[]{0x02104A00001FFF10L,0x010003C180120205L,0x0000000000000001L});
    public static final BitSet FOLLOW_unaryExpression_in_synpred341_BsjAntlr36892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_synpred346_BsjAntlr37162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred347_BsjAntlr37370 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred350_BsjAntlr37632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayCreator_in_synpred351_BsjAntlr37671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primarySuffix_in_synpred352_BsjAntlr37757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred353_BsjAntlr37860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_lexicalLiteral_in_synpred354_BsjAntlr37901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveClassLiteral_in_synpred355_BsjAntlr37939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_declaredClassLiteral_in_synpred356_BsjAntlr37977 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thisClause_in_synpred358_BsjAntlr38053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unqualifiedClassInstantiation_in_synpred360_BsjAntlr38129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_superMethodInvocation_in_synpred361_BsjAntlr38167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_superFieldAccess_in_synpred362_BsjAntlr38205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodInvocationByName_in_synpred363_BsjAntlr38243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeQualifiedTypeArgumentMethodInvocation_in_synpred364_BsjAntlr38281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedClassInstantiationPrimarySuffix_in_synpred366_BsjAntlr38495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeArgumentMethodInvocationSuffix_in_synpred367_BsjAntlr38546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred370_BsjAntlr38902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred372_BsjAntlr39046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred375_BsjAntlr39327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DOT_in_synpred379_BsjAntlr39994 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_identifier_in_synpred379_BsjAntlr39998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred383_BsjAntlr40623 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInitializerCreator_in_synpred384_BsjAntlr40664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred387_BsjAntlr41133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred390_BsjAntlr41617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayInitializer_in_synpred391_BsjAntlr41661 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred392_BsjAntlr41806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableInitializers_in_synpred394_BsjAntlr42086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred395_BsjAntlr42219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_synpred397_BsjAntlr42382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred399_BsjAntlr42821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_splice_in_synpred411_BsjAntlr43659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classModifiers_in_synpred413_BsjAntlr43908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumModifiers_in_synpred414_BsjAntlr43912 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceModifiers_in_synpred415_BsjAntlr43916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_synpred420_BsjAntlr43963 = new BitSet(new long[]{0x0000000000000002L});

}
